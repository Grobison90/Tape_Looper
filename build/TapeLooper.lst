ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"TapeLooper.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1639:
  29              		.file 1 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 2


  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1639:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy3LedD2Ev,"axG",%progbits,_ZN5daisy3LedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy3LedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy3LedD2Ev:
  52              	.LVL1:
  53              	.LFB1844:
  54              		.file 2 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 3


  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  55              		.loc 2 25 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 25 13 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1844:
  65              		.weak	_ZN5daisy3LedD1Ev
  66              		.thumb_set _ZN5daisy3LedD1Ev,_ZN5daisy3LedD2Ev
  67              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy9DaisySeedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy9DaisySeedD2Ev:
  77              	.LVL2:
  78              	.LFB2555:
  79              		.file 3 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  80              		.loc 3 22 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LBB770:
  86              	.LBI770:
  87              		.file 4 "../../libDaisy//src/sys/system.h"
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 4


   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 5


  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  88              		.loc 4 97 5 view .LVU5
  89              		.loc 4 97 5 is_stmt 0 view .LVU6
  90              	.LBE770:
  91              	.LBB771:
  92              	.LBI771:
  93              		.file 5 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 6


  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  94              		.loc 5 42 5 is_stmt 1 view .LVU7
  95              		.loc 5 42 5 is_stmt 0 view .LVU8
  96              	.LBE771:
  97              	.LBB772:
  98              	.LBI772:
  99              		.file 6 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 7


  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 8


  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 100              		.loc 6 110 5 is_stmt 1 view .LVU9
 101              		.loc 6 110 5 is_stmt 0 view .LVU10
 102              	.LBE772:
 103              	.LBB773:
 104              	.LBI773:
 105              		.file 7 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 9


  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 10


  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 106              		.loc 7 96 5 is_stmt 1 view .LVU11
 107              		.loc 7 96 5 is_stmt 0 view .LVU12
 108              	.LBE773:
 109              		.loc 3 22 19 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE2555:
 114              		.weak	_ZN5daisy9DaisySeedD1Ev
 115              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 116 0002 00BF     		.section	.text._ZN8TapeLoopD2Ev,"axG",%progbits,_ZN8TapeLoopD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN8TapeLoopD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN8TapeLoopD2Ev:
 126              	.LVL3:
 127              	.LFB4716:
 128              		.file 8 "TapeLoop.h"
   1:TapeLoop.h    **** #include "daisysp.h"
   2:TapeLoop.h    **** #include "daisy.h"
   3:TapeLoop.h    **** #include "daisy_seed.h"
   4:TapeLoop.h    **** #include <stdint.h>
   5:TapeLoop.h    **** #include <stdlib.h>
   6:TapeLoop.h    **** #include <math.h>
   7:TapeLoop.h    **** 
   8:TapeLoop.h    **** using namespace daisysp;
   9:TapeLoop.h    **** using namespace daisy;
  10:TapeLoop.h    **** 
  11:TapeLoop.h    **** class TapeLoop
 129              		.loc 8 11 7 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 11


 133              		@ link register save eliminated.
 134              	.LBB774:
 135              	.LBI774:
 136              		.file 9 "../../DaisySP//Source/Noise/whitenoise.h"
   1:../../DaisySP//Source/Noise/whitenoise.h **** /*
   2:../../DaisySP//Source/Noise/whitenoise.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Noise/whitenoise.h **** 
   4:../../DaisySP//Source/Noise/whitenoise.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Noise/whitenoise.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Noise/whitenoise.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Noise/whitenoise.h **** */
   8:../../DaisySP//Source/Noise/whitenoise.h **** 
   9:../../DaisySP//Source/Noise/whitenoise.h **** #pragma once
  10:../../DaisySP//Source/Noise/whitenoise.h **** #ifndef DSY_WHITENOISE_H
  11:../../DaisySP//Source/Noise/whitenoise.h **** #define DSY_WHITENOISE_H
  12:../../DaisySP//Source/Noise/whitenoise.h **** #include <stdint.h>
  13:../../DaisySP//Source/Noise/whitenoise.h **** #ifdef __cplusplus
  14:../../DaisySP//Source/Noise/whitenoise.h **** namespace daisysp
  15:../../DaisySP//Source/Noise/whitenoise.h **** {
  16:../../DaisySP//Source/Noise/whitenoise.h **** /** fast white noise generator
  17:../../DaisySP//Source/Noise/whitenoise.h **** 
  18:../../DaisySP//Source/Noise/whitenoise.h ****     I think this came from musicdsp.org at some point
  19:../../DaisySP//Source/Noise/whitenoise.h **** */
  20:../../DaisySP//Source/Noise/whitenoise.h **** class WhiteNoise
  21:../../DaisySP//Source/Noise/whitenoise.h **** {
  22:../../DaisySP//Source/Noise/whitenoise.h ****   public:
  23:../../DaisySP//Source/Noise/whitenoise.h ****     WhiteNoise() {}
  24:../../DaisySP//Source/Noise/whitenoise.h ****     ~WhiteNoise() {}
 137              		.loc 9 24 5 view .LVU15
 138              		.loc 9 24 5 is_stmt 0 view .LVU16
 139              	.LBE774:
 140              		.loc 8 11 7 view .LVU17
 141 0000 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE4716:
 145              		.weak	_ZN8TapeLoopD1Ev
 146              		.thumb_set _ZN8TapeLoopD1Ev,_ZN8TapeLoopD2Ev
 147 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
 148              		.align	1
 149              		.p2align 2,,3
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv5-d16
 155              	__tcf_0:
 156              	.LFB5449:
 157              		.file 10 "TapeLooper.cpp"
   1:TapeLooper.cpp **** #include "daisy_seed.h"
   2:TapeLooper.cpp **** #include "daisysp.h"
   3:TapeLooper.cpp **** #include "System.h"
   4:TapeLooper.cpp **** #include "TapeLoop.h"
   5:TapeLooper.cpp **** #include <stdlib.h>
   6:TapeLooper.cpp **** #include <math.h>
   7:TapeLooper.cpp **** 
   8:TapeLooper.cpp **** using namespace daisy;
   9:TapeLooper.cpp **** using namespace daisysp;
  10:TapeLooper.cpp **** using namespace daisy::seed;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 12


  11:TapeLooper.cpp **** 
  12:TapeLooper.cpp **** 
  13:TapeLooper.cpp **** DaisySeed        hw;
  14:TapeLooper.cpp **** const int        num_adc_channels = 3;
  15:TapeLooper.cpp **** AdcChannelConfig adc_config[num_adc_channels];
  16:TapeLooper.cpp **** enum AdcChannel
  17:TapeLooper.cpp **** {
  18:TapeLooper.cpp ****     MUX         = 0,
  19:TapeLooper.cpp ****     QUALITY_POT = 1,
  20:TapeLooper.cpp ****     WARBLE_POT  = 2
  21:TapeLooper.cpp **** };
  22:TapeLooper.cpp **** 
  23:TapeLooper.cpp **** enum MUX_IDX
  24:TapeLooper.cpp **** {
  25:TapeLooper.cpp ****     VOL1 = 3,
  26:TapeLooper.cpp ****     VOL2 = 0,
  27:TapeLooper.cpp ****     VOL3 = 1,
  28:TapeLooper.cpp ****     VOL4 = 2,
  29:TapeLooper.cpp ****     TC1  = 5,
  30:TapeLooper.cpp ****     TC2  = 7,
  31:TapeLooper.cpp ****     TC3  = 6,
  32:TapeLooper.cpp ****     TC4  = 4
  33:TapeLooper.cpp **** 
  34:TapeLooper.cpp **** };
  35:TapeLooper.cpp **** 
  36:TapeLooper.cpp **** Pin MUX_A_PIN   = D18;
  37:TapeLooper.cpp **** Pin MUX_B_PIN   = D19;
  38:TapeLooper.cpp **** Pin MUX_C_PIN   = D20;
  39:TapeLooper.cpp **** Pin MUX_OUT_PIN = A2;
  40:TapeLooper.cpp **** Pin MUX_INH_PIN = D21;
  41:TapeLooper.cpp **** 
  42:TapeLooper.cpp **** //TODO need to define MUX pins 1-8
  43:TapeLooper.cpp **** 
  44:TapeLooper.cpp **** Pin QUALITY_PIN = A0;
  45:TapeLooper.cpp **** Pin WARBLE_PIN  = A1;
  46:TapeLooper.cpp **** 
  47:TapeLooper.cpp **** Pin trk1Sel_pin = D1;
  48:TapeLooper.cpp **** Pin trk2Sel_pin = D2;
  49:TapeLooper.cpp **** Pin trk3Sel_pin = D3;
  50:TapeLooper.cpp **** Pin trk4Sel_pin = D4;
  51:TapeLooper.cpp **** 
  52:TapeLooper.cpp **** Pin trk1LED_pin = D5;
  53:TapeLooper.cpp **** Pin trk2LED_pin = D6;
  54:TapeLooper.cpp **** Pin trk3LED_pin = D7;
  55:TapeLooper.cpp **** Pin trk4LED_pin = D8;
  56:TapeLooper.cpp **** 
  57:TapeLooper.cpp **** Pin ply_pin = D11;
  58:TapeLooper.cpp **** Pin rcd_pin = D12;
  59:TapeLooper.cpp **** 
  60:TapeLooper.cpp **** Switch track1_sel;
  61:TapeLooper.cpp **** Switch track2_sel;
  62:TapeLooper.cpp **** Switch track3_sel;
  63:TapeLooper.cpp **** Switch track4_sel;
  64:TapeLooper.cpp **** 
  65:TapeLooper.cpp **** 
  66:TapeLooper.cpp **** Switch play_pause_button;
  67:TapeLooper.cpp **** Switch record_button;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 13


  68:TapeLooper.cpp **** 
  69:TapeLooper.cpp **** Led   track1_LED;
  70:TapeLooper.cpp **** float track1_LED_Brightness = 1.f;
  71:TapeLooper.cpp **** Led   track2_LED;
  72:TapeLooper.cpp **** float track2_LED_Brightness = 1.f;
  73:TapeLooper.cpp **** Led   track3_LED;
  74:TapeLooper.cpp **** float track3_LED_Brightness = 1.f;
  75:TapeLooper.cpp **** Led   track4_LED;
  76:TapeLooper.cpp **** float track4_LED_Brightness = 1.f;
  77:TapeLooper.cpp **** 
  78:TapeLooper.cpp **** Led LEDs[4]{};
 158              		.loc 10 78 5 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              		.loc 10 78 5 is_stmt 0 view .LVU19
 164 0000 7047     		bx	lr
 165              		.cfi_endproc
 166              	.LFE5449:
 168 0002 00BF     		.section	.text.__tcf_1,"ax",%progbits
 169              		.align	1
 170              		.p2align 2,,3
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv5-d16
 176              	__tcf_1:
 177              	.LFB5454:
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE5454:
 186 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 187              		.align	1
 188              		.p2align 2,,3
 189              		.global	_Z13AudioCallbackPKPKfPPfj
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv5-d16
 195              	_Z13AudioCallbackPKPKfPPfj:
 196              	.LVL4:
 197              	.LFB4727:
  79:TapeLooper.cpp **** 
  80:TapeLooper.cpp **** float DSY_SDRAM_BSS track1_loc[2][TapeLoop::MAX_SIZE];
  81:TapeLooper.cpp **** TapeLoop            track1(track1_loc);
  82:TapeLooper.cpp **** float DSY_SDRAM_BSS track2_loc[2][TapeLoop::MAX_SIZE];
  83:TapeLooper.cpp **** TapeLoop            track2(track2_loc);
  84:TapeLooper.cpp **** float DSY_SDRAM_BSS track3_loc[2][TapeLoop::MAX_SIZE];
  85:TapeLooper.cpp **** TapeLoop            track3(track3_loc);
  86:TapeLooper.cpp **** float DSY_SDRAM_BSS track4_loc[2][TapeLoop::MAX_SIZE];
  87:TapeLooper.cpp **** TapeLoop            track4(track4_loc);
  88:TapeLooper.cpp **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 14


  89:TapeLooper.cpp **** int active_track = 0;
  90:TapeLooper.cpp **** 
  91:TapeLooper.cpp **** TapeLoop tracks[4] = {track1, track2, track3, track4}; //Expand these
  92:TapeLooper.cpp **** 
  93:TapeLooper.cpp **** enum TRACK_MODES
  94:TapeLooper.cpp **** {
  95:TapeLooper.cpp ****     TRACK_SPEED = 0,
  96:TapeLooper.cpp ****     TRACK_FADE  = 1,
  97:TapeLooper.cpp **** 
  98:TapeLooper.cpp **** };
  99:TapeLooper.cpp **** 
 100:TapeLooper.cpp **** 
 101:TapeLooper.cpp **** float quality = 1.f;
 102:TapeLooper.cpp **** float warble  = 0.f;
 103:TapeLooper.cpp **** 
 104:TapeLooper.cpp **** void tracks_Init()
 105:TapeLooper.cpp **** {
 106:TapeLooper.cpp ****     track1.Init(hw.AudioSampleRate());
 107:TapeLooper.cpp ****     track2.Init(hw.AudioSampleRate());
 108:TapeLooper.cpp ****     track3.Init(hw.AudioSampleRate());
 109:TapeLooper.cpp ****     track4.Init(hw.AudioSampleRate());
 110:TapeLooper.cpp **** }
 111:TapeLooper.cpp **** 
 112:TapeLooper.cpp **** /* 
 113:TapeLooper.cpp **** 
 114:TapeLooper.cpp **** */
 115:TapeLooper.cpp **** 
 116:TapeLooper.cpp **** float saturate_and_compress(float value)
 117:TapeLooper.cpp **** { //TODO tweak this???
 118:TapeLooper.cpp ****     float saturation = 30 * ((1 - quality) * (1.f - 0.1) + 0.1);
 119:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 120:TapeLooper.cpp ****     return saturated;
 121:TapeLooper.cpp **** }
 122:TapeLooper.cpp **** 
 123:TapeLooper.cpp **** void peripherals_Init()
 124:TapeLooper.cpp **** {
 125:TapeLooper.cpp ****     //INS
 126:TapeLooper.cpp ****     track1_sel.Init(trk1Sel_pin,
 127:TapeLooper.cpp ****                     0.0f,
 128:TapeLooper.cpp ****                     Switch::Type::TYPE_MOMENTARY,
 129:TapeLooper.cpp ****                     Switch::Polarity::POLARITY_INVERTED,
 130:TapeLooper.cpp ****                     Switch::Pull::PULL_UP);
 131:TapeLooper.cpp ****     track2_sel.Init(trk2Sel_pin,
 132:TapeLooper.cpp ****                     0.0f,
 133:TapeLooper.cpp ****                     Switch::Type::TYPE_MOMENTARY,
 134:TapeLooper.cpp ****                     Switch::Polarity::POLARITY_INVERTED,
 135:TapeLooper.cpp ****                     Switch::Pull::PULL_UP);
 136:TapeLooper.cpp ****     track3_sel.Init(trk3Sel_pin,
 137:TapeLooper.cpp ****                     0.0f,
 138:TapeLooper.cpp ****                     Switch::Type::TYPE_MOMENTARY,
 139:TapeLooper.cpp ****                     Switch::Polarity::POLARITY_INVERTED,
 140:TapeLooper.cpp ****                     Switch::Pull::PULL_UP);
 141:TapeLooper.cpp ****     track4_sel.Init(trk4Sel_pin,
 142:TapeLooper.cpp ****                     0.0f,
 143:TapeLooper.cpp ****                     Switch::Type::TYPE_MOMENTARY,
 144:TapeLooper.cpp ****                     Switch::Polarity::POLARITY_INVERTED,
 145:TapeLooper.cpp ****                     Switch::Pull::PULL_UP);
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 15


 146:TapeLooper.cpp ****     play_pause_button.Init(ply_pin, 0.f, Switch::Type::TYPE_TOGGLE, Switch::Polarity::POLARITY_NORM
 147:TapeLooper.cpp ****     record_button.Init(rcd_pin, 0.f, Switch::Type::TYPE_TOGGLE, Switch::Polarity::POLARITY_NORMAL, 
 148:TapeLooper.cpp **** 
 149:TapeLooper.cpp ****     //OUTS
 150:TapeLooper.cpp ****     track1_LED.Init(trk1LED_pin, false, 2000.f);
 151:TapeLooper.cpp ****     track2_LED.Init(trk2LED_pin, false);
 152:TapeLooper.cpp ****     track3_LED.Init(trk3LED_pin, false);
 153:TapeLooper.cpp ****     track4_LED.Init(trk4LED_pin, false);
 154:TapeLooper.cpp ****     LEDs[0] = track1_LED;
 155:TapeLooper.cpp ****     LEDs[1] = track2_LED;
 156:TapeLooper.cpp ****     LEDs[2] = track3_LED;
 157:TapeLooper.cpp ****     LEDs[3] = track4_LED;
 158:TapeLooper.cpp **** 
 159:TapeLooper.cpp ****     //Display
 160:TapeLooper.cpp ****     //ADC
 161:TapeLooper.cpp ****     adc_config[MUX].InitMux(MUX_OUT_PIN, 8, MUX_A_PIN, MUX_B_PIN, MUX_C_PIN);
 162:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
 163:TapeLooper.cpp ****     adc_config[WARBLE_POT].InitSingle(WARBLE_PIN);
 164:TapeLooper.cpp **** 
 165:TapeLooper.cpp ****     hw.adc.Init(adc_config, num_adc_channels);
 166:TapeLooper.cpp ****     hw.adc.Start();
 167:TapeLooper.cpp **** }
 168:TapeLooper.cpp **** 
 169:TapeLooper.cpp **** void blink(int led, int nTimes)
 170:TapeLooper.cpp **** {
 171:TapeLooper.cpp ****     while(nTimes + 1 > 0)
 172:TapeLooper.cpp ****     {
 173:TapeLooper.cpp ****         LEDs[led].Set(0.f);
 174:TapeLooper.cpp ****         LEDs[led].Update();
 175:TapeLooper.cpp ****         hw.DelayMs(100);
 176:TapeLooper.cpp ****         LEDs[led].Set(1.f);
 177:TapeLooper.cpp ****         LEDs[led].Update();
 178:TapeLooper.cpp ****         hw.DelayMs(100);
 179:TapeLooper.cpp ****         nTimes--;
 180:TapeLooper.cpp ****     }
 181:TapeLooper.cpp **** }
 182:TapeLooper.cpp **** 
 183:TapeLooper.cpp **** void update_track(int t, float tc)
 184:TapeLooper.cpp **** {
 185:TapeLooper.cpp **** 	play_pause_button.Debounce();
 186:TapeLooper.cpp ****     switch(tracks[t].get_Input_Mode())
 187:TapeLooper.cpp ****     {
 188:TapeLooper.cpp ****         case TRACK_SPEED:
 189:TapeLooper.cpp ****             tracks[t].set_Playback_Speed(play_pause_button.Pressed() ? tc : 0.5);
 190:TapeLooper.cpp ****             break;
 191:TapeLooper.cpp **** 
 192:TapeLooper.cpp **** 			case TRACK_FADE: tracks[t].set_Fade(tc); break;
 193:TapeLooper.cpp ****     }
 194:TapeLooper.cpp **** }
 195:TapeLooper.cpp **** 
 196:TapeLooper.cpp **** 
 197:TapeLooper.cpp **** void update_buttons()
 198:TapeLooper.cpp **** {
 199:TapeLooper.cpp ****     track1_sel.Debounce();
 200:TapeLooper.cpp ****     if(track1_sel.RisingEdge())
 201:TapeLooper.cpp ****     {
 202:TapeLooper.cpp ****         if(active_track == 0)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 16


 203:TapeLooper.cpp ****         {
 204:TapeLooper.cpp ****             tracks[active_track].next_Input_Mode();
 205:TapeLooper.cpp ****             blink(0, tracks[active_track].get_Input_Mode());
 206:TapeLooper.cpp ****         }
 207:TapeLooper.cpp ****         else
 208:TapeLooper.cpp ****         {
 209:TapeLooper.cpp ****             active_track = 0;
 210:TapeLooper.cpp ****         }
 211:TapeLooper.cpp ****     }
 212:TapeLooper.cpp **** 
 213:TapeLooper.cpp ****     track2_sel.Debounce();
 214:TapeLooper.cpp ****     if(track2_sel.RisingEdge())
 215:TapeLooper.cpp ****     {
 216:TapeLooper.cpp ****         if(active_track == 1)
 217:TapeLooper.cpp ****         {
 218:TapeLooper.cpp ****             tracks[active_track].next_Input_Mode();
 219:TapeLooper.cpp ****             blink(1, tracks[active_track].get_Input_Mode());
 220:TapeLooper.cpp ****         }
 221:TapeLooper.cpp ****         else
 222:TapeLooper.cpp ****         {
 223:TapeLooper.cpp ****             active_track = 1;
 224:TapeLooper.cpp ****         }
 225:TapeLooper.cpp ****     }
 226:TapeLooper.cpp **** 
 227:TapeLooper.cpp ****     track3_sel.Debounce();
 228:TapeLooper.cpp ****     if(track3_sel.RisingEdge())
 229:TapeLooper.cpp ****     {
 230:TapeLooper.cpp ****         if(active_track == 2)
 231:TapeLooper.cpp ****         {
 232:TapeLooper.cpp ****             tracks[active_track].next_Input_Mode();
 233:TapeLooper.cpp ****             blink(2, tracks[active_track].get_Input_Mode());
 234:TapeLooper.cpp ****         }
 235:TapeLooper.cpp ****         else
 236:TapeLooper.cpp ****         {
 237:TapeLooper.cpp ****             active_track = 2;
 238:TapeLooper.cpp ****         }
 239:TapeLooper.cpp ****     }
 240:TapeLooper.cpp **** 
 241:TapeLooper.cpp ****     track4_sel.Debounce();
 242:TapeLooper.cpp ****     if(track4_sel.RisingEdge())
 243:TapeLooper.cpp ****     {
 244:TapeLooper.cpp ****         if(active_track == 3)
 245:TapeLooper.cpp ****         {
 246:TapeLooper.cpp ****             tracks[active_track].next_Input_Mode();
 247:TapeLooper.cpp ****             blink(3, tracks[active_track].get_Input_Mode());
 248:TapeLooper.cpp ****         }
 249:TapeLooper.cpp ****         else
 250:TapeLooper.cpp ****         {
 251:TapeLooper.cpp ****             active_track = 3;
 252:TapeLooper.cpp ****         }
 253:TapeLooper.cpp ****     }
 254:TapeLooper.cpp **** }
 255:TapeLooper.cpp **** 
 256:TapeLooper.cpp **** void update_pots()
 257:TapeLooper.cpp **** { //TODO fix this for PCB implementation
 258:TapeLooper.cpp **** 
 259:TapeLooper.cpp **** tracks[0].set_Volume(hw.adc.GetMuxFloat(MUX, VOL1));
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 17


 260:TapeLooper.cpp **** tracks[1].set_Volume(hw.adc.GetMuxFloat(MUX, VOL2));
 261:TapeLooper.cpp **** tracks[2].set_Volume(hw.adc.GetMuxFloat(MUX, VOL3));
 262:TapeLooper.cpp **** tracks[3].set_Volume(hw.adc.GetMuxFloat(MUX, VOL4));
 263:TapeLooper.cpp **** 
 264:TapeLooper.cpp **** 
 265:TapeLooper.cpp **** update_track(0, (1.f - hw.adc.GetMuxFloat(MUX, TC1)));
 266:TapeLooper.cpp **** update_track(1, (1.f - hw.adc.GetMuxFloat(MUX, TC2)));
 267:TapeLooper.cpp **** update_track(2, (1.f - hw.adc.GetMuxFloat(MUX, TC3)));
 268:TapeLooper.cpp **** update_track(3, (1.f - hw.adc.GetMuxFloat(MUX, TC4)));
 269:TapeLooper.cpp ****     
 270:TapeLooper.cpp ****     quality = hw.adc.GetFloat(QUALITY_POT);
 271:TapeLooper.cpp ****     warble  = hw.adc.GetFloat(WARBLE_POT);
 272:TapeLooper.cpp **** }
 273:TapeLooper.cpp **** 
 274:TapeLooper.cpp **** void update_LEDs()
 275:TapeLooper.cpp **** {
 276:TapeLooper.cpp ****     int speed = 2;
 277:TapeLooper.cpp ****     for(int i = 0; i < 4; i++)
 278:TapeLooper.cpp ****     {
 279:TapeLooper.cpp ****         LEDs[i].Set(sin(tracks[i].get_Read_Head() * speed / hw.AudioSampleRate()) + 1.1);
 280:TapeLooper.cpp ****         LEDs[i].Update();
 281:TapeLooper.cpp ****     }
 282:TapeLooper.cpp **** }
 283:TapeLooper.cpp **** 
 284:TapeLooper.cpp **** void update()
 285:TapeLooper.cpp **** {
 286:TapeLooper.cpp ****     update_buttons();
 287:TapeLooper.cpp ****     update_pots();
 288:TapeLooper.cpp ****     update_LEDs();
 289:TapeLooper.cpp **** }
 290:TapeLooper.cpp **** 
 291:TapeLooper.cpp **** // std::vector<float> fade(std::vector<float> samps){
 292:TapeLooper.cpp **** 
 293:TapeLooper.cpp **** // }
 294:TapeLooper.cpp **** 
 295:TapeLooper.cpp **** // std::vector<float> mix_tracks(std::vector<float> t1, std::vector<float> t2, std::vector<float> t
 296:TapeLooper.cpp **** // 	float left = t1[0] + t2[0] + t3[0] + t4[0];
 297:TapeLooper.cpp **** // 	float right = t1[1] + t2[1] + t3[1] + t4[1];
 298:TapeLooper.cpp **** // 	return {left/5.f, right/5.f};
 299:TapeLooper.cpp **** // }
 300:TapeLooper.cpp **** 
 301:TapeLooper.cpp **** 
 302:TapeLooper.cpp **** void AudioCallback(AudioHandle::InputBuffer  in,
 303:TapeLooper.cpp ****                    AudioHandle::OutputBuffer out,
 304:TapeLooper.cpp ****                    size_t                    size)
 305:TapeLooper.cpp **** {
 198              		.loc 10 305 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 56
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 306:TapeLooper.cpp ****     for(size_t i = 0; i < size; i++)
 202              		.loc 10 306 5 view .LVU21
 203              	.LBB1188:
 204              		.loc 10 306 25 view .LVU22
 205              	.LBE1188:
 305:TapeLooper.cpp ****     for(size_t i = 0; i < size; i++)
 206              		.loc 10 305 1 is_stmt 0 view .LVU23
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 18


 207 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 208              		.cfi_def_cfa_offset 36
 209              		.cfi_offset 4, -36
 210              		.cfi_offset 5, -32
 211              		.cfi_offset 6, -28
 212              		.cfi_offset 7, -24
 213              		.cfi_offset 8, -20
 214              		.cfi_offset 9, -16
 215              		.cfi_offset 10, -12
 216              		.cfi_offset 11, -8
 217              		.cfi_offset 14, -4
 218 0004 2DED088B 		vpush.64	{d8, d9, d10, d11}
 219              		.cfi_def_cfa_offset 68
 220              		.cfi_offset 80, -68
 221              		.cfi_offset 81, -64
 222              		.cfi_offset 82, -60
 223              		.cfi_offset 83, -56
 224              		.cfi_offset 84, -52
 225              		.cfi_offset 85, -48
 226              		.cfi_offset 86, -44
 227              		.cfi_offset 87, -40
 228 0008 8FB0     		sub	sp, sp, #60
 229              		.cfi_def_cfa_offset 128
 305:TapeLooper.cpp ****     for(size_t i = 0; i < size; i++)
 230              		.loc 10 305 1 view .LVU24
 231 000a 0490     		str	r0, [sp, #16]
 232 000c 0191     		str	r1, [sp, #4]
 233              	.LBB1918:
 234              		.loc 10 306 25 view .LVU25
 235 000e 0592     		str	r2, [sp, #20]
 236 0010 002A     		cmp	r2, #0
 237 0012 00F0EE81 		beq	.L8
 238              		.loc 10 306 16 view .LVU26
 239 0016 0023     		movs	r3, #0
 240 0018 E34E     		ldr	r6, .L42+24
 241 001a 0293     		str	r3, [sp, #8]
 242              	.LVL5:
 243              	.L9:
 244              	.LBB1189:
 307:TapeLooper.cpp ****     {
 308:TapeLooper.cpp ****         tracks[0].advanceTapeHeads();
 245              		.loc 10 308 9 is_stmt 1 view .LVU27
 246              	.LBB1190:
 247              	.LBI1190:
  12:TapeLoop.h    **** {
  13:TapeLoop.h    ****   public:
  14:TapeLoop.h    ****     static const int MAX_SIZE
  15:TapeLoop.h    ****         = 32000
  16:TapeLoop.h    ****           * 10; //TODO 32000 samples/s * 60s/m * 2m = 2 minutes of sample at 32khz.
  17:TapeLoop.h    ****     float SAMPLE_RATE;
  18:TapeLoop.h    **** 
  19:TapeLoop.h    ****     TapeLoop(float (&track_location)[2][MAX_SIZE]) : track(track_location) {}
  20:TapeLoop.h    **** 
  21:TapeLoop.h    ****     void Init(float sample_rate)
  22:TapeLoop.h    ****     {
  23:TapeLoop.h    ****         SAMPLE_RATE = sample_rate;
  24:TapeLoop.h    **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 19


  25:TapeLoop.h    ****         blank_track();
  26:TapeLoop.h    **** 
  27:TapeLoop.h    ****         tape_noise.Init();
  28:TapeLoop.h    ****         tape_noise.SetAmp(tape_noise_amt);
  29:TapeLoop.h    **** 
  30:TapeLoop.h    ****         rdm          = std::default_random_engine(System::GetNow());
  31:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
  32:TapeLoop.h    ****         dist_normal
  33:TapeLoop.h    ****             = std::normal_distribution<float>(demag_size_mean, demag_size_sd);
  34:TapeLoop.h    ****     }
  35:TapeLoop.h    **** 
  36:TapeLoop.h    ****     void update_tape_speed(){
  37:TapeLoop.h    ****         float time_const = 48000 * 0.1; 
  38:TapeLoop.h    ****         tape_speed    = tape_speed + (tape_speed_target - tape_speed) / time_const;
  39:TapeLoop.h    ****     }
  40:TapeLoop.h    **** 
  41:TapeLoop.h    ****     void advanceTapeHeads()
 248              		.loc 8 41 10 view .LVU28
 249              	.LBB1191:
  42:TapeLoop.h    ****     {
  43:TapeLoop.h    ****        update_tape_speed();
 250              		.loc 8 43 8 view .LVU29
 251              	.LBB1192:
 252              	.LBI1192:
  36:TapeLoop.h    ****         float time_const = 48000 * 0.1; 
 253              		.loc 8 36 10 view .LVU30
 254              	.LBB1193:
  37:TapeLoop.h    ****         tape_speed    = tape_speed + (tape_speed_target - tape_speed) / time_const;
 255              		.loc 8 37 9 view .LVU31
  38:TapeLoop.h    ****     }
 256              		.loc 8 38 9 view .LVU32
  38:TapeLoop.h    ****     }
 257              		.loc 8 38 25 is_stmt 0 view .LVU33
 258 001c D6ED0C6A 		vldr.32	s13, [r6, #48]
 259              	.LBE1193:
 260              	.LBE1192:
  44:TapeLoop.h    **** 
  45:TapeLoop.h    ****         read_head       = fmod((read_head + tape_speed), static_cast<float>(MAX_SIZE));
  46:TapeLoop.h    ****         last_write_head = write_head;
  47:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 261              		.loc 8 47 31 view .LVU34
 262 0020 B7EE008B 		vmov.f64	d8, #1.0e+0
 263              	.LBB1197:
 264              	.LBB1194:
  38:TapeLoop.h    ****     }
 265              		.loc 8 38 57 view .LVU35
 266 0024 96ED0B7A 		vldr.32	s14, [r6, #44]
 267              	.LBE1194:
 268              	.LBE1197:
 269              	.LBE1191:
 270              	.LBE1190:
 271              	.LBB1213:
 272              	.LBB1214:
 273              	.LBB1215:
 274              	.LBB1216:
 275              	.LBB1217:
 276              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 20


   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 21


  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 277              		.loc 11 98 47 view .LVU36
 278 0028 4FF0000A 		mov	r10, #0
 279              	.LBE1217:
 280              	.LBE1216:
 281              	.LBE1215:
 282              	.LBE1214:
 283              	.LBE1213:
 284              	.LBB1231:
 285              	.LBB1210:
 286              	.LBB1198:
 287              	.LBB1195:
  38:TapeLoop.h    ****     }
 288              		.loc 8 38 71 view .LVU37
 289 002c 9FEDDF9A 		vldr.32	s18, .L42+28
  38:TapeLoop.h    ****     }
 290              		.loc 8 38 57 view .LVU38
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 22


 291 0030 37EE667A 		vsub.f32	s14, s14, s13
 292              	.LBE1195:
 293              	.LBE1198:
  45:TapeLoop.h    ****         last_write_head = write_head;
 294              		.loc 8 45 31 view .LVU39
 295 0034 96ED060A 		vldr.32	s0, [r6, #24]
 296              	.LBB1199:
 297              	.LBB1200:
 298              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 23


  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 24


 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 25


 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 26


 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 27


 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 299              		.loc 12 280 27 view .LVU40
 300 0038 DFEDDD0A 		vldr.32	s1, .L42+32
 301              	.LBE1200:
 302              	.LBE1199:
 303              	.LBB1203:
 304              	.LBB1196:
  38:TapeLoop.h    ****     }
 305              		.loc 8 38 71 view .LVU41
 306 003c C7EE097A 		vdiv.f32	s15, s14, s18
  38:TapeLoop.h    ****     }
 307              		.loc 8 38 36 view .LVU42
 308 0040 77EEA67A 		vadd.f32	s15, s15, s13
  38:TapeLoop.h    ****     }
 309              		.loc 8 38 23 view .LVU43
 310 0044 C6ED0C7A 		vstr.32	s15, [r6, #48]
 311              	.LBE1196:
 312              	.LBE1203:
 313              	.LBB1204:
 314              	.LBB1201:
 315              		.loc 12 280 27 view .LVU44
 316 0048 37EE800A 		vadd.f32	s0, s15, s0
 317              	.LVL6:
 318              		.loc 12 280 27 view .LVU45
 319              	.LBE1201:
 320              	.LBE1204:
  45:TapeLoop.h    ****         last_write_head = write_head;
 321              		.loc 8 45 9 is_stmt 1 view .LVU46
 322              	.LBB1205:
 323              	.LBI1199:
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 324              		.loc 12 279 3 view .LVU47
 325              	.LBB1202:
 326              		.loc 12 280 5 view .LVU48
 327              		.loc 12 280 27 is_stmt 0 view .LVU49
 328 004c FFF7FEFF 		bl	fmodf
 329              	.LVL7:
 330              		.loc 12 280 27 view .LVU50
 331              	.LBE1202:
 332              	.LBE1205:
 333              		.loc 8 47 33 view .LVU51
 334 0050 B7EEC07A 		vcvt.f64.f32	d7, s0
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 335              		.loc 8 46 25 view .LVU52
 336 0054 F369     		ldr	r3, [r6, #28]	@ float
  45:TapeLoop.h    ****         last_write_head = write_head;
 337              		.loc 8 45 25 view .LVU53
 338 0056 86ED060A 		vstr.32	s0, [r6, #24]
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 339              		.loc 8 46 25 view .LVU54
 340 005a 3362     		str	r3, [r6, #32]	@ float
 341              	.LBB1206:
 342              	.LBB1207:
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 28


 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 343              		.loc 12 293 18 view .LVU55
 344 005c 37EE480B 		vsub.f64	d0, d7, d8
 345 0060 9FEDCB1B 		vldr.64	d1, .L42
 346              	.LVL8:
 347              		.loc 12 293 18 view .LVU56
 348              	.LBE1207:
 349              	.LBE1206:
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 350              		.loc 8 46 9 is_stmt 1 view .LVU57
 351              		.loc 8 47 9 view .LVU58
 352              	.LBB1209:
 353              	.LBI1206:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 354              		.loc 12 290 5 view .LVU59
 355              	.LBB1208:
 356              		.loc 12 293 18 is_stmt 0 view .LVU60
 357 0064 FFF7FEFF 		bl	fmod
 358              	.LVL9:
 359              		.loc 12 293 18 view .LVU61
 360              	.LBE1208:
 361              	.LBE1209:
 362              	.LBE1210:
 363              	.LBE1231:
 364              	.LBB1232:
 365              	.LBB1233:
 366              	.LBB1234:
 367              	.LBB1235:
  38:TapeLoop.h    ****     }
 368              		.loc 8 38 25 view .LVU62
 369 0068 D6ED276A 		vldr.32	s13, [r6, #156]
  38:TapeLoop.h    ****     }
 370              		.loc 8 38 57 view .LVU63
 371 006c 96ED267A 		vldr.32	s14, [r6, #152]
 372              	.LBE1235:
 373              	.LBE1234:
 374              	.LBE1233:
 375              	.LBE1232:
 376              	.LBB1256:
 377              	.LBB1211:
 378              		.loc 8 47 31 view .LVU64
 379 0070 B7EEC00B 		vcvt.f32.f64	s0, d0
 380              	.LBE1211:
 381              	.LBE1256:
 382              	.LBB1257:
 383              	.LBB1252:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 29


  45:TapeLoop.h    ****         last_write_head = write_head;
 384              		.loc 8 45 31 view .LVU65
 385 0074 96ED216A 		vldr.32	s12, [r6, #132]
 386              	.LBB1239:
 387              	.LBB1236:
  38:TapeLoop.h    ****     }
 388              		.loc 8 38 57 view .LVU66
 389 0078 37EE667A 		vsub.f32	s14, s14, s13
 390              	.LBE1236:
 391              	.LBE1239:
 392              	.LBB1240:
 393              	.LBB1241:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 394              		.loc 12 280 27 view .LVU67
 395 007c DFEDCC0A 		vldr.32	s1, .L42+32
 396              	.LBE1241:
 397              	.LBE1240:
 398              	.LBE1252:
 399              	.LBE1257:
 400              	.LBB1258:
 401              	.LBB1212:
 402              		.loc 8 47 31 view .LVU68
 403 0080 86ED070A 		vstr.32	s0, [r6, #28]
 404              	.LVL10:
 405              		.loc 8 47 31 view .LVU69
 406              	.LBE1212:
 407              	.LBE1258:
 309:TapeLooper.cpp ****         tracks[1].advanceTapeHeads();
 408              		.loc 10 309 9 is_stmt 1 view .LVU70
 409              	.LBB1259:
 410              	.LBI1232:
  41:TapeLoop.h    ****     {
 411              		.loc 8 41 10 view .LVU71
 412              	.LBB1253:
  43:TapeLoop.h    **** 
 413              		.loc 8 43 8 view .LVU72
 414              	.LBB1244:
 415              	.LBI1234:
  36:TapeLoop.h    ****         float time_const = 48000 * 0.1; 
 416              		.loc 8 36 10 view .LVU73
 417              	.LBB1237:
  37:TapeLoop.h    ****         tape_speed    = tape_speed + (tape_speed_target - tape_speed) / time_const;
 418              		.loc 8 37 9 view .LVU74
  38:TapeLoop.h    ****     }
 419              		.loc 8 38 9 view .LVU75
  38:TapeLoop.h    ****     }
 420              		.loc 8 38 71 is_stmt 0 view .LVU76
 421 0084 C7EE097A 		vdiv.f32	s15, s14, s18
  38:TapeLoop.h    ****     }
 422              		.loc 8 38 36 view .LVU77
 423 0088 77EEA67A 		vadd.f32	s15, s15, s13
 424              	.LBE1237:
 425              	.LBE1244:
 426              	.LBB1245:
 427              	.LBB1242:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 428              		.loc 12 280 27 view .LVU78
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 30


 429 008c 37EE860A 		vadd.f32	s0, s15, s12
 430              	.LBE1242:
 431              	.LBE1245:
 432              	.LBB1246:
 433              	.LBB1238:
  38:TapeLoop.h    ****     }
 434              		.loc 8 38 23 view .LVU79
 435 0090 C6ED277A 		vstr.32	s15, [r6, #156]
 436              	.LVL11:
  38:TapeLoop.h    ****     }
 437              		.loc 8 38 23 view .LVU80
 438              	.LBE1238:
 439              	.LBE1246:
  45:TapeLoop.h    ****         last_write_head = write_head;
 440              		.loc 8 45 9 is_stmt 1 view .LVU81
 441              	.LBB1247:
 442              	.LBI1240:
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 443              		.loc 12 279 3 view .LVU82
 444              	.LBB1243:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 445              		.loc 12 280 5 view .LVU83
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 446              		.loc 12 280 27 is_stmt 0 view .LVU84
 447 0094 FFF7FEFF 		bl	fmodf
 448              	.LVL12:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 449              		.loc 12 280 27 view .LVU85
 450              	.LBE1243:
 451              	.LBE1247:
 452              		.loc 8 47 33 view .LVU86
 453 0098 B7EEC07A 		vcvt.f64.f32	d7, s0
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 454              		.loc 8 46 25 view .LVU87
 455 009c D6F88830 		ldr	r3, [r6, #136]	@ float
  45:TapeLoop.h    ****         last_write_head = write_head;
 456              		.loc 8 45 25 view .LVU88
 457 00a0 86ED210A 		vstr.32	s0, [r6, #132]
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 458              		.loc 8 46 25 view .LVU89
 459 00a4 C6F88C30 		str	r3, [r6, #140]	@ float
 460              	.LBB1248:
 461              	.LBB1249:
 462              		.loc 12 293 18 view .LVU90
 463 00a8 37EE480B 		vsub.f64	d0, d7, d8
 464 00ac 9FEDB81B 		vldr.64	d1, .L42
 465              	.LVL13:
 466              		.loc 12 293 18 view .LVU91
 467              	.LBE1249:
 468              	.LBE1248:
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 469              		.loc 8 46 9 is_stmt 1 view .LVU92
 470              		.loc 8 47 9 view .LVU93
 471              	.LBB1251:
 472              	.LBI1248:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 473              		.loc 12 290 5 view .LVU94
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 31


 474              	.LBB1250:
 475              		.loc 12 293 18 is_stmt 0 view .LVU95
 476 00b0 FFF7FEFF 		bl	fmod
 477              	.LVL14:
 478              		.loc 12 293 18 view .LVU96
 479              	.LBE1250:
 480              	.LBE1251:
 481              	.LBE1253:
 482              	.LBE1259:
 483              	.LBB1260:
 484              	.LBB1261:
 485              	.LBB1262:
 486              	.LBB1263:
  38:TapeLoop.h    ****     }
 487              		.loc 8 38 25 view .LVU97
 488 00b4 D6ED426A 		vldr.32	s13, [r6, #264]
  38:TapeLoop.h    ****     }
 489              		.loc 8 38 57 view .LVU98
 490 00b8 96ED417A 		vldr.32	s14, [r6, #260]
 491              	.LBE1263:
 492              	.LBE1262:
 493              	.LBE1261:
 494              	.LBE1260:
 495              	.LBB1284:
 496              	.LBB1254:
 497              		.loc 8 47 31 view .LVU99
 498 00bc B7EEC00B 		vcvt.f32.f64	s0, d0
 499              	.LBE1254:
 500              	.LBE1284:
 501              	.LBB1285:
 502              	.LBB1280:
  45:TapeLoop.h    ****         last_write_head = write_head;
 503              		.loc 8 45 31 view .LVU100
 504 00c0 96ED3C6A 		vldr.32	s12, [r6, #240]
 505              	.LBB1267:
 506              	.LBB1264:
  38:TapeLoop.h    ****     }
 507              		.loc 8 38 57 view .LVU101
 508 00c4 37EE667A 		vsub.f32	s14, s14, s13
 509              	.LBE1264:
 510              	.LBE1267:
 511              	.LBB1268:
 512              	.LBB1269:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 513              		.loc 12 280 27 view .LVU102
 514 00c8 DFEDB90A 		vldr.32	s1, .L42+32
 515              	.LBE1269:
 516              	.LBE1268:
 517              	.LBE1280:
 518              	.LBE1285:
 519              	.LBB1286:
 520              	.LBB1255:
 521              		.loc 8 47 31 view .LVU103
 522 00cc 86ED220A 		vstr.32	s0, [r6, #136]
 523              	.LVL15:
 524              		.loc 8 47 31 view .LVU104
 525              	.LBE1255:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 32


 526              	.LBE1286:
 310:TapeLooper.cpp ****         tracks[2].advanceTapeHeads();
 527              		.loc 10 310 9 is_stmt 1 view .LVU105
 528              	.LBB1287:
 529              	.LBI1260:
  41:TapeLoop.h    ****     {
 530              		.loc 8 41 10 view .LVU106
 531              	.LBB1281:
  43:TapeLoop.h    **** 
 532              		.loc 8 43 8 view .LVU107
 533              	.LBB1272:
 534              	.LBI1262:
  36:TapeLoop.h    ****         float time_const = 48000 * 0.1; 
 535              		.loc 8 36 10 view .LVU108
 536              	.LBB1265:
  37:TapeLoop.h    ****         tape_speed    = tape_speed + (tape_speed_target - tape_speed) / time_const;
 537              		.loc 8 37 9 view .LVU109
  38:TapeLoop.h    ****     }
 538              		.loc 8 38 9 view .LVU110
  38:TapeLoop.h    ****     }
 539              		.loc 8 38 71 is_stmt 0 view .LVU111
 540 00d0 C7EE097A 		vdiv.f32	s15, s14, s18
  38:TapeLoop.h    ****     }
 541              		.loc 8 38 36 view .LVU112
 542 00d4 77EEA67A 		vadd.f32	s15, s15, s13
 543              	.LBE1265:
 544              	.LBE1272:
 545              	.LBB1273:
 546              	.LBB1270:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 547              		.loc 12 280 27 view .LVU113
 548 00d8 37EE860A 		vadd.f32	s0, s15, s12
 549              	.LBE1270:
 550              	.LBE1273:
 551              	.LBB1274:
 552              	.LBB1266:
  38:TapeLoop.h    ****     }
 553              		.loc 8 38 23 view .LVU114
 554 00dc C6ED427A 		vstr.32	s15, [r6, #264]
 555              	.LVL16:
  38:TapeLoop.h    ****     }
 556              		.loc 8 38 23 view .LVU115
 557              	.LBE1266:
 558              	.LBE1274:
  45:TapeLoop.h    ****         last_write_head = write_head;
 559              		.loc 8 45 9 is_stmt 1 view .LVU116
 560              	.LBB1275:
 561              	.LBI1268:
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 562              		.loc 12 279 3 view .LVU117
 563              	.LBB1271:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 564              		.loc 12 280 5 view .LVU118
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 565              		.loc 12 280 27 is_stmt 0 view .LVU119
 566 00e0 FFF7FEFF 		bl	fmodf
 567              	.LVL17:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 33


 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 568              		.loc 12 280 27 view .LVU120
 569              	.LBE1271:
 570              	.LBE1275:
 571              		.loc 8 47 33 view .LVU121
 572 00e4 B7EEC07A 		vcvt.f64.f32	d7, s0
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 573              		.loc 8 46 25 view .LVU122
 574 00e8 D6F8F430 		ldr	r3, [r6, #244]	@ float
  45:TapeLoop.h    ****         last_write_head = write_head;
 575              		.loc 8 45 25 view .LVU123
 576 00ec 86ED3C0A 		vstr.32	s0, [r6, #240]
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 577              		.loc 8 46 25 view .LVU124
 578 00f0 C6F8F830 		str	r3, [r6, #248]	@ float
 579              	.LBB1276:
 580              	.LBB1277:
 581              		.loc 12 293 18 view .LVU125
 582 00f4 37EE480B 		vsub.f64	d0, d7, d8
 583 00f8 9FEDA51B 		vldr.64	d1, .L42
 584              	.LVL18:
 585              		.loc 12 293 18 view .LVU126
 586              	.LBE1277:
 587              	.LBE1276:
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 588              		.loc 8 46 9 is_stmt 1 view .LVU127
 589              		.loc 8 47 9 view .LVU128
 590              	.LBB1279:
 591              	.LBI1276:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 592              		.loc 12 290 5 view .LVU129
 593              	.LBB1278:
 594              		.loc 12 293 18 is_stmt 0 view .LVU130
 595 00fc FFF7FEFF 		bl	fmod
 596              	.LVL19:
 597              		.loc 12 293 18 view .LVU131
 598              	.LBE1278:
 599              	.LBE1279:
 600              	.LBE1281:
 601              	.LBE1287:
 602              	.LBB1288:
 603              	.LBB1289:
 604              	.LBB1290:
 605              	.LBB1291:
  38:TapeLoop.h    ****     }
 606              		.loc 8 38 25 view .LVU132
 607 0100 D6ED5D6A 		vldr.32	s13, [r6, #372]
  38:TapeLoop.h    ****     }
 608              		.loc 8 38 57 view .LVU133
 609 0104 96ED5C7A 		vldr.32	s14, [r6, #368]
 610              	.LBE1291:
 611              	.LBE1290:
 612              	.LBE1289:
 613              	.LBE1288:
 614              	.LBB1311:
 615              	.LBB1282:
 616              		.loc 8 47 31 view .LVU134
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 34


 617 0108 B7EEC00B 		vcvt.f32.f64	s0, d0
 618              	.LBE1282:
 619              	.LBE1311:
 620              	.LBB1312:
 621              	.LBB1308:
  45:TapeLoop.h    ****         last_write_head = write_head;
 622              		.loc 8 45 31 view .LVU135
 623 010c 96ED576A 		vldr.32	s12, [r6, #348]
 624              	.LBB1295:
 625              	.LBB1292:
  38:TapeLoop.h    ****     }
 626              		.loc 8 38 57 view .LVU136
 627 0110 37EE667A 		vsub.f32	s14, s14, s13
 628              	.LBE1292:
 629              	.LBE1295:
 630              	.LBB1296:
 631              	.LBB1297:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 632              		.loc 12 280 27 view .LVU137
 633 0114 DFEDA60A 		vldr.32	s1, .L42+32
 634              	.LBE1297:
 635              	.LBE1296:
 636              	.LBE1308:
 637              	.LBE1312:
 638              	.LBB1313:
 639              	.LBB1283:
 640              		.loc 8 47 31 view .LVU138
 641 0118 86ED3D0A 		vstr.32	s0, [r6, #244]
 642              	.LVL20:
 643              		.loc 8 47 31 view .LVU139
 644              	.LBE1283:
 645              	.LBE1313:
 311:TapeLooper.cpp ****         tracks[3].advanceTapeHeads();
 646              		.loc 10 311 9 is_stmt 1 view .LVU140
 647              	.LBB1314:
 648              	.LBI1288:
  41:TapeLoop.h    ****     {
 649              		.loc 8 41 10 view .LVU141
 650              	.LBB1309:
  43:TapeLoop.h    **** 
 651              		.loc 8 43 8 view .LVU142
 652              	.LBB1300:
 653              	.LBI1290:
  36:TapeLoop.h    ****         float time_const = 48000 * 0.1; 
 654              		.loc 8 36 10 view .LVU143
 655              	.LBB1293:
  37:TapeLoop.h    ****         tape_speed    = tape_speed + (tape_speed_target - tape_speed) / time_const;
 656              		.loc 8 37 9 view .LVU144
  38:TapeLoop.h    ****     }
 657              		.loc 8 38 9 view .LVU145
  38:TapeLoop.h    ****     }
 658              		.loc 8 38 71 is_stmt 0 view .LVU146
 659 011c C7EE097A 		vdiv.f32	s15, s14, s18
  38:TapeLoop.h    ****     }
 660              		.loc 8 38 36 view .LVU147
 661 0120 77EEA67A 		vadd.f32	s15, s15, s13
 662              	.LBE1293:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 35


 663              	.LBE1300:
 664              	.LBB1301:
 665              	.LBB1298:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 666              		.loc 12 280 27 view .LVU148
 667 0124 37EE860A 		vadd.f32	s0, s15, s12
 668              	.LBE1298:
 669              	.LBE1301:
 670              	.LBB1302:
 671              	.LBB1294:
  38:TapeLoop.h    ****     }
 672              		.loc 8 38 23 view .LVU149
 673 0128 C6ED5D7A 		vstr.32	s15, [r6, #372]
 674              	.LVL21:
  38:TapeLoop.h    ****     }
 675              		.loc 8 38 23 view .LVU150
 676              	.LBE1294:
 677              	.LBE1302:
  45:TapeLoop.h    ****         last_write_head = write_head;
 678              		.loc 8 45 9 is_stmt 1 view .LVU151
 679              	.LBB1303:
 680              	.LBI1296:
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 681              		.loc 12 279 3 view .LVU152
 682              	.LBB1299:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 683              		.loc 12 280 5 view .LVU153
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 684              		.loc 12 280 27 is_stmt 0 view .LVU154
 685 012c FFF7FEFF 		bl	fmodf
 686              	.LVL22:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 687              		.loc 12 280 27 view .LVU155
 688              	.LBE1299:
 689              	.LBE1303:
 690              		.loc 8 47 33 view .LVU156
 691 0130 B7EEC07A 		vcvt.f64.f32	d7, s0
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 692              		.loc 8 46 25 view .LVU157
 693 0134 D6F86031 		ldr	r3, [r6, #352]	@ float
  45:TapeLoop.h    ****         last_write_head = write_head;
 694              		.loc 8 45 25 view .LVU158
 695 0138 86ED570A 		vstr.32	s0, [r6, #348]
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 696              		.loc 8 46 25 view .LVU159
 697 013c C6F86431 		str	r3, [r6, #356]	@ float
 698              	.LBB1304:
 699              	.LBB1305:
 700              		.loc 12 293 18 view .LVU160
 701 0140 37EE480B 		vsub.f64	d0, d7, d8
 702 0144 9FED921B 		vldr.64	d1, .L42
 703              	.LVL23:
 704              		.loc 12 293 18 view .LVU161
 705              	.LBE1305:
 706              	.LBE1304:
  46:TapeLoop.h    ****         write_head      = fmod((read_head - 1.), static_cast<float>(MAX_SIZE));
 707              		.loc 8 46 9 is_stmt 1 view .LVU162
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 36


 708              		.loc 8 47 9 view .LVU163
 709              	.LBB1307:
 710              	.LBI1304:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 711              		.loc 12 290 5 view .LVU164
 712              	.LBB1306:
 713              		.loc 12 293 18 is_stmt 0 view .LVU165
 714 0148 FFF7FEFF 		bl	fmod
 715              	.LVL24:
 716              		.loc 12 293 18 view .LVU166
 717              	.LBE1306:
 718              	.LBE1307:
 719              		.loc 8 47 31 view .LVU167
 720 014c B7EEC00B 		vcvt.f32.f64	s0, d0
 721              	.LBE1309:
 722              	.LBE1314:
 312:TapeLooper.cpp **** 
 313:TapeLooper.cpp **** 
 314:TapeLooper.cpp ****         std::vector<float> mixed   = {0.f, 0.f};
 723              		.loc 10 314 47 view .LVU168
 724 0150 0023     		movs	r3, #0
 725              	.LBB1315:
 726              	.LBB1316:
 727              	.LBB1317:
 728              	.LBB1318:
 729              	.LBB1319:
 730              	.LBB1320:
 731              	.LBB1321:
 732              	.LBB1322:
 733              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 37


  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 38


  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 734              		.loc 13 115 41 view .LVU169
 735 0152 0820     		movs	r0, #8
 736              	.LBE1322:
 737              	.LBE1321:
 738              	.LBE1320:
 739              	.LBE1319:
 740              	.LBE1318:
 741              	.LBE1317:
 742              	.LBE1316:
 743              	.LBE1315:
 744              	.LBB1404:
 745              	.LBB1310:
 746              		.loc 8 47 31 view .LVU170
 747 0154 86ED580A 		vstr.32	s0, [r6, #352]
 748              	.LVL25:
 749              		.loc 8 47 31 view .LVU171
 750              	.LBE1310:
 751              	.LBE1404:
 752              		.loc 10 314 9 is_stmt 1 view .LVU172
 753              	.LBB1405:
 754              	.LBI1405:
 755              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 39


   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 40


  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 41


 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 756              		.loc 14 144 7 view .LVU173
 757              	.LBB1406:
 758              	.LBI1406:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 759              		.loc 13 79 7 view .LVU174
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 760              		.loc 13 79 7 is_stmt 0 view .LVU175
 761              	.LBE1406:
 762              	.LBE1405:
 763              	.LBB1407:
 764              	.LBI1315:
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 42


 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 43


 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 44


 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 45


 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 46


 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 47


 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 48


 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 49


 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 50


 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 765              		.loc 11 625 7 is_stmt 1 view .LVU176
 766              	.LBB1391:
 767              	.LBI1391:
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 768              		.loc 11 293 7 view .LVU177
 769              	.LBB1392:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 51


 770              	.LBI1392:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 771              		.loc 11 136 2 view .LVU178
 772              	.LBB1393:
 773              	.LBI1393:
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 774              		.loc 14 147 7 view .LVU179
 775              	.LBB1394:
 776              	.LBI1394:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 777              		.loc 13 82 7 view .LVU180
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 778              		.loc 13 82 7 is_stmt 0 view .LVU181
 779              	.LBE1394:
 780              	.LBE1393:
 781              	.LBB1395:
 782              	.LBI1395:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 783              		.loc 11 97 2 is_stmt 1 view .LVU182
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 784              		.loc 11 97 2 is_stmt 0 view .LVU183
 785              	.LBE1395:
 786              	.LBE1392:
 787              	.LBE1391:
 788              	.LBB1396:
 789              	.LBI1396:
 790              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 52


  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 791              		.loc 15 75 7 is_stmt 1 view .LVU184
 792              		.loc 15 75 7 is_stmt 0 view .LVU185
 793              	.LBE1396:
 794              	.LBB1397:
 795              	.LBI1397:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 796              		.loc 15 79 7 is_stmt 1 view .LVU186
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 53


 797              		.loc 15 79 7 is_stmt 0 view .LVU187
 798              	.LBE1397:
 799              	.LBB1398:
 800              	.LBI1316:
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 54


 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 55


 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 56


 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 57


 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 58


 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 59


 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 60


1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 61


1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 62


1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 63


1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 64


1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 65


1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 66


1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 67


1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 68


1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 69


1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 801              		.loc 11 1577 2 is_stmt 1 view .LVU188
 802              	.LBB1385:
 803              	.LBB1334:
 804              	.LBI1334:
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 70


1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 71


1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 72


1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 73


1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
 805              		.loc 11 1767 7 view .LVU189
 806              	.LBB1335:
 807              	.LBI1335:
 808              		.loc 14 147 7 view .LVU190
 809              	.LBB1336:
 810              	.LBI1336:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 811              		.loc 13 82 7 view .LVU191
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 812              		.loc 13 82 7 is_stmt 0 view .LVU192
 813              	.LBE1336:
 814              	.LBE1335:
 815              	.LBB1337:
 816              	.LBI1337:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 817              		.loc 14 162 7 is_stmt 1 view .LVU193
 818              	.LBB1338:
 819              	.LBI1338:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 820              		.loc 13 89 7 view .LVU194
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 821              		.loc 13 89 7 is_stmt 0 view .LVU195
 822              	.LBE1338:
 823              	.LBE1337:
 824              	.LBE1334:
 825              	.LBB1339:
 826              	.LBI1318:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 827              		.loc 11 343 7 is_stmt 1 view .LVU196
 828              	.LBB1331:
 829              	.LBB1328:
 830              	.LBI1320:
 831              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trai
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 74


   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 75


  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 76


 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 77


 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 78


 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 79


 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 80


 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 81


 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 82


 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 832              		.loc 16 459 7 view .LVU197
 833              	.LBB1325:
 834              	.LBI1321:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 835              		.loc 13 103 7 view .LVU198
 836              	.LBE1325:
 837              	.LBE1328:
 838              	.LBE1331:
 839              	.LBE1339:
 840              	.LBE1385:
 841              	.LBE1398:
 842              	.LBE1407:
 843              		.loc 10 314 47 is_stmt 0 view .LVU199
 844 0158 0C93     		str	r3, [sp, #48]	@ float
 845 015a 0D93     		str	r3, [sp, #52]	@ float
 846              	.LBB1408:
 847              	.LBB1399:
 848              	.LBB1386:
 849              	.LBB1340:
 850              	.LBB1332:
 851              	.LBB1329:
 852              	.LBB1326:
 853              	.LBB1323:
 854              		.loc 13 115 41 view .LVU200
 855 015c FFF7FEFF 		bl	_Znwj
 856              	.LVL26:
 857              	.LBE1323:
 858              	.LBE1326:
 859              	.LBE1329:
 860              	.LBE1332:
 861              	.LBE1340:
 862              	.LBE1386:
 863              	.LBE1399:
 864              	.LBE1408:
 315:TapeLooper.cpp ****         std::vector<float> monitor = {in[0][i], in[1][i]};
 865              		.loc 10 315 46 view .LVU201
 866 0160 049B     		ldr	r3, [sp, #16]
 867              	.LBB1409:
 868              	.LBB1400:
 869              	.LBB1387:
 870              	.LBB1341:
 871              	.LBB1333:
 872              	.LBB1330:
 873              	.LBB1327:
 874              	.LBB1324:
 875              		.loc 13 115 41 view .LVU202
 876 0162 8046     		mov	r8, r0
 877              	.LVL27:
 878              		.loc 13 115 41 view .LVU203
 879              	.LBE1324:
 880              	.LBE1327:
 881              	.LBE1330:
 882              	.LBE1333:
 883              	.LBE1341:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 83


 884              	.LBB1342:
 885              	.LBI1342:
 886              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 84


  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 85


 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 86


 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 87


 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 88


 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 887              		.loc 17 323 5 is_stmt 1 view .LVU204
 888              	.LBB1343:
 889              	.LBI1343:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 890              		.loc 17 125 5 view .LVU205
 891              	.LBB1344:
 892              	.LBB1345:
 893              	.LBI1345:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 894              		.loc 17 107 9 view .LVU206
 895              	.LBB1346:
 896              	.LBI1346:
 897              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algoba
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 89


   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 90


  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 91


 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 92


 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 93


 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 94


 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 95


 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 96


 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 97


 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 98


 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 898              		.loc 18 560 5 view .LVU207
 899              	.LBB1347:
 900              	.LBI1347:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 901              		.loc 18 511 5 view .LVU208
 902              	.LBB1348:
 903              	.LBI1348:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 904              		.loc 18 505 5 view .LVU209
 905              	.LBB1349:
 906              	.LBI1349:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 907              		.loc 18 463 5 view .LVU210
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 99


 908              	.LBB1350:
 909              	.LBB1351:
 910              	.LBI1351:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 911              		.loc 18 415 2 view .LVU211
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 912              		.loc 18 415 2 is_stmt 0 view .LVU212
 913              	.LBE1351:
 914              	.LBE1350:
 915              	.LBE1349:
 916              	.LBE1348:
 917              	.LBE1347:
 918              	.LBE1346:
 919              	.LBE1345:
 920              	.LBE1344:
 921              	.LBE1343:
 922              	.LBE1342:
 923              	.LBE1387:
 924              	.LBE1400:
 925              	.LBE1409:
 926              		.loc 10 315 46 view .LVU213
 927 0164 029D     		ldr	r5, [sp, #8]
 928 0166 1968     		ldr	r1, [r3]
 929              		.loc 10 315 56 view .LVU214
 930 0168 5A68     		ldr	r2, [r3, #4]
 931              	.LBB1410:
 932              	.LBB1401:
 933              	.LBB1388:
 934              	.LBB1382:
 935              	.LBB1379:
 936              	.LBB1376:
 937              	.LBB1373:
 938              	.LBB1370:
 939              	.LBB1367:
 940              	.LBB1364:
 941              	.LBB1361:
 942              	.LBB1358:
 943              	.LBB1355:
 944              	.LBB1352:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 945              		.loc 18 426 23 view .LVU215
 946 016a 0CAB     		add	r3, sp, #48
 947              	.LVL28:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 948              		.loc 18 426 23 view .LVU216
 949              	.LBE1352:
 950              	.LBE1355:
 951              	.LBE1358:
 952              	.LBE1361:
 953              	.LBE1364:
 954              	.LBE1367:
 955              	.LBE1370:
 956              	.LBE1373:
 957              	.LBE1376:
 958              	.LBE1379:
 959              	.LBE1382:
 960              	.LBE1388:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 100


 961              	.LBE1401:
 962              	.LBE1410:
 963              		.loc 10 315 46 view .LVU217
 964 016c 01EB8504 		add	r4, r1, r5, lsl #2
 965 0170 8D4E     		ldr	r6, .L42+24
 966              		.loc 10 315 56 view .LVU218
 967 0172 02EB8502 		add	r2, r2, r5, lsl #2
 968              	.LBB1411:
 969              	.LBB1402:
 970              	.LBB1389:
 971              	.LBB1383:
 972              	.LBB1380:
 973              	.LBB1377:
 974              	.LBB1374:
 975              	.LBB1371:
 976              	.LBB1368:
 977              	.LBB1365:
 978              	.LBB1362:
 979              	.LBB1359:
 980              	.LBB1356:
 981              	.LBB1353:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 982              		.loc 18 426 23 view .LVU219
 983 0176 03CB     		ldmia	r3!, {r0, r1}
 984              	.LVL29:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 985              		.loc 18 426 23 view .LVU220
 986 0178 C8F80000 		str	r0, [r8]	@ unaligned
 987              	.LBE1353:
 988              	.LBE1356:
 989              	.LBE1359:
 990              	.LBE1362:
 991              	.LBE1365:
 992              	.LBE1368:
 993              	.LBE1371:
 994              	.LBE1374:
 995              	.LBE1377:
 996              	.LBE1380:
 997              	.LBE1383:
 998              	.LBE1389:
 999              	.LBE1402:
 1000              	.LBE1411:
 1001              	.LBB1412:
 1002              	.LBB1413:
 1003              	.LBB1414:
 1004              	.LBB1415:
 1005              	.LBB1416:
 1006              	.LBB1417:
 1007              	.LBB1418:
 1008              	.LBB1419:
 1009              		.loc 13 115 41 view .LVU221
 1010 017c 0820     		movs	r0, #8
 1011              	.LBE1419:
 1012              	.LBE1418:
 1013              	.LBE1417:
 1014              	.LBE1416:
 1015              	.LBE1415:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 101


 1016              	.LBE1414:
 1017              	.LBE1413:
 1018              	.LBE1412:
 1019              	.LBB1478:
 1020              	.LBB1403:
 1021              	.LBB1390:
 1022              	.LBB1384:
 1023              	.LBB1381:
 1024              	.LBB1378:
 1025              	.LBB1375:
 1026              	.LBB1372:
 1027              	.LBB1369:
 1028              	.LBB1366:
 1029              	.LBB1363:
 1030              	.LBB1360:
 1031              	.LBB1357:
 1032              	.LBB1354:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1033              		.loc 18 426 23 view .LVU222
 1034 017e C8F80410 		str	r1, [r8, #4]	@ unaligned
 1035              	.LVL30:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1036              		.loc 18 426 23 view .LVU223
 1037              	.LBE1354:
 1038              	.LBE1357:
 1039              	.LBE1360:
 1040              	.LBE1363:
 1041              	.LBE1366:
 1042              	.LBE1369:
 1043              	.LBE1372:
 1044              	.LBE1375:
 1045              	.LBE1378:
 1046              	.LBE1381:
 1047              	.LBE1384:
 1048              	.LBE1390:
 1049              	.LBE1403:
 1050              	.LBE1478:
 1051              	.LBB1479:
 1052              	.LBI1479:
 1053              		.loc 14 162 7 is_stmt 1 view .LVU224
 1054              	.LBB1480:
 1055              	.LBI1480:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1056              		.loc 13 89 7 view .LVU225
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1057              		.loc 13 89 7 is_stmt 0 view .LVU226
 1058              	.LBE1480:
 1059              	.LBE1479:
 1060              		.loc 10 315 9 is_stmt 1 view .LVU227
 1061              		.loc 10 315 57 is_stmt 0 view .LVU228
 1062 0182 2368     		ldr	r3, [r4]	@ float
 1063 0184 3446     		mov	r4, r6
 1064 0186 0C93     		str	r3, [sp, #48]	@ float
 1065 0188 1368     		ldr	r3, [r2]	@ float
 1066 018a AA00     		lsls	r2, r5, #2
 1067              	.LBB1481:
 1068              	.LBB1228:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 102


 1069              	.LBB1225:
 1070              	.LBB1220:
 1071              	.LBB1218:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1072              		.loc 11 98 47 view .LVU229
 1073 018c 5546     		mov	r5, r10
 1074              	.LBE1218:
 1075              	.LBE1220:
 1076              	.LBE1225:
 1077              	.LBE1228:
 1078              	.LBE1481:
 1079              		.loc 10 315 57 view .LVU230
 1080 018e 0D93     		str	r3, [sp, #52]	@ float
 1081              	.LVL31:
 1082              	.LBB1482:
 1083              	.LBI1482:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 1084              		.loc 14 144 7 is_stmt 1 view .LVU231
 1085              	.LBB1483:
 1086              	.LBI1483:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1087              		.loc 13 79 7 view .LVU232
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1088              		.loc 13 79 7 is_stmt 0 view .LVU233
 1089              	.LBE1483:
 1090              	.LBE1482:
 1091              	.LBB1484:
 1092              	.LBI1412:
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 1093              		.loc 11 625 7 is_stmt 1 view .LVU234
 1094              	.LBB1469:
 1095              	.LBI1469:
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 1096              		.loc 11 293 7 view .LVU235
 1097              	.LBB1470:
 1098              	.LBI1470:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 1099              		.loc 11 136 2 view .LVU236
 1100              	.LBB1471:
 1101              	.LBI1471:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1102              		.loc 14 147 7 view .LVU237
 1103              	.LBB1472:
 1104              	.LBI1472:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1105              		.loc 13 82 7 view .LVU238
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1106              		.loc 13 82 7 is_stmt 0 view .LVU239
 1107              	.LBE1472:
 1108              	.LBE1471:
 1109              	.LBB1473:
 1110              	.LBI1473:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1111              		.loc 11 97 2 is_stmt 1 view .LVU240
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1112              		.loc 11 97 2 is_stmt 0 view .LVU241
 1113              	.LBE1473:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 103


 1114              	.LBE1470:
 1115              	.LBE1469:
 1116              	.LBB1474:
 1117              	.LBI1474:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 1118              		.loc 15 75 7 is_stmt 1 view .LVU242
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 1119              		.loc 15 75 7 is_stmt 0 view .LVU243
 1120              	.LBE1474:
 1121              	.LBB1475:
 1122              	.LBI1475:
 1123              		.loc 15 79 7 is_stmt 1 view .LVU244
 1124              		.loc 15 79 7 is_stmt 0 view .LVU245
 1125              	.LBE1475:
 1126              	.LBB1476:
 1127              	.LBI1413:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 1128              		.loc 11 1577 2 is_stmt 1 view .LVU246
 1129              	.LBB1467:
 1130              	.LBB1428:
 1131              	.LBI1428:
 1132              		.loc 11 1767 7 view .LVU247
 1133              	.LBB1429:
 1134              	.LBI1429:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1135              		.loc 14 147 7 view .LVU248
 1136              	.LBB1430:
 1137              	.LBI1430:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1138              		.loc 13 82 7 view .LVU249
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1139              		.loc 13 82 7 is_stmt 0 view .LVU250
 1140              	.LBE1430:
 1141              	.LBE1429:
 1142              	.LBB1431:
 1143              	.LBI1431:
 1144              		.loc 14 162 7 is_stmt 1 view .LVU251
 1145              	.LBB1432:
 1146              	.LBI1432:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1147              		.loc 13 89 7 view .LVU252
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1148              		.loc 13 89 7 is_stmt 0 view .LVU253
 1149              	.LBE1432:
 1150              	.LBE1431:
 1151              	.LBE1428:
 1152              	.LBB1433:
 1153              	.LBI1415:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1154              		.loc 11 343 7 is_stmt 1 view .LVU254
 1155              	.LBB1426:
 1156              	.LBB1424:
 1157              	.LBI1417:
 1158              		.loc 16 459 7 view .LVU255
 1159              	.LBB1422:
 1160              	.LBI1418:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 104


 1161              		.loc 13 103 7 view .LVU256
 1162 0190 0092     		str	r2, [sp]
 1163              	.LBB1420:
 1164              		.loc 13 115 41 is_stmt 0 view .LVU257
 1165 0192 FFF7FEFF 		bl	_Znwj
 1166              	.LVL32:
 1167              	.LBE1420:
 1168              	.LBE1422:
 1169              	.LBE1424:
 1170              	.LBE1426:
 1171              	.LBE1433:
 1172              	.LBB1434:
 1173              	.LBB1435:
 1174              	.LBB1436:
 1175              	.LBB1437:
 1176              	.LBB1438:
 1177              	.LBB1439:
 1178              	.LBB1440:
 1179              	.LBB1441:
 1180              	.LBB1442:
 1181              	.LBB1443:
 1182              	.LBB1444:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1183              		.loc 18 426 23 view .LVU258
 1184 0196 0CAB     		add	r3, sp, #48
 1185              	.LVL33:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1186              		.loc 18 426 23 view .LVU259
 1187              	.LBE1444:
 1188              	.LBE1443:
 1189              	.LBE1442:
 1190              	.LBE1441:
 1191              	.LBE1440:
 1192              	.LBE1439:
 1193              	.LBE1438:
 1194              	.LBE1437:
 1195              	.LBE1436:
 1196              	.LBE1435:
 1197              	.LBE1434:
 1198              	.LBB1464:
 1199              	.LBB1427:
 1200              	.LBB1425:
 1201              	.LBB1423:
 1202              	.LBB1421:
 1203              		.loc 13 115 41 view .LVU260
 1204 0198 8146     		mov	r9, r0
 1205              	.LVL34:
 1206              		.loc 13 115 41 view .LVU261
 1207              	.LBE1421:
 1208              	.LBE1423:
 1209              	.LBE1425:
 1210              	.LBE1427:
 1211              	.LBE1464:
 1212              	.LBB1465:
 1213              	.LBI1434:
 1214              		.loc 17 323 5 is_stmt 1 view .LVU262
 1215              	.LBB1462:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 105


 1216              	.LBI1435:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 1217              		.loc 17 125 5 view .LVU263
 1218              	.LBB1460:
 1219              	.LBB1458:
 1220              	.LBI1437:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 1221              		.loc 17 107 9 view .LVU264
 1222              	.LBB1456:
 1223              	.LBI1438:
 1224              		.loc 18 560 5 view .LVU265
 1225              	.LBB1454:
 1226              	.LBI1439:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1227              		.loc 18 511 5 view .LVU266
 1228              	.LBB1452:
 1229              	.LBI1440:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1230              		.loc 18 505 5 view .LVU267
 1231              	.LBB1450:
 1232              	.LBI1441:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1233              		.loc 18 463 5 view .LVU268
 1234              	.LBB1448:
 1235              	.LBB1446:
 1236              	.LBI1443:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1237              		.loc 18 415 2 view .LVU269
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1238              		.loc 18 415 2 is_stmt 0 view .LVU270
 1239              	.LBE1446:
 1240              	.LBE1448:
 1241              	.LBE1450:
 1242              	.LBE1452:
 1243              	.LBE1454:
 1244              	.LBE1456:
 1245              	.LBE1458:
 1246              	.LBE1460:
 1247              	.LBE1462:
 1248              	.LBE1465:
 1249              	.LBE1467:
 1250              	.LBE1476:
 1251              	.LBE1484:
 1252              	.LBB1485:
 1253              	.LBB1229:
 1254              	.LBB1226:
 1255              	.LBB1221:
 1256              	.LBB1219:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1257              		.loc 11 98 47 view .LVU271
 1258 019a 0396     		str	r6, [sp, #12]
 1259              	.LBE1219:
 1260              	.LBE1221:
 1261              	.LBE1226:
 1262              	.LBE1229:
 1263              	.LBE1485:
 1264              	.LBB1486:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 106


 1265              	.LBB1477:
 1266              	.LBB1468:
 1267              	.LBB1466:
 1268              	.LBB1463:
 1269              	.LBB1461:
 1270              	.LBB1459:
 1271              	.LBB1457:
 1272              	.LBB1455:
 1273              	.LBB1453:
 1274              	.LBB1451:
 1275              	.LBB1449:
 1276              	.LBB1447:
 1277              	.LBB1445:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1278              		.loc 18 426 23 view .LVU272
 1279 019c 03CB     		ldmia	r3!, {r0, r1}
 1280              	.LVL35:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1281              		.loc 18 426 23 view .LVU273
 1282 019e C9F80000 		str	r0, [r9]	@ unaligned
 1283 01a2 C9F80410 		str	r1, [r9, #4]	@ unaligned
 1284              	.LVL36:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1285              		.loc 18 426 23 view .LVU274
 1286              	.LBE1445:
 1287              	.LBE1447:
 1288              	.LBE1449:
 1289              	.LBE1451:
 1290              	.LBE1453:
 1291              	.LBE1455:
 1292              	.LBE1457:
 1293              	.LBE1459:
 1294              	.LBE1461:
 1295              	.LBE1463:
 1296              	.LBE1466:
 1297              	.LBE1468:
 1298              	.LBE1477:
 1299              	.LBE1486:
 1300              	.LBB1487:
 1301              	.LBI1487:
 1302              		.loc 14 162 7 is_stmt 1 view .LVU275
 1303              	.LBB1488:
 1304              	.LBI1488:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1305              		.loc 13 89 7 view .LVU276
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1306              		.loc 13 89 7 is_stmt 0 view .LVU277
 1307              	.LBE1488:
 1308              	.LBE1487:
 316:TapeLooper.cpp **** 
 317:TapeLooper.cpp ****         std::vector<float> samps;
 1309              		.loc 10 317 9 is_stmt 1 view .LVU278
 1310              	.LBB1489:
 1311              	.LBI1213:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 1312              		.loc 11 487 7 view .LVU279
 1313              	.LBB1230:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 107


 1314              	.LBI1214:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 1315              		.loc 11 288 7 view .LVU280
 1316              	.LBB1227:
 1317              	.LBI1215:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 1318              		.loc 11 131 2 view .LVU281
 1319              	.LBB1222:
 1320              	.LBI1222:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 1321              		.loc 14 144 7 view .LVU282
 1322              	.LBB1223:
 1323              	.LBI1223:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1324              		.loc 13 79 7 view .LVU283
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1325              		.loc 13 79 7 is_stmt 0 view .LVU284
 1326              	.LBE1223:
 1327              	.LBE1222:
 1328              	.LBB1224:
 1329              	.LBI1216:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1330              		.loc 11 97 2 is_stmt 1 view .LVU285
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1331              		.loc 11 97 2 is_stmt 0 view .LVU286
 1332              	.LBE1224:
 1333              	.LBE1227:
 1334              	.LBE1230:
 1335              	.LBE1489:
 318:TapeLooper.cpp ****         for(uint8_t i = 0; i < 4; i++)
 1336              		.loc 10 318 9 is_stmt 1 view .LVU287
 1337              	.LBB1490:
 1338              		.loc 10 318 30 view .LVU288
 1339              	.L14:
 1340              	.LBB1491:
 319:TapeLooper.cpp ****         {
 320:TapeLooper.cpp ****             float f = tracks[i].get_Fade();
 1341              		.loc 10 320 13 discriminator 2 view .LVU289
 1342              	.LBB1492:
 1343              	.LBI1492:
  48:TapeLoop.h    ****     }
  49:TapeLoop.h    **** 
  50:TapeLoop.h    ****     int circular_distance(int a, int b)
  51:TapeLoop.h    ****     {
  52:TapeLoop.h    ****         int direct = std::abs(a - b);   // straight distance
  53:TapeLoop.h    ****         int wrap   = MAX_SIZE - direct; // distance if you wrap around
  54:TapeLoop.h    ****         return std::min(direct, wrap);
  55:TapeLoop.h    ****     }
  56:TapeLoop.h    **** 
  57:TapeLoop.h    ****     float linear_interpolate(float a, float b, float fraction)
  58:TapeLoop.h    ****     {
  59:TapeLoop.h    ****         return ((b - a) * fraction + a);
  60:TapeLoop.h    ****     }
  61:TapeLoop.h    **** 
  62:TapeLoop.h    ****     std::vector<float> readNextSamples()
  63:TapeLoop.h    ****     {
  64:TapeLoop.h    **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 108


  65:TapeLoop.h    ****         std::vector<float> out = {0.0f, 0.0f};
  66:TapeLoop.h    ****         // advanceTapeHeads();
  67:TapeLoop.h    ****         int read_head_whole = static_cast<int>(
  68:TapeLoop.h    ****             read_head); //the whole integer part of the read head location
  69:TapeLoop.h    ****         float read_head_fractional
  70:TapeLoop.h    ****             = read_head
  71:TapeLoop.h    ****               - static_cast<float>(
  72:TapeLoop.h    ****                   read_head_whole); // the fractional portion of the read head location
  73:TapeLoop.h    **** 
  74:TapeLoop.h    ****         int next_read_head
  75:TapeLoop.h    ****             = ((tape_speed > 0 ? read_head_whole + 1 : read_head_whole - 1)
  76:TapeLoop.h    ****                + MAX_SIZE)
  77:TapeLoop.h    ****               % MAX_SIZE;
  78:TapeLoop.h    **** 
  79:TapeLoop.h    ****         float interpolated_L = linear_interpolate(track[0][read_head_whole],
  80:TapeLoop.h    ****                                                   track[0][next_read_head],
  81:TapeLoop.h    ****                                                   read_head_fractional);
  82:TapeLoop.h    ****         float interpolated_R = linear_interpolate(track[1][read_head_whole],
  83:TapeLoop.h    ****                                                   track[1][next_read_head],
  84:TapeLoop.h    ****                                                   read_head_fractional);
  85:TapeLoop.h    **** 
  86:TapeLoop.h    ****         out[0] = interpolated_L;
  87:TapeLoop.h    ****         out[1] = interpolated_R;
  88:TapeLoop.h    **** 
  89:TapeLoop.h    ****         return out;
  90:TapeLoop.h    ****     }
  91:TapeLoop.h    **** 
  92:TapeLoop.h    ****     /* This Method will NOT move tape heads and writes to the write_head location.
  93:TapeLoop.h    **** It's also the actual coded method, the overloaded method with a vector just uses this. */
  94:TapeLoop.h    **** 
  95:TapeLoop.h    ****     void writeNextSamples(std::vector<float> samples)
  96:TapeLoop.h    ****     {
  97:TapeLoop.h    ****         int  wh         = static_cast<int>(write_head);
  98:TapeLoop.h    ****         int  lwh        = static_cast<int>(last_write_head);
  99:TapeLoop.h    ****         bool is_reverse = tape_speed < 0;
 100:TapeLoop.h    **** 
 101:TapeLoop.h    ****         if(track[0][wh] >= -100.f)
 102:TapeLoop.h    ****         {
 103:TapeLoop.h    ****             track[0][wh] = samples[0];
 104:TapeLoop.h    ****         }
 105:TapeLoop.h    ****         if(track[1][wh] >= -100.f)
 106:TapeLoop.h    ****         {
 107:TapeLoop.h    ****             track[1][wh] = samples[1];
 108:TapeLoop.h    ****         }
 109:TapeLoop.h    **** 
 110:TapeLoop.h    ****         //TODO debug this
 111:TapeLoop.h    ****         int steps = circular_distance(wh, lwh);
 112:TapeLoop.h    ****         for(int step = 1; step < steps; step++)
 113:TapeLoop.h    ****         {
 114:TapeLoop.h    ****             int i = (lwh + (is_reverse ? -step : step) + MAX_SIZE) % MAX_SIZE;
 115:TapeLoop.h    **** 
 116:TapeLoop.h    ****             if(!is_reverse)
 117:TapeLoop.h    ****             {
 118:TapeLoop.h    ****                 i = (i + 1 + MAX_SIZE) % MAX_SIZE;
 119:TapeLoop.h    ****             }
 120:TapeLoop.h    ****             else
 121:TapeLoop.h    ****             {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 109


 122:TapeLoop.h    ****                 i = (i - 1 + MAX_SIZE) % MAX_SIZE;
 123:TapeLoop.h    ****             }
 124:TapeLoop.h    **** 
 125:TapeLoop.h    ****             float a1   = track[0][lwh];
 126:TapeLoop.h    ****             float a2   = track[1][lwh];
 127:TapeLoop.h    ****             float b1   = track[0][wh];
 128:TapeLoop.h    ****             float b2   = track[1][wh];
 129:TapeLoop.h    ****             float frac = static_cast<float>(step) / static_cast<float>(steps);
 130:TapeLoop.h    **** 
 131:TapeLoop.h    ****             track[0][i] = linear_interpolate(a1, b1, frac);
 132:TapeLoop.h    ****             track[1][i] = linear_interpolate(a2, b2, frac);
 133:TapeLoop.h    ****         }
 134:TapeLoop.h    **** 
 135:TapeLoop.h    ****         end_loc = write_head;
 136:TapeLoop.h    ****     }
 137:TapeLoop.h    **** 
 138:TapeLoop.h    **** 
 139:TapeLoop.h    ****     void blank_track()
 140:TapeLoop.h    ****     {
 141:TapeLoop.h    ****         for(int i = 0; i < MAX_SIZE; i++)
 142:TapeLoop.h    ****         {
 143:TapeLoop.h    ****             track[0][i] = 0.f;
 144:TapeLoop.h    ****             track[1][i] = 0.f;
 145:TapeLoop.h    ****         }
 146:TapeLoop.h    ****         start_loc = 0;
 147:TapeLoop.h    ****         filled    = false;
 148:TapeLoop.h    ****     }
 149:TapeLoop.h    **** 
 150:TapeLoop.h    **** 
 151:TapeLoop.h    ****     void apply_tape_artifact()
 152:TapeLoop.h    ****     {   //TODO for some reason I'm not hearing pops?
 153:TapeLoop.h    ****         /*This simulates de-magnetization of the tape. theres a demag_probability chance 
 154:TapeLoop.h    **** of losing a group of bits. The number of bits is given by a normal distribution.*/
 155:TapeLoop.h    **** 
 156:TapeLoop.h    ****         for(int i = 0; i < MAX_SIZE; i++)
 157:TapeLoop.h    ****         {
 158:TapeLoop.h    ****             int bits_lost = 0;
 159:TapeLoop.h    ****             if(dist_uniform(rdm) < demag_probability)
 160:TapeLoop.h    ****             {
 161:TapeLoop.h    ****                 bits_lost = static_cast<int>(std::round(dist_normal(rdm)));
 162:TapeLoop.h    ****             }
 163:TapeLoop.h    ****             while(bits_lost > 0)
 164:TapeLoop.h    ****             {
 165:TapeLoop.h    ****                 track[0][i] = std::numeric_limits<float>::lowest();
 166:TapeLoop.h    ****                 track[1][i] = std::numeric_limits<float>::lowest();
 167:TapeLoop.h    **** 
 168:TapeLoop.h    ****                 i++;
 169:TapeLoop.h    ****                 bits_lost--;
 170:TapeLoop.h    ****             }
 171:TapeLoop.h    ****         }
 172:TapeLoop.h    ****         for(unsigned i = 0; i < tape_splice_gap; i++)
 173:TapeLoop.h    ****         {
 174:TapeLoop.h    ****             track[0][i] = std::numeric_limits<float>::lowest();
 175:TapeLoop.h    ****             track[1][i] = std::numeric_limits<float>::lowest();
 176:TapeLoop.h    ****         }
 177:TapeLoop.h    ****     }
 178:TapeLoop.h    **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 110


 179:TapeLoop.h    ****     template <typename T>
 180:TapeLoop.h    ****     const T& clamp(const T& value, const T& low, const T& high)
 181:TapeLoop.h    ****     {
 182:TapeLoop.h    ****         return (value < low) ? low : (value > high) ? high : value;
 183:TapeLoop.h    ****     }
 184:TapeLoop.h    **** 
 185:TapeLoop.h    ****     void next_Input_Mode() { input_mode = (input_mode + 1) % num_input_modes; }
 186:TapeLoop.h    **** 
 187:TapeLoop.h    ****     void set_Input_Mode(int m) { input_mode = m; }
 188:TapeLoop.h    **** 
 189:TapeLoop.h    ****     int get_Input_Mode() { return input_mode; }
 190:TapeLoop.h    **** 
 191:TapeLoop.h    ****     int get_Read_Head() { return static_cast<int>(read_head); }
 192:TapeLoop.h    **** 
 193:TapeLoop.h    ****     int get_Tape_Speed() { return static_cast<int>(tape_speed * 100.f); }
 194:TapeLoop.h    **** 
 195:TapeLoop.h    ****     //** Takes an input float between 0. and 1.0, sets the tape speed according to TapeLoop::Min/Ma
 196:TapeLoop.h    ****     void set_Playback_Speed(float speed_decimal)
 197:TapeLoop.h    ****     {
 198:TapeLoop.h    ****         tape_speed_target = speed_decimal * (max_tape_speed - min_tape_speed)
 199:TapeLoop.h    ****                             - max_tape_speed;
 200:TapeLoop.h    ****     }
 201:TapeLoop.h    **** 
 202:TapeLoop.h    ****     int get_Target_Speed()
 203:TapeLoop.h    ****     {
 204:TapeLoop.h    ****         return static_cast<int>(tape_speed_target * 100.f);
 205:TapeLoop.h    ****     }
 206:TapeLoop.h    **** 
 207:TapeLoop.h    ****     float get_Volume() { return volume; }
 208:TapeLoop.h    **** 
 209:TapeLoop.h    ****     void set_Volume(float v) { volume = v; }
 210:TapeLoop.h    **** 
 211:TapeLoop.h    ****     float get_Fade() { return fade; }
 1344              		.loc 8 211 11 discriminator 2 view .LVU290
 1345              	.LBB1493:
 1346              		.loc 8 211 24 discriminator 2 view .LVU291
 1347              	.LBE1493:
 1348              	.LBE1492:
 1349              	.LBB1495:
 1350              	.LBB1496:
  65:TapeLoop.h    ****         // advanceTapeHeads();
 1351              		.loc 8 65 45 is_stmt 0 discriminator 2 view .LVU292
 1352 01a6 0023     		movs	r3, #0
 1353              	.LBB1497:
 1354              	.LBB1498:
 1355              	.LBB1499:
 1356              	.LBB1500:
 1357              	.LBB1501:
 1358              	.LBB1502:
 1359              	.LBB1503:
 1360              	.LBB1504:
 1361              		.loc 13 115 41 discriminator 2 view .LVU293
 1362 01a8 0820     		movs	r0, #8
 1363              	.LBE1504:
 1364              	.LBE1503:
 1365              	.LBE1502:
 1366              	.LBE1501:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 111


 1367              	.LBE1500:
 1368              	.LBE1499:
 1369              	.LBE1498:
 1370              	.LBE1497:
 1371              	.LBE1496:
 1372              	.LBE1495:
 1373              	.LBB1609:
 1374              	.LBB1494:
 1375              		.loc 8 211 31 discriminator 2 view .LVU294
 1376 01aa D4ED108A 		vldr.32	s17, [r4, #64]
 1377              	.LVL37:
 1378              		.loc 8 211 31 discriminator 2 view .LVU295
 1379              	.LBE1494:
 1380              	.LBE1609:
 321:TapeLooper.cpp ****             float v = tracks[i].get_Volume();
 1381              		.loc 10 321 13 is_stmt 1 discriminator 2 view .LVU296
 1382              	.LBB1610:
 1383              	.LBI1610:
 207:TapeLoop.h    **** 
 1384              		.loc 8 207 11 discriminator 2 view .LVU297
 1385              	.LBB1611:
 207:TapeLoop.h    **** 
 1386              		.loc 8 207 26 discriminator 2 view .LVU298
 1387              	.LBE1611:
 1388              	.LBE1610:
 1389              	.LBB1613:
 1390              	.LBB1603:
  65:TapeLoop.h    ****         // advanceTapeHeads();
 1391              		.loc 8 65 45 is_stmt 0 discriminator 2 view .LVU299
 1392 01ae 0C93     		str	r3, [sp, #48]	@ float
 1393 01b0 0D93     		str	r3, [sp, #52]	@ float
 1394              	.LBE1603:
 1395              	.LBE1613:
 1396              	.LBB1614:
 1397              	.LBB1612:
 207:TapeLoop.h    **** 
 1398              		.loc 8 207 33 discriminator 2 view .LVU300
 1399 01b2 94ED0F8A 		vldr.32	s16, [r4, #60]
 1400              	.LVL38:
 207:TapeLoop.h    **** 
 1401              		.loc 8 207 33 discriminator 2 view .LVU301
 1402              	.LBE1612:
 1403              	.LBE1614:
 322:TapeLooper.cpp **** 
 323:TapeLooper.cpp ****             samps = tracks[i].readNextSamples();
 1404              		.loc 10 323 13 is_stmt 1 discriminator 2 view .LVU302
 1405              	.LBB1615:
 1406              	.LBI1495:
  62:TapeLoop.h    ****     {
 1407              		.loc 8 62 24 discriminator 2 view .LVU303
 1408              	.LBB1604:
  65:TapeLoop.h    ****         // advanceTapeHeads();
 1409              		.loc 8 65 9 discriminator 2 view .LVU304
 1410              	.LBB1580:
 1411              	.LBI1580:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 1412              		.loc 14 144 7 discriminator 2 view .LVU305
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 112


 1413              	.LBB1581:
 1414              	.LBI1581:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1415              		.loc 13 79 7 discriminator 2 view .LVU306
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1416              		.loc 13 79 7 is_stmt 0 discriminator 2 view .LVU307
 1417              	.LBE1581:
 1418              	.LBE1580:
 1419              	.LBB1582:
 1420              	.LBI1497:
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 1421              		.loc 11 625 7 is_stmt 1 discriminator 2 view .LVU308
 1422              	.LBB1568:
 1423              	.LBI1568:
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 1424              		.loc 11 293 7 discriminator 2 view .LVU309
 1425              	.LBB1569:
 1426              	.LBI1569:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 1427              		.loc 11 136 2 discriminator 2 view .LVU310
 1428              	.LBB1570:
 1429              	.LBI1570:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1430              		.loc 14 147 7 discriminator 2 view .LVU311
 1431              	.LBB1571:
 1432              	.LBI1571:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1433              		.loc 13 82 7 discriminator 2 view .LVU312
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1434              		.loc 13 82 7 is_stmt 0 discriminator 2 view .LVU313
 1435              	.LBE1571:
 1436              	.LBE1570:
 1437              	.LBB1572:
 1438              	.LBI1572:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1439              		.loc 11 97 2 is_stmt 1 discriminator 2 view .LVU314
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1440              		.loc 11 97 2 is_stmt 0 discriminator 2 view .LVU315
 1441              	.LBE1572:
 1442              	.LBE1569:
 1443              	.LBE1568:
 1444              	.LBB1573:
 1445              	.LBI1573:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 1446              		.loc 15 75 7 is_stmt 1 discriminator 2 view .LVU316
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 1447              		.loc 15 75 7 is_stmt 0 discriminator 2 view .LVU317
 1448              	.LBE1573:
 1449              	.LBB1574:
 1450              	.LBI1574:
 1451              		.loc 15 79 7 is_stmt 1 discriminator 2 view .LVU318
 1452              		.loc 15 79 7 is_stmt 0 discriminator 2 view .LVU319
 1453              	.LBE1574:
 1454              	.LBB1575:
 1455              	.LBI1498:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 1456              		.loc 11 1577 2 is_stmt 1 discriminator 2 view .LVU320
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 113


 1457              	.LBB1563:
 1458              	.LBB1513:
 1459              	.LBI1513:
 1460              		.loc 11 1767 7 discriminator 2 view .LVU321
 1461              	.LBB1514:
 1462              	.LBI1514:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1463              		.loc 14 147 7 discriminator 2 view .LVU322
 1464              	.LBB1515:
 1465              	.LBI1515:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1466              		.loc 13 82 7 discriminator 2 view .LVU323
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1467              		.loc 13 82 7 is_stmt 0 discriminator 2 view .LVU324
 1468              	.LBE1515:
 1469              	.LBE1514:
 1470              	.LBB1516:
 1471              	.LBI1516:
 1472              		.loc 14 162 7 is_stmt 1 discriminator 2 view .LVU325
 1473              	.LBB1517:
 1474              	.LBI1517:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1475              		.loc 13 89 7 discriminator 2 view .LVU326
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1476              		.loc 13 89 7 is_stmt 0 discriminator 2 view .LVU327
 1477              	.LBE1517:
 1478              	.LBE1516:
 1479              	.LBE1513:
 1480              	.LBB1518:
 1481              	.LBI1500:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1482              		.loc 11 343 7 is_stmt 1 discriminator 2 view .LVU328
 1483              	.LBB1511:
 1484              	.LBB1509:
 1485              	.LBI1502:
 1486              		.loc 16 459 7 discriminator 2 view .LVU329
 1487              	.LBB1507:
 1488              	.LBI1503:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1489              		.loc 13 103 7 discriminator 2 view .LVU330
 1490              	.LBB1505:
 1491              		.loc 13 115 41 is_stmt 0 discriminator 2 view .LVU331
 1492 01b6 FFF7FEFF 		bl	_Znwj
 1493              	.LVL39:
 1494              	.LBE1505:
 1495              	.LBE1507:
 1496              	.LBE1509:
 1497              	.LBE1511:
 1498              	.LBE1518:
 1499              	.LBE1563:
 1500              	.LBE1575:
 1501              	.LBE1582:
  68:TapeLoop.h    ****         float read_head_fractional
 1502              		.loc 8 68 13 discriminator 2 view .LVU332
 1503 01ba D4ED067A 		vldr.32	s15, [r4, #24]
 1504 01be AC46     		mov	ip, r5
 1505              	.LBB1583:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 114


 1506              	.LBB1576:
 1507              	.LBB1564:
 1508              	.LBB1519:
 1509              	.LBB1520:
 1510              	.LBB1521:
 1511              	.LBB1522:
 1512              	.LBB1523:
 1513              	.LBB1524:
 1514              	.LBB1525:
 1515              	.LBB1526:
 1516              	.LBB1527:
 1517              	.LBB1528:
 1518              	.LBB1529:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1519              		.loc 18 426 23 discriminator 2 view .LVU333
 1520 01c0 0CAA     		add	r2, sp, #48
 1521              	.LVL40:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1522              		.loc 18 426 23 discriminator 2 view .LVU334
 1523              	.LBE1529:
 1524              	.LBE1528:
 1525              	.LBE1527:
 1526              	.LBE1526:
 1527              	.LBE1525:
 1528              	.LBE1524:
 1529              	.LBE1523:
 1530              	.LBE1522:
 1531              	.LBE1521:
 1532              	.LBE1520:
 1533              	.LBE1519:
 1534              	.LBB1559:
 1535              	.LBB1512:
 1536              	.LBB1510:
 1537              	.LBB1508:
 1538              	.LBB1506:
 1539              		.loc 13 115 41 discriminator 2 view .LVU335
 1540 01c2 0546     		mov	r5, r0
 1541              	.LVL41:
 1542              		.loc 13 115 41 discriminator 2 view .LVU336
 1543              	.LBE1506:
 1544              	.LBE1508:
 1545              	.LBE1510:
 1546              	.LBE1512:
 1547              	.LBE1559:
 1548              	.LBE1564:
 1549              	.LBE1576:
 1550              	.LBE1583:
  67:TapeLoop.h    ****             read_head); //the whole integer part of the read head location
 1551              		.loc 8 67 13 discriminator 2 view .LVU337
 1552 01c4 BDEEE77A 		vcvt.s32.f32	s14, s15
  76:TapeLoop.h    ****               % MAX_SIZE;
 1553              		.loc 8 76 16 discriminator 2 view .LVU338
 1554 01c8 7A4F     		ldr	r7, .L42+36
  77:TapeLoop.h    **** 
 1555              		.loc 8 77 15 discriminator 2 view .LVU339
 1556 01ca 94ED0C6A 		vldr.32	s12, [r4, #48]
 1557 01ce D646     		mov	lr, r10
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 115


 1558              	.LBB1584:
 1559              	.LBB1577:
 1560              	.LBB1565:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 1561              		.loc 11 1583 61 discriminator 2 view .LVU340
 1562 01d0 AA46     		mov	r10, r5
 1563              	.LVL42:
 1564              	.LBB1560:
 1565              	.LBI1519:
 1566              		.loc 17 323 5 is_stmt 1 discriminator 2 view .LVU341
 1567              	.LBB1556:
 1568              	.LBI1520:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 1569              		.loc 17 125 5 discriminator 2 view .LVU342
 1570              	.LBB1553:
 1571              	.LBB1550:
 1572              	.LBI1522:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 1573              		.loc 17 107 9 discriminator 2 view .LVU343
 1574              	.LBB1547:
 1575              	.LBI1523:
 1576              		.loc 18 560 5 discriminator 2 view .LVU344
 1577              	.LBB1544:
 1578              	.LBI1524:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1579              		.loc 18 511 5 discriminator 2 view .LVU345
 1580              	.LBB1541:
 1581              	.LBI1525:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1582              		.loc 18 505 5 discriminator 2 view .LVU346
 1583              	.LBB1538:
 1584              	.LBI1526:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1585              		.loc 18 463 5 discriminator 2 view .LVU347
 1586              	.LBB1535:
 1587              	.LBB1532:
 1588              	.LBI1528:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1589              		.loc 18 415 2 discriminator 2 view .LVU348
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1590              		.loc 18 415 2 is_stmt 0 discriminator 2 view .LVU349
 1591              	.LBE1532:
 1592              	.LBE1535:
 1593              	.LBE1538:
 1594              	.LBE1541:
 1595              	.LBE1544:
 1596              	.LBE1547:
 1597              	.LBE1550:
 1598              	.LBE1553:
 1599              	.LBE1556:
 1600              	.LBE1560:
 1601              	.LBE1565:
 1602              	.LBE1577:
 1603              	.LBE1584:
  76:TapeLoop.h    ****               % MAX_SIZE;
 1604              		.loc 8 76 16 discriminator 2 view .LVU350
 1605 01d2 794B     		ldr	r3, .L42+40
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 116


  67:TapeLoop.h    ****             read_head); //the whole integer part of the read head location
 1606              		.loc 8 67 13 discriminator 2 view .LVU351
 1607 01d4 17EE106A 		vmov	r6, s14	@ int
  77:TapeLoop.h    **** 
 1608              		.loc 8 77 15 discriminator 2 view .LVU352
 1609 01d8 B5EEC06A 		vcmpe.f32	s12, #0
  71:TapeLoop.h    ****                   read_head_whole); // the fractional portion of the read head location
 1610              		.loc 8 71 17 discriminator 2 view .LVU353
 1611 01dc F8EEC76A 		vcvt.f32.s32	s13, s14
  76:TapeLoop.h    ****               % MAX_SIZE;
 1612              		.loc 8 76 16 discriminator 2 view .LVU354
 1613 01e0 3744     		add	r7, r7, r6
 1614 01e2 3344     		add	r3, r3, r6
  77:TapeLoop.h    **** 
 1615              		.loc 8 77 15 discriminator 2 view .LVU355
 1616 01e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1617 01e8 4FEAE77B 		asr	fp, r7, #31
  69:TapeLoop.h    ****             = read_head
 1618              		.loc 8 69 15 discriminator 2 view .LVU356
 1619 01ec 77EEE66A 		vsub.f32	s13, s15, s13
 1620              	.LBB1585:
 1621              	.LBB1578:
 1622              	.LBB1566:
 1623              	.LBB1561:
 1624              	.LBB1557:
 1625              	.LBB1554:
 1626              	.LBB1551:
 1627              	.LBB1548:
 1628              	.LBB1545:
 1629              	.LBB1542:
 1630              	.LBB1539:
 1631              	.LBB1536:
 1632              	.LBB1533:
 1633              	.LBB1530:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1634              		.loc 18 426 23 discriminator 2 view .LVU357
 1635 01f0 03CA     		ldmia	r2!, {r0, r1}
 1636              	.LVL43:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1637              		.loc 18 426 23 discriminator 2 view .LVU358
 1638              	.LBE1530:
 1639              	.LBE1533:
 1640              	.LBE1536:
 1641              	.LBE1539:
 1642              	.LBE1542:
 1643              	.LBE1545:
 1644              	.LBE1548:
 1645              	.LBE1551:
 1646              	.LBE1554:
 1647              	.LBE1557:
 1648              	.LBE1561:
 1649              	.LBE1566:
 1650              	.LBE1578:
 1651              	.LBE1585:
  77:TapeLoop.h    **** 
 1652              		.loc 8 77 15 discriminator 2 view .LVU359
 1653 01f2 724A     		ldr	r2, .L42+44
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 117


 1654              	.LVL44:
 1655              	.LBB1586:
 1656              	.LBB1579:
 1657              	.LBB1567:
 1658              	.LBB1562:
 1659              	.LBB1558:
 1660              	.LBB1555:
 1661              	.LBB1552:
 1662              	.LBB1549:
 1663              	.LBB1546:
 1664              	.LBB1543:
 1665              	.LBB1540:
 1666              	.LBB1537:
 1667              	.LBB1534:
 1668              	.LBB1531:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1669              		.loc 18 426 23 discriminator 2 view .LVU360
 1670 01f4 4AF8080B 		str	r0, [r10], #8	@ unaligned
 1671 01f8 6960     		str	r1, [r5, #4]	@ unaligned
 1672              	.LVL45:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1673              		.loc 18 426 23 discriminator 2 view .LVU361
 1674              	.LBE1531:
 1675              	.LBE1534:
 1676              	.LBE1537:
 1677              	.LBE1540:
 1678              	.LBE1543:
 1679              	.LBE1546:
 1680              	.LBE1549:
 1681              	.LBE1552:
 1682              	.LBE1555:
 1683              	.LBE1558:
 1684              	.LBE1562:
 1685              	.LBE1567:
 1686              	.LBE1579:
 1687              	.LBE1586:
 1688              	.LBB1587:
 1689              	.LBI1587:
 1690              		.loc 14 162 7 is_stmt 1 discriminator 2 view .LVU362
 1691              	.LBB1588:
 1692              	.LBI1588:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1693              		.loc 13 89 7 discriminator 2 view .LVU363
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1694              		.loc 13 89 7 is_stmt 0 discriminator 2 view .LVU364
 1695              	.LBE1588:
 1696              	.LBE1587:
  67:TapeLoop.h    ****             read_head); //the whole integer part of the read head location
 1697              		.loc 8 67 9 is_stmt 1 discriminator 2 view .LVU365
  69:TapeLoop.h    ****             = read_head
 1698              		.loc 8 69 9 discriminator 2 view .LVU366
  74:TapeLoop.h    ****             = ((tape_speed > 0 ? read_head_whole + 1 : read_head_whole - 1)
 1699              		.loc 8 74 9 discriminator 2 view .LVU367
  77:TapeLoop.h    **** 
 1700              		.loc 8 77 15 is_stmt 0 discriminator 2 view .LVU368
 1701 01fa 1146     		mov	r1, r2
 1702 01fc 82FB0702 		smull	r0, r2, r2, r7
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 118


 1703 0200 81FB0301 		smull	r0, r1, r1, r3
 1704 0204 4FEAE370 		asr	r0, r3, #31
 1705 0208 CBEB6242 		rsb	r2, fp, r2, asr #17
 1706 020c DFF8BCB1 		ldr	fp, .L42+60
 1707 0210 0BFB1272 		mls	r2, fp, r2, r7
 1708 0214 03DD     		ble	.L12
  77:TapeLoop.h    **** 
 1709              		.loc 8 77 15 view .LVU369
 1710 0216 C0EB6142 		rsb	r2, r0, r1, asr #17
 1711 021a 0BFB1232 		mls	r2, fp, r2, r3
 1712              	.L12:
 1713              	.LVL46:
  79:TapeLoop.h    ****                                                   track[0][next_read_head],
 1714              		.loc 8 79 9 is_stmt 1 view .LVU370
  79:TapeLoop.h    ****                                                   track[0][next_read_head],
 1715              		.loc 8 79 9 is_stmt 0 view .LVU371
 1716              	.LBE1604:
 1717              	.LBE1615:
 1718              	.LBB1616:
 1719              	.LBB1617:
 1720              	.LBB1618:
 1721              	.LBB1619:
 1722              	.LBB1620:
 1723              	.LBB1621:
 1724              	.LBB1622:
 1725              	.LBB1623:
 1726              	.LBB1624:
 1727              	.LBB1625:
 1728              	.LBI1625:
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 119


 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 1729              		.loc 16 491 7 is_stmt 1 view .LVU372
 1730              	.LBB1626:
 1731              	.LBB1627:
 1732              	.LBI1627:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 1733              		.loc 13 120 7 view .LVU373
 1734              	.LBE1627:
 1735              	.LBE1626:
 1736              	.LBE1625:
 1737              	.LBE1624:
 1738              	.LBE1623:
 1739              	.LBE1622:
 1740              	.LBE1621:
 1741              	.LBE1620:
 1742              	.LBE1619:
 1743              	.LBE1618:
 1744              	.LBE1617:
 1745              	.LBE1616:
 1746              	.LBB1693:
 1747              	.LBB1605:
  79:TapeLoop.h    ****                                                   track[0][next_read_head],
 1748              		.loc 8 79 51 is_stmt 0 view .LVU374
 1749 021e 6168     		ldr	r1, [r4, #4]
 1750              	.LBE1605:
 1751              	.LBE1693:
 1752              	.LBB1694:
 1753              	.LBB1689:
 1754              	.LBB1685:
 1755              	.LBB1681:
 1756              	.LBB1659:
 1757              	.LBB1653:
 1758              	.LBB1649:
 1759              	.LBB1643:
 1760              	.LBB1640:
 1761              	.LBB1637:
 1762              	.LBB1634:
 1763              	.LBB1631:
 1764              	.LBB1628:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 120


 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 1765              		.loc 13 133 19 view .LVU375
 1766 0220 6046     		mov	r0, ip
 1767              	.LBE1628:
 1768              	.LBE1631:
 1769              	.LBE1634:
 1770              	.LBE1637:
 1771              	.LBE1640:
 1772              	.LBE1643:
 1773              	.LBE1649:
 1774              	.LBE1653:
 1775              	.LBE1659:
 1776              	.LBE1681:
 1777              	.LBE1685:
 1778              	.LBE1689:
 1779              	.LBE1694:
 1780              	.LBB1695:
 1781              	.LBB1606:
  82:TapeLoop.h    ****                                                   track[1][next_read_head],
 1782              		.loc 8 82 50 view .LVU376
 1783 0222 DFF8ACB1 		ldr	fp, .L42+64
 1784              	.LBE1606:
 1785              	.LBE1695:
 1786              	.LBE1491:
 318:TapeLooper.cpp ****         {
 1787              		.loc 10 318 30 view .LVU377
 1788 0226 6C34     		adds	r4, r4, #108
 1789              	.LVL47:
 318:TapeLooper.cpp ****         {
 1790              		.loc 10 318 30 view .LVU378
 1791 0228 01EB8603 		add	r3, r1, r6, lsl #2
 1792 022c 01EB8202 		add	r2, r1, r2, lsl #2
 1793              	.LVL48:
 1794              	.LBB1709:
 1795              	.LBB1696:
 1796              	.LBB1607:
  82:TapeLoop.h    ****                                                   track[1][next_read_head],
 1797              		.loc 8 82 50 view .LVU379
 1798 0230 5F46     		mov	r7, fp
 1799 0232 9B44     		add	fp, fp, r3
  79:TapeLoop.h    ****                                                   track[0][next_read_head],
 1800              		.loc 8 79 50 view .LVU380
 1801 0234 93ED007A 		vldr.32	s14, [r3]
 1802              	.LVL49:
 1803              	.LBB1589:
 1804              	.LBI1589:
  57:TapeLoop.h    ****     {
 1805              		.loc 8 57 11 is_stmt 1 view .LVU381
 1806              	.LBB1590:
  59:TapeLoop.h    ****     }
 1807              		.loc 8 59 9 view .LVU382
 1808              	.LBE1590:
 1809              	.LBE1589:
  82:TapeLoop.h    ****                                                   track[1][next_read_head],
 1810              		.loc 8 82 50 is_stmt 0 view .LVU383
 1811 0238 1744     		add	r7, r7, r2
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 121


 1812              	.LBB1594:
 1813              	.LBB1591:
  59:TapeLoop.h    ****     }
 1814              		.loc 8 59 20 view .LVU384
 1815 023a D2ED005A 		vldr.32	s11, [r2]
 1816              	.LBE1591:
 1817              	.LBE1594:
  82:TapeLoop.h    ****                                                   track[1][next_read_head],
 1818              		.loc 8 82 50 view .LVU385
 1819 023e DBED007A 		vldr.32	s15, [fp]
 1820              	.LBE1607:
 1821              	.LBE1696:
 1822              	.LBB1697:
 1823              	.LBB1690:
 1824              	.LBB1686:
 1825              	.LBB1682:
 1826              	.LBB1660:
 1827              	.LBB1654:
 1828              	.LBB1650:
 1829              	.LBB1644:
 1830              	.LBB1641:
 1831              	.LBB1638:
 1832              	.LBB1635:
 1833              	.LBB1632:
 1834              	.LBB1629:
 1835              		.loc 13 133 19 view .LVU386
 1836 0242 AEEB0C01 		sub	r1, lr, ip
 1837              	.LBE1629:
 1838              	.LBE1632:
 1839              	.LBE1635:
 1840              	.LBE1638:
 1841              	.LBE1641:
 1842              	.LBE1644:
 1843              	.LBE1650:
 1844              	.LBE1654:
 1845              	.LBE1660:
 1846              	.LBE1682:
 1847              	.LBE1686:
 1848              	.LBE1690:
 1849              	.LBE1697:
 1850              	.LBB1698:
 1851              	.LBB1608:
 1852              	.LBB1595:
 1853              	.LBB1596:
  59:TapeLoop.h    ****     }
 1854              		.loc 8 59 20 view .LVU387
 1855 0246 97ED006A 		vldr.32	s12, [r7]
 1856              	.LBE1596:
 1857              	.LBE1595:
 1858              	.LBB1599:
 1859              	.LBB1592:
 1860 024a 75EEC75A 		vsub.f32	s11, s11, s14
 1861              	.LBE1592:
 1862              	.LBE1599:
 1863              	.LBB1600:
 1864              	.LBB1597:
 1865 024e 36EE676A 		vsub.f32	s12, s12, s15
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 122


 1866              	.LBE1597:
 1867              	.LBE1600:
 1868              	.LBB1601:
 1869              	.LBB1593:
  59:TapeLoop.h    ****     }
 1870              		.loc 8 59 39 view .LVU388
 1871 0252 A6EEA57A 		vfma.f32	s14, s13, s11
 1872              	.LVL50:
  59:TapeLoop.h    ****     }
 1873              		.loc 8 59 39 view .LVU389
 1874              	.LBE1593:
 1875              	.LBE1601:
  82:TapeLoop.h    ****                                                   track[1][next_read_head],
 1876              		.loc 8 82 9 is_stmt 1 view .LVU390
 1877              	.LBB1602:
 1878              	.LBI1595:
  57:TapeLoop.h    ****     {
 1879              		.loc 8 57 11 view .LVU391
 1880              	.LBB1598:
  59:TapeLoop.h    ****     }
 1881              		.loc 8 59 9 view .LVU392
  59:TapeLoop.h    ****     }
 1882              		.loc 8 59 39 is_stmt 0 view .LVU393
 1883 0256 E6EE867A 		vfma.f32	s15, s13, s12
 1884              	.LVL51:
  59:TapeLoop.h    ****     }
 1885              		.loc 8 59 39 view .LVU394
 1886              	.LBE1598:
 1887              	.LBE1602:
  86:TapeLoop.h    ****         out[1] = interpolated_R;
 1888              		.loc 8 86 9 is_stmt 1 view .LVU395
  86:TapeLoop.h    ****         out[1] = interpolated_R;
 1889              		.loc 8 86 16 is_stmt 0 view .LVU396
 1890 025a 85ED007A 		vstr.32	s14, [r5]
  87:TapeLoop.h    **** 
 1891              		.loc 8 87 9 is_stmt 1 view .LVU397
  87:TapeLoop.h    **** 
 1892              		.loc 8 87 16 is_stmt 0 view .LVU398
 1893 025e C5ED017A 		vstr.32	s15, [r5, #4]
  89:TapeLoop.h    ****     }
 1894              		.loc 8 89 9 is_stmt 1 view .LVU399
 1895              	.LVL52:
  89:TapeLoop.h    ****     }
 1896              		.loc 8 89 9 is_stmt 0 view .LVU400
 1897              	.LBE1608:
 1898              	.LBE1698:
 1899              	.LBB1699:
 1900              	.LBI1616:
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1901              		.loc 11 709 7 is_stmt 1 view .LVU401
 1902              	.LBB1691:
 1903              	.LBB1687:
 1904              	.LBI1618:
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 123


1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __position);
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __first, iterator __last);
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Constant-time move assignment when source object's memory can be
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // moved, either because the source's allocator will move too
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // or because the allocators are equal.
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_move_assign(vector&& __x, true_type) noexcept
 1905              		.loc 11 1815 7 view .LVU402
 1906              	.LBB1683:
 1907              	.LBB1661:
 1908              	.LBI1661:
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 1909              		.loc 11 284 7 view .LVU403
 1910              	.LBB1662:
 1911              	.LBI1662:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1912              		.loc 14 147 7 view .LVU404
 1913              	.LBB1663:
 1914              	.LBI1663:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 124


 1915              		.loc 13 82 7 view .LVU405
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1916              		.loc 13 82 7 is_stmt 0 view .LVU406
 1917              	.LBE1663:
 1918              	.LBE1662:
 1919              	.LBE1661:
 1920              	.LBB1664:
 1921              	.LBI1664:
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 1922              		.loc 11 497 7 is_stmt 1 view .LVU407
 1923              	.LBB1665:
 1924              	.LBI1665:
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 1925              		.loc 11 293 7 view .LVU408
 1926              	.LBB1666:
 1927              	.LBI1666:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 1928              		.loc 11 136 2 view .LVU409
 1929              	.LBB1667:
 1930              	.LBI1667:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1931              		.loc 14 147 7 view .LVU410
 1932              	.LBB1668:
 1933              	.LBI1668:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1934              		.loc 13 82 7 view .LVU411
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1935              		.loc 13 82 7 is_stmt 0 view .LVU412
 1936              	.LBE1668:
 1937              	.LBE1667:
 1938              	.LBB1669:
 1939              	.LBI1669:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1940              		.loc 11 97 2 is_stmt 1 view .LVU413
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1941              		.loc 11 97 2 is_stmt 0 view .LVU414
 1942              	.LBE1669:
 1943              	.LBE1666:
 1944              	.LBE1665:
 1945              	.LBE1664:
 1946              	.LBB1670:
 1947              	.LBI1670:
 1948              		.loc 14 162 7 is_stmt 1 view .LVU415
 1949              	.LBB1671:
 1950              	.LBI1671:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1951              		.loc 13 89 7 view .LVU416
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1952              		.loc 13 89 7 is_stmt 0 view .LVU417
 1953              	.LBE1671:
 1954              	.LBE1670:
 1955              	.LBB1672:
 1956              	.LBI1672:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 1957              		.loc 11 117 2 is_stmt 1 view .LVU418
 1958              	.LBB1673:
 1959              	.LBB1674:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 125


 1960              	.LBI1674:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1961              		.loc 11 97 2 view .LVU419
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1962              		.loc 11 97 2 is_stmt 0 view .LVU420
 1963              	.LBE1674:
 1964              	.LBB1675:
 1965              	.LBI1675:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 1966              		.loc 11 109 2 is_stmt 1 view .LVU421
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 1967              		.loc 11 109 2 is_stmt 0 view .LVU422
 1968              	.LBE1675:
 1969              	.LBE1673:
 1970              	.LBE1672:
 1971              	.LBB1676:
 1972              	.LBI1676:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 1973              		.loc 11 117 2 is_stmt 1 view .LVU423
 1974              	.LBB1677:
 1975              	.LBB1678:
 1976              	.LBI1678:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1977              		.loc 11 97 2 view .LVU424
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1978              		.loc 11 97 2 is_stmt 0 view .LVU425
 1979              	.LBE1678:
 1980              	.LBE1677:
 1981              	.LBE1676:
 1982              	.LBB1679:
 1983              	.LBI1620:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1984              		.loc 11 678 7 is_stmt 1 view .LVU426
 1985              	.LBB1655:
 1986              	.LBI1655:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1987              		.loc 11 276 7 view .LVU427
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1988              		.loc 11 276 7 is_stmt 0 view .LVU428
 1989              	.LBE1655:
 1990              	.LBB1656:
 1991              	.LBI1656:
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 126


 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 127


 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 128


 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 129


 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 130


 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 1992              		.loc 16 735 5 is_stmt 1 view .LVU429
 1993              		.loc 16 735 5 is_stmt 0 view .LVU430
 1994              	.LBE1656:
 1995              	.LBB1657:
 1996              	.LBI1621:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1997              		.loc 11 333 7 is_stmt 1 view .LVU431
 1998              	.LBB1651:
 1999              	.LBB1645:
 2000              	.LBI1623:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2001              		.loc 11 350 7 view .LVU432
 2002              	.LBB1642:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2003              		.loc 11 353 2 is_stmt 0 view .LVU433
 2004 0262 BCF1000F 		cmp	ip, #0
 2005 0266 05D0     		beq	.L13
 2006              	.LVL53:
 2007              	.LBB1639:
 2008              	.LBB1636:
 2009              	.LBB1633:
 2010              	.LBB1630:
 2011              		.loc 13 133 19 view .LVU434
 2012 0268 FFF7FEFF 		bl	_ZdlPvj
 2013              	.LVL54:
 2014              		.loc 13 133 19 view .LVU435
 2015              	.LBE1630:
 2016              	.LBE1633:
 2017              	.LBE1636:
 2018              	.LBE1639:
 2019              	.LBE1642:
 2020              	.LBE1645:
 2021              	.LBE1651:
 2022              	.LBE1657:
 2023              	.LBE1679:
 2024              	.LBE1683:
 2025              	.LBE1687:
 2026              	.LBE1691:
 2027              	.LBE1699:
 324:TapeLooper.cpp **** 
 325:TapeLooper.cpp ****             mixed[0] = mixed[0] + (samps[0] * (1.f - f)) * v;
 2028              		.loc 10 325 45 view .LVU436
 2029 026c 95ED007A 		vldr.32	s14, [r5]
 326:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2030              		.loc 10 326 45 view .LVU437
 2031 0270 D5ED017A 		vldr.32	s15, [r5, #4]
 2032              	.L13:
 2033              	.LVL55:
 2034              	.LBB1700:
 2035              	.LBB1692:
 2036              	.LBB1688:
 2037              	.LBB1684:
 2038              	.LBB1680:
 2039              	.LBB1658:
 2040              	.LBB1652:
 2041              	.LBB1646:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 131


 2042              	.LBI1646:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2043              		.loc 11 128 14 is_stmt 1 view .LVU438
 2044              	.LBB1647:
 2045              	.LBI1647:
 2046              		.loc 14 162 7 view .LVU439
 2047              	.LBB1648:
 2048              	.LBI1648:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2049              		.loc 13 89 7 view .LVU440
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2050              		.loc 13 89 7 is_stmt 0 view .LVU441
 2051              	.LBE1648:
 2052              	.LBE1647:
 2053              	.LBE1646:
 2054              	.LBE1652:
 2055              	.LBE1658:
 2056              	.LBE1680:
 2057              	.LBE1684:
 2058              	.LBE1688:
 2059              	.LBE1692:
 2060              	.LBE1700:
 2061              	.LBB1701:
 2062              	.LBI1701:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2063              		.loc 11 678 7 is_stmt 1 view .LVU442
 2064              	.LBB1702:
 2065              	.LBI1702:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2066              		.loc 11 276 7 view .LVU443
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2067              		.loc 11 276 7 is_stmt 0 view .LVU444
 2068              	.LBE1702:
 2069              	.LBB1703:
 2070              	.LBI1703:
 2071              		.loc 16 735 5 is_stmt 1 view .LVU445
 2072              		.loc 16 735 5 is_stmt 0 view .LVU446
 2073              	.LBE1703:
 2074              	.LBB1704:
 2075              	.LBI1704:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2076              		.loc 11 333 7 is_stmt 1 view .LVU447
 2077              	.LBB1705:
 2078              	.LBI1705:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2079              		.loc 11 350 7 view .LVU448
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2080              		.loc 11 350 7 is_stmt 0 view .LVU449
 2081              	.LBE1705:
 2082              	.LBB1706:
 2083              	.LBI1706:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2084              		.loc 11 128 14 is_stmt 1 view .LVU450
 2085              	.LBB1707:
 2086              	.LBI1707:
 2087              		.loc 14 162 7 view .LVU451
 2088              	.LBB1708:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 132


 2089              	.LBI1708:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2090              		.loc 13 89 7 view .LVU452
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2091              		.loc 13 89 7 is_stmt 0 view .LVU453
 2092              	.LBE1708:
 2093              	.LBE1707:
 2094              	.LBE1706:
 2095              	.LBE1704:
 2096              	.LBE1701:
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2097              		.loc 10 325 13 is_stmt 1 view .LVU454
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2098              		.loc 10 325 52 is_stmt 0 view .LVU455
 2099 0274 F7EE006A 		vmov.f32	s13, #1.0e+0
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2100              		.loc 10 325 33 view .LVU456
 2101 0278 98ED006A 		vldr.32	s12, [r8]
 2102              		.loc 10 326 45 view .LVU457
 2103 027c 68EEA77A 		vmul.f32	s15, s17, s15
 2104              		.loc 10 326 33 view .LVU458
 2105 0280 D8ED015A 		vldr.32	s11, [r8, #4]
 2106              	.LBE1709:
 318:TapeLooper.cpp ****         {
 2107              		.loc 10 318 30 view .LVU459
 2108 0284 4E4B     		ldr	r3, .L42+48
 2109              	.LBB1710:
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2110              		.loc 10 325 52 view .LVU460
 2111 0286 76EEE86A 		vsub.f32	s13, s13, s17
 2112              		.loc 10 326 33 view .LVU461
 2113 028a E7EE885A 		vfma.f32	s11, s15, s16
 2114              	.LBE1710:
 318:TapeLooper.cpp ****         {
 2115              		.loc 10 318 30 view .LVU462
 2116 028e A342     		cmp	r3, r4
 2117              	.LBB1711:
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2118              		.loc 10 325 33 view .LVU463
 2119 0290 F0EE467A 		vmov.f32	s15, s12
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2120              		.loc 10 325 45 view .LVU464
 2121 0294 26EE877A 		vmul.f32	s14, s13, s14
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2122              		.loc 10 325 33 view .LVU465
 2123 0298 E7EE087A 		vfma.f32	s15, s14, s16
 2124              		.loc 10 326 22 view .LVU466
 2125 029c C8ED015A 		vstr.32	s11, [r8, #4]
 325:TapeLooper.cpp ****             mixed[1] = mixed[1] + (samps[1] * f) * v;
 2126              		.loc 10 325 22 view .LVU467
 2127 02a0 C8ED007A 		vstr.32	s15, [r8]
 2128              		.loc 10 326 13 is_stmt 1 view .LVU468
 2129              	.LBE1711:
 318:TapeLooper.cpp ****         {
 2130              		.loc 10 318 9 view .LVU469
 2131              	.LVL56:
 318:TapeLooper.cpp ****         {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 133


 2132              		.loc 10 318 30 view .LVU470
 2133 02a4 7FF47FAF 		bne	.L14
 2134              	.LBE1490:
 327:TapeLooper.cpp ****         }
 328:TapeLooper.cpp **** 
 329:TapeLooper.cpp ****         out[0][i] = mixed[0] * 0.75 + monitor[0] * .25;
 2135              		.loc 10 329 50 is_stmt 0 view .LVU471
 2136 02a8 99ED006A 		vldr.32	s12, [r9]
 2137 02ac B5EE004B 		vmov.f64	d4, #2.5e-1
 2138              		.loc 10 329 30 view .LVU472
 2139 02b0 B7EEE77A 		vcvt.f64.f32	d7, s15
 2140              		.loc 10 329 19 view .LVU473
 2141 02b4 019A     		ldr	r2, [sp, #4]
 2142              		.loc 10 329 50 view .LVU474
 2143 02b6 B7EEC66A 		vcvt.f64.f32	d6, s12
 2144              		.loc 10 329 19 view .LVU475
 2145 02ba 0099     		ldr	r1, [sp]
 2146              		.loc 10 329 37 view .LVU476
 2147 02bc B6EE085B 		vmov.f64	d5, #7.5e-1
 2148              		.loc 10 329 19 view .LVU477
 2149 02c0 1368     		ldr	r3, [r2]
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 331:TapeLooper.cpp **** 
 332:TapeLooper.cpp **** 
 333:TapeLooper.cpp **** 		record_button.Debounce();
 2150              		.loc 10 333 25 view .LVU478
 2151 02c2 4048     		ldr	r0, .L42+52
 329:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2152              		.loc 10 329 50 view .LVU479
 2153 02c4 26EE046B 		vmul.f64	d6, d6, d4
 329:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2154              		.loc 10 329 19 view .LVU480
 2155 02c8 0B44     		add	r3, r3, r1
 329:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2156              		.loc 10 329 50 view .LVU481
 2157 02ca 039E     		ldr	r6, [sp, #12]
 329:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2158              		.loc 10 329 9 is_stmt 1 view .LVU482
 329:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2159              		.loc 10 329 37 is_stmt 0 view .LVU483
 2160 02cc A7EE056B 		vfma.f64	d6, d7, d5
 2161 02d0 B7EEC66B 		vcvt.f32.f64	s12, d6
 2162 02d4 83ED006A 		vstr.32	s12, [r3]
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2163              		.loc 10 330 9 is_stmt 1 view .LVU484
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2164              		.loc 10 330 50 is_stmt 0 view .LVU485
 2165 02d8 99ED017A 		vldr.32	s14, [r9, #4]
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2166              		.loc 10 330 30 view .LVU486
 2167 02dc 98ED016A 		vldr.32	s12, [r8, #4]
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2168              		.loc 10 330 50 view .LVU487
 2169 02e0 B7EEC77A 		vcvt.f64.f32	d7, s14
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2170              		.loc 10 330 19 view .LVU488
 2171 02e4 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 134


 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2172              		.loc 10 330 30 view .LVU489
 2173 02e6 B7EEC66A 		vcvt.f64.f32	d6, s12
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2174              		.loc 10 330 19 view .LVU490
 2175 02ea 0B44     		add	r3, r3, r1
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2176              		.loc 10 330 50 view .LVU491
 2177 02ec 27EE047B 		vmul.f64	d7, d7, d4
 330:TapeLooper.cpp ****         out[1][i] = mixed[1] * 0.75 + monitor[1] * .25;
 2178              		.loc 10 330 37 view .LVU492
 2179 02f0 A6EE057B 		vfma.f64	d7, d6, d5
 2180 02f4 B7EEC77B 		vcvt.f32.f64	s14, d7
 2181 02f8 83ED007A 		vstr.32	s14, [r3]
 2182              		.loc 10 333 3 is_stmt 1 view .LVU493
 2183              		.loc 10 333 25 is_stmt 0 view .LVU494
 2184 02fc FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 2185              	.LVL57:
 334:TapeLooper.cpp ****         if(record_button.Pressed())
 2186              		.loc 10 334 9 is_stmt 1 view .LVU495
 2187              	.LBB1712:
 2188              	.LBI1712:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 135


  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 2189              		.loc 1 79 17 view .LVU496
 2190              	.LBB1713:
 2191              		.loc 1 79 35 view .LVU497
 2192              		.loc 1 79 35 is_stmt 0 view .LVU498
 2193              	.LBE1713:
 2194              	.LBE1712:
 2195              		.loc 10 334 9 view .LVU499
 2196 0300 304B     		ldr	r3, .L42+52
 2197 0302 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2198 0304 FF2B     		cmp	r3, #255
 2199 0306 79D0     		beq	.L40
 2200              	.LVL58:
 2201              	.L15:
 335:TapeLooper.cpp ****         {
 336:TapeLooper.cpp ****             tracks[active_track].writeNextSamples({out[0][i], out[1][i]});
 337:TapeLooper.cpp ****         }
 338:TapeLooper.cpp **** 
 339:TapeLooper.cpp **** 		out[0][i] = saturate_and_compress(out[0][i]);
 2202              		.loc 10 339 3 is_stmt 1 discriminator 2 view .LVU500
 2203              	.LBB1714:
 2204              	.LBB1715:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2205              		.loc 10 118 33 is_stmt 0 discriminator 2 view .LVU501
 2206 0308 2F4B     		ldr	r3, .L42+56
 2207 030a B7EE009A 		vmov.f32	s18, #1.0e+0
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2208              		.loc 10 118 27 discriminator 2 view .LVU502
 2209 030e B3EE0EAB 		vmov.f64	d10, #3.0e+1
 2210              	.LBE1715:
 2211              	.LBE1714:
 2212              		.loc 10 339 45 discriminator 2 view .LVU503
 2213 0312 019A     		ldr	r2, [sp, #4]
 2214              	.LBB1726:
 2215              	.LBB1720:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2216              		.loc 10 118 33 discriminator 2 view .LVU504
 2217 0314 93ED007A 		vldr.32	s14, [r3]
 2218              	.LBE1720:
 2219              	.LBE1726:
 2220              		.loc 10 339 45 discriminator 2 view .LVU505
 2221 0318 1468     		ldr	r4, [r2]
 2222              	.LBB1727:
 2223              	.LBB1721:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2224              		.loc 10 118 33 discriminator 2 view .LVU506
 2225 031a 39EE477A 		vsub.f32	s14, s18, s14
 2226              	.LBE1721:
 2227              	.LBE1727:
 2228              		.loc 10 339 45 discriminator 2 view .LVU507
 2229 031e 0099     		ldr	r1, [sp]
 2230              	.LBE1189:
 306:TapeLooper.cpp ****     {
 2231              		.loc 10 306 5 discriminator 2 view .LVU508
 2232 0320 029F     		ldr	r7, [sp, #8]
 2233              	.LBB1914:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 136


 2234              		.loc 10 339 45 discriminator 2 view .LVU509
 2235 0322 0C44     		add	r4, r4, r1
 2236              	.LBB1728:
 2237              	.LBB1722:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2238              		.loc 10 118 33 discriminator 2 view .LVU510
 2239 0324 B7EEC77A 		vcvt.f64.f32	d7, s14
 2240              	.LBE1722:
 2241              	.LBE1728:
 2242              	.LBE1914:
 306:TapeLooper.cpp ****     {
 2243              		.loc 10 306 5 discriminator 2 view .LVU511
 2244 0328 0137     		adds	r7, r7, #1
 2245              	.LBB1915:
 2246              	.LBB1729:
 2247              	.LBB1723:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2248              		.loc 10 118 58 discriminator 2 view .LVU512
 2249 032a 9FED1B8B 		vldr.64	d8, .L42+8
 2250              	.LVL59:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2251              		.loc 10 118 58 discriminator 2 view .LVU513
 2252 032e 9FED1CBB 		vldr.64	d11, .L42+16
 2253              	.LBE1723:
 2254              	.LBE1729:
 2255              	.LBE1915:
 306:TapeLooper.cpp ****     {
 2256              		.loc 10 306 5 discriminator 2 view .LVU514
 2257 0332 0297     		str	r7, [sp, #8]
 2258              	.LVL60:
 2259              	.LBB1916:
 2260              	.LBB1730:
 2261              	.LBB1724:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2262              		.loc 10 118 58 discriminator 2 view .LVU515
 2263 0334 B0EE480B 		vmov.f64	d0, d8
 2264 0338 A7EE0B0B 		vfma.f64	d0, d7, d11
 2265              	.LVL61:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2266              		.loc 10 118 58 discriminator 2 view .LVU516
 2267              	.LBE1724:
 2268              	.LBI1714:
 116:TapeLooper.cpp **** { //TODO tweak this???
 2269              		.loc 10 116 7 is_stmt 1 discriminator 2 view .LVU517
 2270              	.LBB1725:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2271              		.loc 10 118 5 discriminator 2 view .LVU518
 119:TapeLooper.cpp ****     return saturated;
 2272              		.loc 10 119 5 discriminator 2 view .LVU519
 2273              	.LBB1716:
 2274              	.LBI1716:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 2275              		.loc 12 125 3 discriminator 2 view .LVU520
 2276              	.LBB1717:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 2277              		.loc 12 126 5 discriminator 2 view .LVU521
 2278              	.LBE1717:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 137


 2279              	.LBE1716:
 119:TapeLooper.cpp ****     return saturated;
 2280              		.loc 10 119 28 is_stmt 0 discriminator 2 view .LVU522
 2281 033c D4ED007A 		vldr.32	s15, [r4]
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2282              		.loc 10 118 27 discriminator 2 view .LVU523
 2283 0340 20EE0A0B 		vmul.f64	d0, d0, d10
 2284              	.LVL62:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2285              		.loc 10 118 11 discriminator 2 view .LVU524
 2286 0344 B7EEC00B 		vcvt.f32.f64	s0, d0
 2287              	.LBB1719:
 2288              	.LBB1718:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 2289              		.loc 12 126 27 discriminator 2 view .LVU525
 2290 0348 20EE270A 		vmul.f32	s0, s0, s15
 2291 034c FFF7FEFF 		bl	atanf
 2292              	.LVL63:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 2293              		.loc 12 126 27 discriminator 2 view .LVU526
 2294              	.LBE1718:
 2295              	.LBE1719:
 120:TapeLooper.cpp **** }
 2296              		.loc 10 120 5 is_stmt 1 discriminator 2 view .LVU527
 120:TapeLooper.cpp **** }
 2297              		.loc 10 120 5 is_stmt 0 discriminator 2 view .LVU528
 2298              	.LBE1725:
 2299              	.LBE1730:
 2300              	.LBB1731:
 2301              	.LBB1732:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2302              		.loc 10 118 33 discriminator 2 view .LVU529
 2303 0350 1D4B     		ldr	r3, .L42+56
 2304              	.LBE1732:
 2305              	.LBE1731:
 2306              		.loc 10 339 13 discriminator 2 view .LVU530
 2307 0352 84ED000A 		vstr.32	s0, [r4]
 340:TapeLooper.cpp ****         out[1][i] = saturate_and_compress(out[1][i]);
 2308              		.loc 10 340 9 is_stmt 1 discriminator 2 view .LVU531
 2309              	.LBB1742:
 2310              	.LBB1737:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2311              		.loc 10 118 33 is_stmt 0 discriminator 2 view .LVU532
 2312 0356 93ED007A 		vldr.32	s14, [r3]
 2313              	.LBE1737:
 2314              	.LBE1742:
 2315              		.loc 10 340 51 discriminator 2 view .LVU533
 2316 035a 019A     		ldr	r2, [sp, #4]
 2317              	.LBB1743:
 2318              	.LBB1738:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2319              		.loc 10 118 33 discriminator 2 view .LVU534
 2320 035c 39EE477A 		vsub.f32	s14, s18, s14
 2321              	.LBE1738:
 2322              	.LBE1743:
 2323              		.loc 10 340 51 discriminator 2 view .LVU535
 2324 0360 0099     		ldr	r1, [sp]
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 138


 2325 0362 5468     		ldr	r4, [r2, #4]
 2326              	.LBB1744:
 2327              	.LBB1739:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2328              		.loc 10 118 33 discriminator 2 view .LVU536
 2329 0364 B7EEC77A 		vcvt.f64.f32	d7, s14
 2330              	.LBE1739:
 2331              	.LBE1744:
 2332              		.loc 10 340 51 discriminator 2 view .LVU537
 2333 0368 0C44     		add	r4, r4, r1
 2334              	.LBB1745:
 2335              	.LBB1740:
 119:TapeLooper.cpp ****     return saturated;
 2336              		.loc 10 119 28 discriminator 2 view .LVU538
 2337 036a 94ED000A 		vldr.32	s0, [r4]
 2338              	.LVL64:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2339              		.loc 10 118 58 discriminator 2 view .LVU539
 2340 036e A7EE0B8B 		vfma.f64	d8, d7, d11
 2341              	.LVL65:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2342              		.loc 10 118 58 discriminator 2 view .LVU540
 2343              	.LBE1740:
 2344              	.LBI1731:
 116:TapeLooper.cpp **** { //TODO tweak this???
 2345              		.loc 10 116 7 is_stmt 1 discriminator 2 view .LVU541
 2346              	.LBB1741:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2347              		.loc 10 118 5 discriminator 2 view .LVU542
 119:TapeLooper.cpp ****     return saturated;
 2348              		.loc 10 119 5 discriminator 2 view .LVU543
 2349              	.LBB1733:
 2350              	.LBI1733:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 2351              		.loc 12 125 3 discriminator 2 view .LVU544
 2352              	.LBB1734:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 2353              		.loc 12 126 5 discriminator 2 view .LVU545
 2354              	.LBE1734:
 2355              	.LBE1733:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2356              		.loc 10 118 27 is_stmt 0 discriminator 2 view .LVU546
 2357 0372 28EE0A8B 		vmul.f64	d8, d8, d10
 2358              	.LVL66:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 2359              		.loc 10 118 11 discriminator 2 view .LVU547
 2360 0376 B7EEC88B 		vcvt.f32.f64	s16, d8
 2361              	.LBB1736:
 2362              	.LBB1735:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 2363              		.loc 12 126 27 discriminator 2 view .LVU548
 2364 037a 28EE000A 		vmul.f32	s0, s16, s0
 2365              	.LVL67:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 2366              		.loc 12 126 27 discriminator 2 view .LVU549
 2367 037e FFF7FEFF 		bl	atanf
 2368              	.LVL68:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 139


 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 2369              		.loc 12 126 27 discriminator 2 view .LVU550
 2370              	.LBE1735:
 2371              	.LBE1736:
 120:TapeLooper.cpp **** }
 2372              		.loc 10 120 5 is_stmt 1 discriminator 2 view .LVU551
 120:TapeLooper.cpp **** }
 2373              		.loc 10 120 5 is_stmt 0 discriminator 2 view .LVU552
 2374              	.LBE1741:
 2375              	.LBE1745:
 2376              	.LBB1746:
 2377              	.LBB1747:
 2378              	.LBB1748:
 2379              	.LBB1749:
 2380              	.LBB1750:
 2381              	.LBB1751:
 2382              	.LBB1752:
 2383              		.loc 13 133 19 discriminator 2 view .LVU553
 2384 0382 2846     		mov	r0, r5
 2385              	.LBE1752:
 2386              	.LBE1751:
 2387              	.LBE1750:
 2388              	.LBE1749:
 2389              	.LBE1748:
 2390              	.LBE1747:
 2391              	.LBE1746:
 2392              		.loc 10 340 19 discriminator 2 view .LVU554
 2393 0384 84ED000A 		vstr.32	s0, [r4]
 2394 0388 24E0     		b	.L43
 2395              	.L44:
 2396 038a 00BFAFF3 		.align	3
 2396      0080
 2397              	.L42:
 2398 0390 00000000 		.word	0
 2399 0394 00881341 		.word	1091799040
 2400 0398 9A999999 		.word	-1717986918
 2401 039c 9999B93F 		.word	1069128089
 2402 03a0 CDCCCCCC 		.word	-858993459
 2403 03a4 CCCCEC3F 		.word	1072483532
 2404 03a8 00000000 		.word	.LANCHOR0
 2405 03ac 00009645 		.word	1167458304
 2406 03b0 00409C48 		.word	1218199552
 2407 03b4 FFE10400 		.word	319999
 2408 03b8 01E20400 		.word	320001
 2409 03bc AD8BDB68 		.word	1759218605
 2410 03c0 B0010000 		.word	.LANCHOR0+432
 2411 03c4 00000000 		.word	.LANCHOR1
 2412 03c8 00000000 		.word	.LANCHOR3
 2413 03cc 00E20400 		.word	320000
 2414 03d0 00881300 		.word	1280000
 2415              	.L43:
 2416              	.LVL69:
 2417              	.LBB1764:
 2418              	.LBI1746:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2419              		.loc 11 678 7 is_stmt 1 discriminator 2 view .LVU555
 2420              	.LBB1761:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 140


 2421              	.LBI1761:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2422              		.loc 11 276 7 discriminator 2 view .LVU556
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2423              		.loc 11 276 7 is_stmt 0 discriminator 2 view .LVU557
 2424              	.LBE1761:
 2425              	.LBB1762:
 2426              	.LBI1762:
 2427              		.loc 16 735 5 is_stmt 1 discriminator 2 view .LVU558
 2428              		.loc 16 735 5 is_stmt 0 discriminator 2 view .LVU559
 2429              	.LBE1762:
 2430              	.LBB1763:
 2431              	.LBI1747:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2432              		.loc 11 333 7 is_stmt 1 discriminator 2 view .LVU560
 2433              	.LBB1757:
 2434              	.LBI1748:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2435              		.loc 11 350 7 discriminator 2 view .LVU561
 2436              	.LBB1756:
 2437              	.LBB1755:
 2438              	.LBI1750:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2439              		.loc 16 491 7 discriminator 2 view .LVU562
 2440              	.LBB1754:
 2441              	.LBI1751:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2442              		.loc 13 120 7 discriminator 2 view .LVU563
 2443              	.LBB1753:
 2444              		.loc 13 133 19 is_stmt 0 discriminator 2 view .LVU564
 2445 03d4 0821     		movs	r1, #8
 2446 03d6 FFF7FEFF 		bl	_ZdlPvj
 2447              	.LVL70:
 2448              		.loc 13 133 19 discriminator 2 view .LVU565
 2449              	.LBE1753:
 2450              	.LBE1754:
 2451              	.LBE1755:
 2452              	.LBE1756:
 2453              	.LBE1757:
 2454              	.LBB1758:
 2455              	.LBI1758:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2456              		.loc 11 128 14 is_stmt 1 discriminator 2 view .LVU566
 2457              	.LBB1759:
 2458              	.LBI1759:
 2459              		.loc 14 162 7 discriminator 2 view .LVU567
 2460              	.LBB1760:
 2461              	.LBI1760:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2462              		.loc 13 89 7 discriminator 2 view .LVU568
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2463              		.loc 13 89 7 is_stmt 0 discriminator 2 view .LVU569
 2464              	.LBE1760:
 2465              	.LBE1759:
 2466              	.LBE1758:
 2467              	.LBE1763:
 2468              	.LBE1764:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 141


 2469              	.LBB1765:
 2470              	.LBI1765:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2471              		.loc 11 678 7 is_stmt 1 discriminator 2 view .LVU570
 2472              	.LBB1766:
 2473              	.LBI1766:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2474              		.loc 11 276 7 discriminator 2 view .LVU571
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2475              		.loc 11 276 7 is_stmt 0 discriminator 2 view .LVU572
 2476              	.LBE1766:
 2477              	.LBB1767:
 2478              	.LBI1767:
 2479              		.loc 16 735 5 is_stmt 1 discriminator 2 view .LVU573
 2480              		.loc 16 735 5 is_stmt 0 discriminator 2 view .LVU574
 2481              	.LBE1767:
 2482              	.LBB1768:
 2483              	.LBI1768:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2484              		.loc 11 333 7 is_stmt 1 discriminator 2 view .LVU575
 2485              	.LBB1769:
 2486              	.LBI1769:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2487              		.loc 11 350 7 discriminator 2 view .LVU576
 2488              	.LBB1770:
 2489              	.LBB1771:
 2490              	.LBI1771:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2491              		.loc 16 491 7 discriminator 2 view .LVU577
 2492              	.LBB1772:
 2493              	.LBI1772:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2494              		.loc 13 120 7 discriminator 2 view .LVU578
 2495              	.LBB1773:
 2496              		.loc 13 133 19 is_stmt 0 discriminator 2 view .LVU579
 2497 03da 0821     		movs	r1, #8
 2498 03dc 4846     		mov	r0, r9
 2499 03de FFF7FEFF 		bl	_ZdlPvj
 2500              	.LVL71:
 2501              		.loc 13 133 19 discriminator 2 view .LVU580
 2502              	.LBE1773:
 2503              	.LBE1772:
 2504              	.LBE1771:
 2505              	.LBE1770:
 2506              	.LBE1769:
 2507              	.LBB1774:
 2508              	.LBI1774:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2509              		.loc 11 128 14 is_stmt 1 discriminator 2 view .LVU581
 2510              	.LBB1775:
 2511              	.LBI1775:
 2512              		.loc 14 162 7 discriminator 2 view .LVU582
 2513              	.LBB1776:
 2514              	.LBI1776:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2515              		.loc 13 89 7 discriminator 2 view .LVU583
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 142


 2516              		.loc 13 89 7 is_stmt 0 discriminator 2 view .LVU584
 2517              	.LBE1776:
 2518              	.LBE1775:
 2519              	.LBE1774:
 2520              	.LBE1768:
 2521              	.LBE1765:
 2522              	.LBB1777:
 2523              	.LBI1777:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2524              		.loc 11 678 7 is_stmt 1 discriminator 2 view .LVU585
 2525              	.LBB1778:
 2526              	.LBI1778:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2527              		.loc 11 276 7 discriminator 2 view .LVU586
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2528              		.loc 11 276 7 is_stmt 0 discriminator 2 view .LVU587
 2529              	.LBE1778:
 2530              	.LBB1779:
 2531              	.LBI1779:
 2532              		.loc 16 735 5 is_stmt 1 discriminator 2 view .LVU588
 2533              		.loc 16 735 5 is_stmt 0 discriminator 2 view .LVU589
 2534              	.LBE1779:
 2535              	.LBB1780:
 2536              	.LBI1780:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2537              		.loc 11 333 7 is_stmt 1 discriminator 2 view .LVU590
 2538              	.LBB1781:
 2539              	.LBI1781:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2540              		.loc 11 350 7 discriminator 2 view .LVU591
 2541              	.LBB1782:
 2542              	.LBB1783:
 2543              	.LBI1783:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2544              		.loc 16 491 7 discriminator 2 view .LVU592
 2545              	.LBB1784:
 2546              	.LBI1784:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2547              		.loc 13 120 7 discriminator 2 view .LVU593
 2548              	.LBB1785:
 2549              		.loc 13 133 19 is_stmt 0 discriminator 2 view .LVU594
 2550 03e2 0821     		movs	r1, #8
 2551 03e4 4046     		mov	r0, r8
 2552 03e6 FFF7FEFF 		bl	_ZdlPvj
 2553              	.LVL72:
 2554              		.loc 13 133 19 discriminator 2 view .LVU595
 2555              	.LBE1785:
 2556              	.LBE1784:
 2557              	.LBE1783:
 2558              	.LBE1782:
 2559              	.LBE1781:
 2560              	.LBB1786:
 2561              	.LBI1786:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2562              		.loc 11 128 14 is_stmt 1 discriminator 2 view .LVU596
 2563              	.LBB1787:
 2564              	.LBI1787:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 143


 2565              		.loc 14 162 7 discriminator 2 view .LVU597
 2566              	.LBB1788:
 2567              	.LBI1788:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2568              		.loc 13 89 7 discriminator 2 view .LVU598
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2569              		.loc 13 89 7 is_stmt 0 discriminator 2 view .LVU599
 2570              	.LBE1788:
 2571              	.LBE1787:
 2572              	.LBE1786:
 2573              	.LBE1780:
 2574              	.LBE1777:
 2575              	.LBE1916:
 306:TapeLooper.cpp ****     {
 2576              		.loc 10 306 5 is_stmt 1 discriminator 2 view .LVU600
 306:TapeLooper.cpp ****     {
 2577              		.loc 10 306 25 discriminator 2 view .LVU601
 2578 03ea 059B     		ldr	r3, [sp, #20]
 2579 03ec BB42     		cmp	r3, r7
 2580 03ee 7FF415AE 		bne	.L9
 2581              	.LVL73:
 2582              	.L8:
 306:TapeLooper.cpp ****     {
 2583              		.loc 10 306 25 is_stmt 0 discriminator 2 view .LVU602
 2584              	.LBE1918:
 341:TapeLooper.cpp **** 
 342:TapeLooper.cpp ****     }
 343:TapeLooper.cpp **** }
 2585              		.loc 10 343 1 view .LVU603
 2586 03f2 0FB0     		add	sp, sp, #60
 2587              		.cfi_remember_state
 2588              		.cfi_def_cfa_offset 68
 2589              		@ sp needed
 2590 03f4 BDEC088B 		vldm	sp!, {d8-d11}
 2591              		.cfi_restore 86
 2592              		.cfi_restore 87
 2593              		.cfi_restore 84
 2594              		.cfi_restore 85
 2595              		.cfi_restore 82
 2596              		.cfi_restore 83
 2597              		.cfi_restore 80
 2598              		.cfi_restore 81
 2599              		.cfi_def_cfa_offset 36
 2600 03f8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2601              	.LVL74:
 2602              	.L40:
 2603              		.cfi_restore_state
 2604              	.LBB1919:
 2605              	.LBB1917:
 336:TapeLooper.cpp ****         }
 2606              		.loc 10 336 13 is_stmt 1 view .LVU604
 336:TapeLooper.cpp ****         }
 2607              		.loc 10 336 60 is_stmt 0 view .LVU605
 2608 03fc 019A     		ldr	r2, [sp, #4]
 2609              	.LBB1789:
 2610              	.LBB1790:
 2611              	.LBB1791:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 144


 2612              	.LBB1792:
 2613              	.LBB1793:
 2614              	.LBB1794:
 2615              	.LBB1795:
 2616              	.LBB1796:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2617              		.loc 13 115 41 view .LVU606
 2618 03fe 0820     		movs	r0, #8
 2619              	.LBE1796:
 2620              	.LBE1795:
 2621              	.LBE1794:
 2622              	.LBE1793:
 2623              	.LBE1792:
 2624              	.LBE1791:
 2625              	.LBE1790:
 2626              	.LBE1789:
 336:TapeLooper.cpp ****         }
 2627              		.loc 10 336 60 view .LVU607
 2628 0400 0099     		ldr	r1, [sp]
 2629 0402 1368     		ldr	r3, [r2]
 2630 0404 0B44     		add	r3, r3, r1
 2631 0406 D3F800A0 		ldr	r10, [r3]	@ float
 2632              	.LVL75:
 336:TapeLooper.cpp ****         }
 2633              		.loc 10 336 71 view .LVU608
 2634 040a 5368     		ldr	r3, [r2, #4]
 336:TapeLooper.cpp ****         }
 2635              		.loc 10 336 73 view .LVU609
 2636 040c CDF830A0 		str	r10, [sp, #48]	@ float
 336:TapeLooper.cpp ****         }
 2637              		.loc 10 336 71 view .LVU610
 2638 0410 0B44     		add	r3, r3, r1
 336:TapeLooper.cpp ****         }
 2639              		.loc 10 336 73 view .LVU611
 2640 0412 1B68     		ldr	r3, [r3]	@ float
 2641 0414 0D93     		str	r3, [sp, #52]	@ float
 336:TapeLooper.cpp ****         }
 2642              		.loc 10 336 32 view .LVU612
 2643 0416 5F4B     		ldr	r3, .L45
 2644 0418 1F68     		ldr	r7, [r3]
 2645 041a 0797     		str	r7, [sp, #28]
 2646              	.LVL76:
 2647              	.LBB1857:
 2648              	.LBI1857:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2649              		.loc 14 144 7 is_stmt 1 view .LVU613
 2650              	.LBB1858:
 2651              	.LBI1858:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2652              		.loc 13 79 7 view .LVU614
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2653              		.loc 13 79 7 is_stmt 0 view .LVU615
 2654              	.LBE1858:
 2655              	.LBE1857:
 2656              	.LBB1859:
 2657              	.LBI1789:
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 145


 2658              		.loc 11 625 7 is_stmt 1 view .LVU616
 2659              	.LBB1847:
 2660              	.LBI1847:
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 2661              		.loc 11 293 7 view .LVU617
 2662              	.LBB1848:
 2663              	.LBI1848:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 2664              		.loc 11 136 2 view .LVU618
 2665              	.LBB1849:
 2666              	.LBI1849:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2667              		.loc 14 147 7 view .LVU619
 2668              	.LBB1850:
 2669              	.LBI1850:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2670              		.loc 13 82 7 view .LVU620
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2671              		.loc 13 82 7 is_stmt 0 view .LVU621
 2672              	.LBE1850:
 2673              	.LBE1849:
 2674              	.LBB1851:
 2675              	.LBI1851:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 2676              		.loc 11 97 2 is_stmt 1 view .LVU622
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 2677              		.loc 11 97 2 is_stmt 0 view .LVU623
 2678              	.LBE1851:
 2679              	.LBE1848:
 2680              	.LBE1847:
 2681              	.LBB1852:
 2682              	.LBI1852:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 2683              		.loc 15 75 7 is_stmt 1 view .LVU624
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 2684              		.loc 15 75 7 is_stmt 0 view .LVU625
 2685              	.LBE1852:
 2686              	.LBB1853:
 2687              	.LBI1853:
 2688              		.loc 15 79 7 is_stmt 1 view .LVU626
 2689              		.loc 15 79 7 is_stmt 0 view .LVU627
 2690              	.LBE1853:
 2691              	.LBB1854:
 2692              	.LBI1790:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 2693              		.loc 11 1577 2 is_stmt 1 view .LVU628
 2694              	.LBB1844:
 2695              	.LBB1805:
 2696              	.LBI1805:
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2697              		.loc 11 1767 7 view .LVU629
 2698              	.LBB1806:
 2699              	.LBI1806:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2700              		.loc 14 147 7 view .LVU630
 2701              	.LBB1807:
 2702              	.LBI1807:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 146


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2703              		.loc 13 82 7 view .LVU631
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2704              		.loc 13 82 7 is_stmt 0 view .LVU632
 2705              	.LBE1807:
 2706              	.LBE1806:
 2707              	.LBB1808:
 2708              	.LBI1808:
 2709              		.loc 14 162 7 is_stmt 1 view .LVU633
 2710              	.LBB1809:
 2711              	.LBI1809:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2712              		.loc 13 89 7 view .LVU634
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2713              		.loc 13 89 7 is_stmt 0 view .LVU635
 2714              	.LBE1809:
 2715              	.LBE1808:
 2716              	.LBE1805:
 2717              	.LBB1810:
 2718              	.LBI1792:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2719              		.loc 11 343 7 is_stmt 1 view .LVU636
 2720              	.LBB1803:
 2721              	.LBB1801:
 2722              	.LBI1794:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2723              		.loc 16 459 7 view .LVU637
 2724              	.LBB1799:
 2725              	.LBI1795:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2726              		.loc 13 103 7 view .LVU638
 2727              	.LBB1797:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2728              		.loc 13 115 41 is_stmt 0 view .LVU639
 2729 041c FFF7FEFF 		bl	_Znwj
 2730              	.LVL77:
 2731              	.LBE1797:
 2732              	.LBE1799:
 2733              	.LBE1801:
 2734              	.LBE1803:
 2735              	.LBE1810:
 2736              	.LBE1844:
 2737              	.LBE1854:
 2738              	.LBE1859:
 2739              	.LBB1860:
 2740              	.LBB1861:
  97:TapeLoop.h    ****         int  lwh        = static_cast<int>(last_write_head);
 2741              		.loc 8 97 44 view .LVU640
 2742 0420 6C23     		movs	r3, #108
 2743              	.LBE1861:
 2744              	.LBE1860:
 2745              	.LBB1888:
 2746              	.LBB1855:
 2747              	.LBB1845:
 2748              	.LBB1811:
 2749              	.LBB1812:
 2750              	.LBB1813:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 147


 2751              	.LBB1814:
 2752              	.LBB1815:
 2753              	.LBB1816:
 2754              	.LBB1817:
 2755              	.LBB1818:
 2756              	.LBB1819:
 2757              	.LBB1820:
 2758              	.LBB1821:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 2759              		.loc 18 426 23 view .LVU641
 2760 0422 0CAA     		add	r2, sp, #48
 2761              	.LVL78:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 2762              		.loc 18 426 23 view .LVU642
 2763              	.LBE1821:
 2764              	.LBE1820:
 2765              	.LBE1819:
 2766              	.LBE1818:
 2767              	.LBE1817:
 2768              	.LBE1816:
 2769              	.LBE1815:
 2770              	.LBE1814:
 2771              	.LBE1813:
 2772              	.LBE1812:
 2773              	.LBE1811:
 2774              	.LBB1841:
 2775              	.LBB1804:
 2776              	.LBB1802:
 2777              	.LBB1800:
 2778              	.LBB1798:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2779              		.loc 13 115 41 view .LVU643
 2780 0424 0446     		mov	r4, r0
 2781 0426 0690     		str	r0, [sp, #24]
 2782              	.LVL79:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2783              		.loc 13 115 41 view .LVU644
 2784              	.LBE1798:
 2785              	.LBE1800:
 2786              	.LBE1802:
 2787              	.LBE1804:
 2788              	.LBE1841:
 2789              	.LBB1842:
 2790              	.LBI1811:
 2791              		.loc 17 323 5 is_stmt 1 view .LVU645
 2792              	.LBB1839:
 2793              	.LBI1812:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 2794              		.loc 17 125 5 view .LVU646
 2795              	.LBB1837:
 2796              	.LBB1835:
 2797              	.LBI1814:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 2798              		.loc 17 107 9 view .LVU647
 2799              	.LBB1833:
 2800              	.LBI1815:
 2801              		.loc 18 560 5 view .LVU648
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 148


 2802              	.LBB1831:
 2803              	.LBI1816:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2804              		.loc 18 511 5 view .LVU649
 2805              	.LBB1829:
 2806              	.LBI1817:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 2807              		.loc 18 505 5 view .LVU650
 2808              	.LBB1827:
 2809              	.LBI1818:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2810              		.loc 18 463 5 view .LVU651
 2811              	.LBB1825:
 2812              	.LBB1823:
 2813              	.LBI1820:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 2814              		.loc 18 415 2 view .LVU652
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 2815              		.loc 18 415 2 is_stmt 0 view .LVU653
 2816              	.LBE1823:
 2817              	.LBE1825:
 2818              	.LBE1827:
 2819              	.LBE1829:
 2820              	.LBE1831:
 2821              	.LBE1833:
 2822              	.LBE1835:
 2823              	.LBE1837:
 2824              	.LBE1839:
 2825              	.LBE1842:
 2826              	.LBE1845:
 2827              	.LBE1855:
 2828              	.LBE1888:
 2829              	.LBB1889:
 2830              	.LBB1885:
  97:TapeLoop.h    ****         int  lwh        = static_cast<int>(last_write_head);
 2831              		.loc 8 97 44 view .LVU654
 2832 0428 03FB0763 		mla	r3, r3, r7, r6
 101:TapeLoop.h    ****         {
 2833              		.loc 8 101 9 view .LVU655
 2834 042c DFED5A7A 		vldr.32	s15, .L45+4
  97:TapeLoop.h    ****         int  lwh        = static_cast<int>(last_write_head);
 2835              		.loc 8 97 14 view .LVU656
 2836 0430 D3ED076A 		vldr.32	s13, [r3, #28]
  98:TapeLoop.h    ****         bool is_reverse = tape_speed < 0;
 2837              		.loc 8 98 14 view .LVU657
 2838 0434 93ED087A 		vldr.32	s14, [r3, #32]
  97:TapeLoop.h    ****         int  lwh        = static_cast<int>(last_write_head);
 2839              		.loc 8 97 14 view .LVU658
 2840 0438 FDEEE66A 		vcvt.s32.f32	s13, s13
 101:TapeLoop.h    ****         {
 2841              		.loc 8 101 12 view .LVU659
 2842 043c 5F68     		ldr	r7, [r3, #4]
  98:TapeLoop.h    ****         bool is_reverse = tape_speed < 0;
 2843              		.loc 8 98 14 view .LVU660
 2844 043e BDEEC77A 		vcvt.s32.f32	s14, s14
  99:TapeLoop.h    **** 
 2845              		.loc 8 99 27 view .LVU661
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 149


 2846 0442 93ED0C5A 		vldr.32	s10, [r3, #48]
 101:TapeLoop.h    ****         {
 2847              		.loc 8 101 12 view .LVU662
 2848 0446 0897     		str	r7, [sp, #32]
  97:TapeLoop.h    ****         int  lwh        = static_cast<int>(last_write_head);
 2849              		.loc 8 97 14 view .LVU663
 2850 0448 CDED036A 		vstr.32	s13, [sp, #12]	@ int
  98:TapeLoop.h    ****         bool is_reverse = tape_speed < 0;
 2851              		.loc 8 98 14 view .LVU664
 2852 044c 17EE103A 		vmov	r3, s14	@ int
 2853              	.LBE1885:
 2854              	.LBE1889:
 2855              	.LBB1890:
 2856              	.LBB1856:
 2857              	.LBB1846:
 2858              	.LBB1843:
 2859              	.LBB1840:
 2860              	.LBB1838:
 2861              	.LBB1836:
 2862              	.LBB1834:
 2863              	.LBB1832:
 2864              	.LBB1830:
 2865              	.LBB1828:
 2866              	.LBB1826:
 2867              	.LBB1824:
 2868              	.LBB1822:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 2869              		.loc 18 426 23 view .LVU665
 2870 0450 03CA     		ldmia	r2!, {r0, r1}
 2871              	.LVL80:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 2872              		.loc 18 426 23 view .LVU666
 2873 0452 16EE902A 		vmov	r2, s13	@ int
 2874              	.LVL81:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 2875              		.loc 18 426 23 view .LVU667
 2876 0456 2060     		str	r0, [r4]	@ unaligned
 2877 0458 07EB820B 		add	fp, r7, r2, lsl #2
 2878 045c 6160     		str	r1, [r4, #4]	@ unaligned
 2879              	.LVL82:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 2880              		.loc 18 426 23 view .LVU668
 2881              	.LBE1822:
 2882              	.LBE1824:
 2883              	.LBE1826:
 2884              	.LBE1828:
 2885              	.LBE1830:
 2886              	.LBE1832:
 2887              	.LBE1834:
 2888              	.LBE1836:
 2889              	.LBE1838:
 2890              	.LBE1840:
 2891              	.LBE1843:
 2892              	.LBE1846:
 2893              	.LBE1856:
 2894              	.LBE1890:
 2895              	.LBB1891:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 150


 2896              	.LBI1860:
  95:TapeLoop.h    ****     {
 2897              		.loc 8 95 10 is_stmt 1 view .LVU669
 2898              	.LBB1886:
  97:TapeLoop.h    ****         int  lwh        = static_cast<int>(last_write_head);
 2899              		.loc 8 97 9 view .LVU670
  98:TapeLoop.h    ****         bool is_reverse = tape_speed < 0;
 2900              		.loc 8 98 9 view .LVU671
  99:TapeLoop.h    **** 
 2901              		.loc 8 99 9 view .LVU672
 101:TapeLoop.h    ****         {
 2902              		.loc 8 101 9 view .LVU673
 2903 045e 9BED007A 		vldr.32	s14, [fp]
 105:TapeLoop.h    ****         {
 2904              		.loc 8 105 23 is_stmt 0 view .LVU674
 2905 0462 0BF59C12 		add	r2, fp, #1277952
 2906              	.LVL83:
 101:TapeLoop.h    ****         {
 2907              		.loc 8 101 9 view .LVU675
 2908 0466 B4EEE77A 		vcmpe.f32	s14, s15
 105:TapeLoop.h    ****         {
 2909              		.loc 8 105 23 view .LVU676
 2910 046a 1046     		mov	r0, r2
 2911 046c 02F50062 		add	r2, r2, #2048
 105:TapeLoop.h    ****         {
 2912              		.loc 8 105 9 view .LVU677
 2913 0470 DFED497A 		vldr.32	s15, .L45+4
 101:TapeLoop.h    ****         {
 2914              		.loc 8 101 9 view .LVU678
 2915 0474 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 103:TapeLoop.h    ****         }
 2916              		.loc 8 103 13 is_stmt 1 view .LVU679
 103:TapeLoop.h    ****         }
 2917              		.loc 8 103 26 is_stmt 0 view .LVU680
 2918 0478 A8BF     		it	ge
 2919 047a CBF800A0 		strge	r10, [fp]	@ float
 105:TapeLoop.h    ****         {
 2920              		.loc 8 105 9 is_stmt 1 view .LVU681
 2921 047e 92ED007A 		vldr.32	s14, [r2]
 2922 0482 B4EEE77A 		vcmpe.f32	s14, s15
 2923 0486 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2924 048a 02DB     		blt	.L18
 107:TapeLoop.h    ****         }
 2925              		.loc 8 107 13 view .LVU682
 107:TapeLoop.h    ****         }
 2926              		.loc 8 107 26 is_stmt 0 view .LVU683
 2927 048c 0699     		ldr	r1, [sp, #24]
 2928 048e 4968     		ldr	r1, [r1, #4]	@ float
 2929 0490 1160     		str	r1, [r2]	@ float
 2930              	.L18:
 111:TapeLoop.h    ****         for(int step = 1; step < steps; step++)
 2931              		.loc 8 111 9 is_stmt 1 view .LVU684
 2932              	.LVL84:
 2933              	.LBB1862:
 2934              	.LBI1862:
  50:TapeLoop.h    ****     {
 2935              		.loc 8 50 9 view .LVU685
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 151


 2936              	.LBB1863:
  52:TapeLoop.h    ****         int wrap   = MAX_SIZE - direct; // distance if you wrap around
 2937              		.loc 8 52 9 view .LVU686
  52:TapeLoop.h    ****         int wrap   = MAX_SIZE - direct; // distance if you wrap around
 2938              		.loc 8 52 33 is_stmt 0 view .LVU687
 2939 0492 039A     		ldr	r2, [sp, #12]
  53:TapeLoop.h    ****         return std::min(direct, wrap);
 2940              		.loc 8 53 31 view .LVU688
 2941 0494 4149     		ldr	r1, .L45+8
  52:TapeLoop.h    ****         int wrap   = MAX_SIZE - direct; // distance if you wrap around
 2942              		.loc 8 52 33 view .LVU689
 2943 0496 D21A     		subs	r2, r2, r3
  52:TapeLoop.h    ****         int wrap   = MAX_SIZE - direct; // distance if you wrap around
 2944              		.loc 8 52 30 view .LVU690
 2945 0498 002A     		cmp	r2, #0
 2946 049a B8BF     		it	lt
 2947 049c 5242     		rsblt	r2, r2, #0
 2948              	.LVL85:
  53:TapeLoop.h    ****         return std::min(direct, wrap);
 2949              		.loc 8 53 9 is_stmt 1 view .LVU691
  54:TapeLoop.h    ****     }
 2950              		.loc 8 54 9 view .LVU692
  53:TapeLoop.h    ****         return std::min(direct, wrap);
 2951              		.loc 8 53 31 is_stmt 0 view .LVU693
 2952 049e 891A     		subs	r1, r1, r2
 2953              	.LVL86:
  53:TapeLoop.h    ****         return std::min(direct, wrap);
 2954              		.loc 8 53 31 view .LVU694
 2955 04a0 9142     		cmp	r1, r2
 2956 04a2 A8BF     		it	ge
 2957 04a4 1146     		movge	r1, r2
 2958              	.LVL87:
  53:TapeLoop.h    ****         return std::min(direct, wrap);
 2959              		.loc 8 53 31 view .LVU695
 2960              	.LBE1863:
 2961              	.LBE1862:
 112:TapeLoop.h    ****         {
 2962              		.loc 8 112 9 is_stmt 1 view .LVU696
 2963              	.LBB1864:
 112:TapeLoop.h    ****         {
 2964              		.loc 8 112 32 view .LVU697
 2965 04a6 0129     		cmp	r1, #1
 2966 04a8 69DD     		ble	.L24
 2967 04aa 9A00     		lsls	r2, r3, #2
 2968              	.LBB1865:
 129:TapeLoop.h    **** 
 2969              		.loc 8 129 53 is_stmt 0 view .LVU698
 2970 04ac 07EE901A 		vmov	s15, r1	@ int
 2971 04b0 DFF8E8E0 		ldr	lr, .L45+8
 2972              	.LBE1865:
 112:TapeLoop.h    ****         {
 2973              		.loc 8 112 17 view .LVU699
 2974 04b4 8C46     		mov	ip, r1
 2975 04b6 089F     		ldr	r7, [sp, #32]
 2976              	.LBB1880:
 129:TapeLoop.h    **** 
 2977              		.loc 8 129 53 view .LVU700
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 152


 2978 04b8 F8EEE74A 		vcvt.f32.s32	s9, s15
 2979 04bc 9E44     		add	lr, lr, r3
 2980              	.LBE1880:
 112:TapeLoop.h    ****         {
 2981              		.loc 8 112 17 view .LVU701
 2982 04be 0B95     		str	r5, [sp, #44]
 2983 04c0 0123     		movs	r3, #1
 2984 04c2 0896     		str	r6, [sp, #32]
 2985 04c4 CDE90989 		strd	r8, r9, [sp, #36]
 2986 04c8 8046     		mov	r8, r0
 2987 04ca 9146     		mov	r9, r2
 2988 04cc 28E0     		b	.L25
 2989              	.LVL88:
 2990              	.L38:
 2991              	.LBB1881:
 118:TapeLoop.h    ****             }
 2992              		.loc 8 118 19 view .LVU702
 2993 04ce 06FB1101 		mls	r1, r6, r1, r0
 2994              	.LVL89:
 2995              	.L23:
 125:TapeLoop.h    ****             float a2   = track[1][lwh];
 2996              		.loc 8 125 13 is_stmt 1 view .LVU703
 129:TapeLoop.h    **** 
 2997              		.loc 8 129 26 is_stmt 0 view .LVU704
 2998 04d2 07EE903A 		vmov	s15, r3	@ int
 2999 04d6 07EB0902 		add	r2, r7, r9
 126:TapeLoop.h    ****             float b1   = track[0][wh];
 3000              		.loc 8 126 19 view .LVU705
 3001 04da 3148     		ldr	r0, .L45+12
 128:TapeLoop.h    ****             float frac = static_cast<float>(step) / static_cast<float>(steps);
 3002              		.loc 8 128 19 view .LVU706
 3003 04dc 08F50064 		add	r4, r8, #2048
 129:TapeLoop.h    **** 
 3004              		.loc 8 129 26 view .LVU707
 3005 04e0 F8EEE77A 		vcvt.f32.s32	s15, s15
 125:TapeLoop.h    ****             float a2   = track[1][lwh];
 3006              		.loc 8 125 19 view .LVU708
 3007 04e4 92ED007A 		vldr.32	s14, [r2]
 3008              	.LVL90:
 126:TapeLoop.h    ****             float b1   = track[0][wh];
 3009              		.loc 8 126 13 is_stmt 1 view .LVU709
 126:TapeLoop.h    ****             float b1   = track[0][wh];
 3010              		.loc 8 126 19 is_stmt 0 view .LVU710
 3011 04e8 1044     		add	r0, r0, r2
 3012              	.LBB1866:
 3013              	.LBB1867:
  59:TapeLoop.h    ****     }
 3014              		.loc 8 59 20 view .LVU711
 3015 04ea 9BED006A 		vldr.32	s12, [fp]
 3016              	.LBE1867:
 3017              	.LBE1866:
 128:TapeLoop.h    ****             float frac = static_cast<float>(step) / static_cast<float>(steps);
 3018              		.loc 8 128 19 view .LVU712
 3019 04ee D4ED006A 		vldr.32	s13, [r4]
 3020 04f2 07EB8101 		add	r1, r7, r1, lsl #2
 3021              	.LVL91:
 129:TapeLoop.h    **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 153


 3022              		.loc 8 129 19 view .LVU713
 3023 04f6 C7EEA45A 		vdiv.f32	s11, s15, s9
 126:TapeLoop.h    ****             float b1   = track[0][wh];
 3024              		.loc 8 126 19 view .LVU714
 3025 04fa D0ED007A 		vldr.32	s15, [r0]
 3026              	.LVL92:
 127:TapeLoop.h    ****             float b2   = track[1][wh];
 3027              		.loc 8 127 13 is_stmt 1 view .LVU715
 128:TapeLoop.h    ****             float frac = static_cast<float>(step) / static_cast<float>(steps);
 3028              		.loc 8 128 13 view .LVU716
 129:TapeLoop.h    **** 
 3029              		.loc 8 129 13 view .LVU717
 131:TapeLoop.h    ****             track[1][i] = linear_interpolate(a2, b2, frac);
 3030              		.loc 8 131 13 view .LVU718
 3031              	.LBB1871:
 3032              	.LBI1866:
  57:TapeLoop.h    ****     {
 3033              		.loc 8 57 11 view .LVU719
 3034              	.LBB1868:
  59:TapeLoop.h    ****     }
 3035              		.loc 8 59 9 view .LVU720
 3036              	.LBE1868:
 3037              	.LBE1871:
 132:TapeLoop.h    ****         }
 3038              		.loc 8 132 25 is_stmt 0 view .LVU721
 3039 04fe 284A     		ldr	r2, .L45+12
 3040              	.LBE1881:
 112:TapeLoop.h    ****         {
 3041              		.loc 8 112 9 view .LVU722
 3042 0500 0133     		adds	r3, r3, #1
 3043              	.LVL93:
 3044              	.LBB1882:
 132:TapeLoop.h    ****         }
 3045              		.loc 8 132 25 view .LVU723
 3046 0502 0A44     		add	r2, r2, r1
 3047              	.LBE1882:
 112:TapeLoop.h    ****         {
 3048              		.loc 8 112 32 view .LVU724
 3049 0504 9C45     		cmp	ip, r3
 3050              	.LBB1883:
 3051              	.LBB1872:
 3052              	.LBB1869:
  59:TapeLoop.h    ****     }
 3053              		.loc 8 59 20 view .LVU725
 3054 0506 36EE476A 		vsub.f32	s12, s12, s14
 3055              	.LVL94:
  59:TapeLoop.h    ****     }
 3056              		.loc 8 59 20 view .LVU726
 3057              	.LBE1869:
 3058              	.LBE1872:
 3059              	.LBB1873:
 3060              	.LBB1874:
 3061 050a 76EEE76A 		vsub.f32	s13, s13, s15
 3062              	.LVL95:
  59:TapeLoop.h    ****     }
 3063              		.loc 8 59 20 view .LVU727
 3064              	.LBE1874:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 154


 3065              	.LBE1873:
 3066              	.LBB1877:
 3067              	.LBB1870:
  59:TapeLoop.h    ****     }
 3068              		.loc 8 59 39 view .LVU728
 3069 050e A5EE867A 		vfma.f32	s14, s11, s12
 3070              	.LVL96:
  59:TapeLoop.h    ****     }
 3071              		.loc 8 59 39 view .LVU729
 3072              	.LBE1870:
 3073              	.LBE1877:
 3074              	.LBB1878:
 3075              	.LBB1875:
 3076 0512 E5EEA67A 		vfma.f32	s15, s11, s13
 3077              	.LVL97:
  59:TapeLoop.h    ****     }
 3078              		.loc 8 59 39 view .LVU730
 3079              	.LBE1875:
 3080              	.LBE1878:
 131:TapeLoop.h    ****             track[1][i] = linear_interpolate(a2, b2, frac);
 3081              		.loc 8 131 25 view .LVU731
 3082 0516 81ED007A 		vstr.32	s14, [r1]
 3083              	.LVL98:
 132:TapeLoop.h    ****         }
 3084              		.loc 8 132 13 is_stmt 1 view .LVU732
 3085              	.LBB1879:
 3086              	.LBI1873:
  57:TapeLoop.h    ****     {
 3087              		.loc 8 57 11 view .LVU733
 3088              	.LBB1876:
  59:TapeLoop.h    ****     }
 3089              		.loc 8 59 9 view .LVU734
  59:TapeLoop.h    ****     }
 3090              		.loc 8 59 9 is_stmt 0 view .LVU735
 3091              	.LBE1876:
 3092              	.LBE1879:
 132:TapeLoop.h    ****         }
 3093              		.loc 8 132 25 view .LVU736
 3094 051a C2ED007A 		vstr.32	s15, [r2]
 3095              	.LBE1883:
 112:TapeLoop.h    ****         {
 3096              		.loc 8 112 9 is_stmt 1 view .LVU737
 3097              	.LVL99:
 112:TapeLoop.h    ****         {
 3098              		.loc 8 112 32 view .LVU738
 3099 051e 2AD0     		beq	.L41
 3100              	.LVL100:
 3101              	.L25:
 3102              	.LBB1884:
 114:TapeLoop.h    **** 
 3103              		.loc 8 114 13 view .LVU739
 116:TapeLoop.h    ****             {
 3104              		.loc 8 116 13 view .LVU740
 122:TapeLoop.h    ****             }
 3105              		.loc 8 122 17 view .LVU741
 116:TapeLoop.h    ****             {
 3106              		.loc 8 116 13 view .LVU742
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 155


 118:TapeLoop.h    ****             }
 3107              		.loc 8 118 17 view .LVU743
 114:TapeLoop.h    **** 
 3108              		.loc 8 114 17 is_stmt 0 view .LVU744
 3109 0520 0EEB030A 		add	r10, lr, r3
 3110 0524 1F4A     		ldr	r2, .L45+16
 3111 0526 AEEB0304 		sub	r4, lr, r3
 3112 052a 1C4E     		ldr	r6, .L45+8
 3113 052c 1546     		mov	r5, r2
 3114 052e 82FB0A12 		smull	r1, r2, r2, r10
 3115 0532 4FEAEA71 		asr	r1, r10, #31
 114:TapeLoop.h    **** 
 3116              		.loc 8 114 40 view .LVU745
 3117 0536 B5EEC05A 		vcmpe.f32	s10, #0
 118:TapeLoop.h    ****             }
 3118              		.loc 8 118 28 view .LVU746
 3119 053a 1B48     		ldr	r0, .L45+20
 114:TapeLoop.h    **** 
 3120              		.loc 8 114 17 view .LVU747
 3121 053c C1EB6241 		rsb	r1, r1, r2, asr #17
 3122 0540 85FB0425 		smull	r2, r5, r5, r4
 3123 0544 E217     		asrs	r2, r4, #31
 114:TapeLoop.h    **** 
 3124              		.loc 8 114 40 view .LVU748
 3125 0546 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 114:TapeLoop.h    **** 
 3126              		.loc 8 114 17 view .LVU749
 3127 054a 06FB11A1 		mls	r1, r6, r1, r10
 3128 054e C2EB6542 		rsb	r2, r2, r5, asr #17
 118:TapeLoop.h    ****             }
 3129              		.loc 8 118 28 view .LVU750
 3130 0552 0844     		add	r0, r0, r1
 118:TapeLoop.h    ****             }
 3131              		.loc 8 118 19 view .LVU751
 3132 0554 1549     		ldr	r1, .L45+24
 114:TapeLoop.h    **** 
 3133              		.loc 8 114 17 view .LVU752
 3134 0556 06FB1242 		mls	r2, r6, r2, r4
 122:TapeLoop.h    ****             }
 3135              		.loc 8 122 28 view .LVU753
 3136 055a 154C     		ldr	r4, .L45+28
 118:TapeLoop.h    ****             }
 3137              		.loc 8 118 19 view .LVU754
 3138 055c A1FB0051 		umull	r5, r1, r1, r0
 122:TapeLoop.h    ****             }
 3139              		.loc 8 122 28 view .LVU755
 3140 0560 1444     		add	r4, r4, r2
 122:TapeLoop.h    ****             }
 3141              		.loc 8 122 19 view .LVU756
 3142 0562 124A     		ldr	r2, .L45+24
 118:TapeLoop.h    ****             }
 3143              		.loc 8 118 19 view .LVU757
 3144 0564 4FEA9141 		lsr	r1, r1, #18
 122:TapeLoop.h    ****             }
 3145              		.loc 8 122 19 view .LVU758
 3146 0568 A2FB0452 		umull	r5, r2, r2, r4
 114:TapeLoop.h    **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 156


 3147              		.loc 8 114 40 view .LVU759
 3148 056c AFD5     		bpl	.L38
 122:TapeLoop.h    ****             }
 3149              		.loc 8 122 19 view .LVU760
 3150 056e 910C     		lsrs	r1, r2, #18
 3151 0570 06FB1141 		mls	r1, r6, r1, r4
 3152 0574 ADE7     		b	.L23
 3153              	.LVL101:
 3154              	.L41:
 122:TapeLoop.h    ****             }
 3155              		.loc 8 122 19 view .LVU761
 3156              	.LBE1884:
 3157 0576 DDE90989 		ldrd	r8, r9, [sp, #36]
 3158 057a 0B9D     		ldr	r5, [sp, #44]
 3159 057c 089E     		ldr	r6, [sp, #32]
 3160              	.LVL102:
 3161              	.L24:
 122:TapeLoop.h    ****             }
 3162              		.loc 8 122 19 view .LVU762
 3163              	.LBE1864:
 135:TapeLoop.h    ****     }
 3164              		.loc 8 135 9 is_stmt 1 view .LVU763
 135:TapeLoop.h    ****     }
 3165              		.loc 8 135 17 is_stmt 0 view .LVU764
 3166 057e 079A     		ldr	r2, [sp, #28]
 3167 0580 6C23     		movs	r3, #108
 135:TapeLoop.h    ****     }
 3168              		.loc 8 135 17 view .LVU765
 3169              	.LBE1886:
 3170              	.LBE1891:
 3171              	.LBB1892:
 3172              	.LBB1893:
 3173              	.LBB1894:
 3174              	.LBB1895:
 3175              	.LBB1896:
 3176              	.LBB1897:
 3177              	.LBB1898:
 3178              		.loc 13 133 19 view .LVU766
 3179 0582 0698     		ldr	r0, [sp, #24]
 3180 0584 0821     		movs	r1, #8
 3181              	.LBE1898:
 3182              	.LBE1897:
 3183              	.LBE1896:
 3184              	.LBE1895:
 3185              	.LBE1894:
 3186              	.LBE1893:
 3187              	.LBE1892:
 3188              	.LBB1910:
 3189              	.LBB1887:
 135:TapeLoop.h    ****     }
 3190              		.loc 8 135 17 view .LVU767
 3191 0586 03FB0263 		mla	r3, r3, r2, r6
 135:TapeLoop.h    ****     }
 3192              		.loc 8 135 17 view .LVU768
 3193 058a 039A     		ldr	r2, [sp, #12]
 3194 058c 5A61     		str	r2, [r3, #20]
 3195              	.LVL103:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 157


 135:TapeLoop.h    ****     }
 3196              		.loc 8 135 17 view .LVU769
 3197              	.LBE1887:
 3198              	.LBE1910:
 3199              	.LBB1911:
 3200              	.LBI1892:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3201              		.loc 11 678 7 is_stmt 1 view .LVU770
 3202              	.LBB1907:
 3203              	.LBI1907:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 3204              		.loc 11 276 7 view .LVU771
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 3205              		.loc 11 276 7 is_stmt 0 view .LVU772
 3206              	.LBE1907:
 3207              	.LBB1908:
 3208              	.LBI1908:
 3209              		.loc 16 735 5 is_stmt 1 view .LVU773
 3210              		.loc 16 735 5 is_stmt 0 view .LVU774
 3211              	.LBE1908:
 3212              	.LBB1909:
 3213              	.LBI1893:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3214              		.loc 11 333 7 is_stmt 1 view .LVU775
 3215              	.LBB1903:
 3216              	.LBI1894:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3217              		.loc 11 350 7 view .LVU776
 3218              	.LBB1902:
 3219              	.LBB1901:
 3220              	.LBI1896:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3221              		.loc 16 491 7 view .LVU777
 3222              	.LBB1900:
 3223              	.LBI1897:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3224              		.loc 13 120 7 view .LVU778
 3225              	.LBB1899:
 3226              		.loc 13 133 19 is_stmt 0 view .LVU779
 3227 058e FFF7FEFF 		bl	_ZdlPvj
 3228              	.LVL104:
 3229              		.loc 13 133 19 view .LVU780
 3230              	.LBE1899:
 3231              	.LBE1900:
 3232              	.LBE1901:
 3233              	.LBE1902:
 3234              	.LBE1903:
 3235              	.LBB1904:
 3236              	.LBI1904:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 3237              		.loc 11 128 14 is_stmt 1 view .LVU781
 3238              	.LBB1905:
 3239              	.LBI1905:
 3240              		.loc 14 162 7 view .LVU782
 3241              	.LBB1906:
 3242              	.LBI1906:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 158


 3243              		.loc 13 89 7 view .LVU783
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3244              		.loc 13 89 7 is_stmt 0 view .LVU784
 3245              	.LBE1906:
 3246              	.LBE1905:
 3247              	.LBE1904:
 3248              	.LBE1909:
 3249              	.LBE1911:
 3250              	.LBB1912:
 3251              	.LBI1912:
 3252              		.loc 14 162 7 is_stmt 1 view .LVU785
 3253              	.LBB1913:
 3254              	.LBI1913:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3255              		.loc 13 89 7 view .LVU786
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3256              		.loc 13 89 7 is_stmt 0 view .LVU787
 3257              	.LBE1913:
 3258              	.LBE1912:
 3259 0592 B9E6     		b	.L15
 3260              	.L46:
 3261              		.align	2
 3262              	.L45:
 3263 0594 00000000 		.word	.LANCHOR2
 3264 0598 0000C8C2 		.word	-1027080192
 3265 059c 00E20400 		.word	320000
 3266 05a0 00881300 		.word	1280000
 3267 05a4 AD8BDB68 		.word	1759218605
 3268 05a8 01E20400 		.word	320001
 3269 05ac 5917B7D1 		.word	-776530087
 3270 05b0 FFE10400 		.word	319999
 3271              	.LBE1917:
 3272              	.LBE1919:
 3273              		.cfi_endproc
 3274              	.LFE4727:
 3276              		.section	.text._ZN8TapeLoopC2ERA2_A320000_f,"axG",%progbits,_ZN8TapeLoopC5ERA2_A320000_f,comdat
 3277              		.align	1
 3278              		.p2align 2,,3
 3279              		.weak	_ZN8TapeLoopC2ERA2_A320000_f
 3280              		.syntax unified
 3281              		.thumb
 3282              		.thumb_func
 3283              		.fpu fpv5-d16
 3285              	_ZN8TapeLoopC2ERA2_A320000_f:
 3286              	.LVL105:
 3287              	.LFB4682:
  19:TapeLoop.h    **** 
 3288              		.loc 8 19 5 is_stmt 1 view -0
 3289              		.cfi_startproc
 3290              		@ args = 0, pretend = 0, frame = 0
 3291              		@ frame_needed = 0, uses_anonymous_args = 0
 3292              		@ link register save eliminated.
 3293              	.LBB1920:
  19:TapeLoop.h    **** 
 3294              		.loc 8 19 74 is_stmt 0 view .LVU789
 3295 0000 0022     		movs	r2, #0
 3296 0002 4160     		str	r1, [r0, #4]
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 159


 3297 0004 4FF07C51 		mov	r1, #1056964608
 3298              	.LVL106:
  19:TapeLoop.h    **** 
 3299              		.loc 8 19 74 view .LVU790
 3300 0008 8261     		str	r2, [r0, #24]	@ float
 3301 000a C262     		str	r2, [r0, #44]	@ float
 3302 000c 0263     		str	r2, [r0, #48]	@ float
 3303              	.LBB1921:
 3304              	.LBB1922:
 3305              	.LBB1923:
 3306              	.LBB1924:
 3307              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\random.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // random number generation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Copyright (C) 2009-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** /**
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  * @file bits/random.h
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  *  This is an internal header file, included by other library headers.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  *  Do not attempt to use it directly. @headername{random}
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifndef _RANDOM_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #define _RANDOM_H 1
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #include <vector>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #include <bits/uniform_int_dist.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** namespace std _GLIBCXX_VISIBILITY(default)
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** {
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // [26.4] Random number generation
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @defgroup random Random Number Generation
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup numerics
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 160


  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A facility for generating random numbers on selected distributions.
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // std::uniform_random_bit_generator is defined in <bits/uniform_int_dist.h>
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief A function template for converting the output of a (integral)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * uniform random number generator to a floatng point result in the range
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * [0-1).
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType, size_t __bits,
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   typename _UniformRandomNumberGenerator>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     _RealType
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     generate_canonical(_UniformRandomNumberGenerator& __g);
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /*
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Implementation-space details.
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   namespace __detail
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   {
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _UIntType, size_t __w,
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     bool = __w < static_cast<size_t>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  (std::numeric_limits<_UIntType>::digits)>
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Shift
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { static const _UIntType __value = 0; };
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _UIntType, size_t __w>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Shift<_UIntType, __w, true>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { static const _UIntType __value = _UIntType(1) << __w; };
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s,
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     int __which = ((__s <= __CHAR_BIT__ * sizeof (int))
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long))
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long long))
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    /* assume long long no bigger than __int128 */
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= 128))>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static_assert(__which < 0, /* needs to be dependent */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		      "sorry, would be too much trouble for a slow result");
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 4>
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned int type; };
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 3>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned long type; };
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 2>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned long long type; };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifdef _GLIBCXX_USE_INT128
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 161


 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 1>
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned __int128 type; };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Assume a != 0, a < m, c < m, x < m.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c,
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     bool __big_enough = (!(__m & (__m - 1))
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 				  || (_Tp(-1) - __c) / __a >= __m - 1),
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****              bool __schrage_ok = __m % __a < __m / __a>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	typedef typename _Select_uint_least_t<std::__lg(__a)
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 					      + std::__lg(__m) + 2>::type _Tp2;
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Schrage.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod<_Tp, __m, __a, __c, false, true>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x);
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Special cases:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // - for m == 2^n or m == 0, unsigned integer overflow is safe.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // - a * (m - 1) + c fits in _Tp, there is no overflow.
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c, bool __s>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod<_Tp, __m, __a, __c, true, __s>
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Tp __res = __a * __x + __c;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  if (__m)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	    __res %= __m;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a = 1, _Tp __c = 0>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       inline _Tp
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       __mod(_Tp __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     /*
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      * An adaptor class for converting the output of any Generator into
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      * the input for a specific Distribution.
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      */
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Engine, typename _DInputType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Adaptor
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static_assert(std::is_floating_point<_DInputType>::value,
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		      "template argument must be a floating point type");
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 162


 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       public:
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_Adaptor(_Engine& __g)
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_g(__g) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	min() const
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _DInputType(0); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	max() const
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _DInputType(1); }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	/*
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * Converts a value generated by the adapted random number generator
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * into a value in the input domain for the dependent random number
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * distribution.
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator()()
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return std::generate_canonical<_DInputType,
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	                            std::numeric_limits<_DInputType>::digits,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	                            _Engine>(_M_g);
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       private:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_Engine& _M_g;
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Sseq>
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       using __seed_seq_generate_t = decltype(
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  std::declval<_Sseq&>().generate(std::declval<uint_least32_t*>(),
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 					  std::declval<uint_least32_t*>()));
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Detect whether _Sseq is a valid seed sequence for
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // a random number engine _Engine with result type _Res.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Sseq, typename _Engine, typename _Res,
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     typename _GenerateCheck = __seed_seq_generate_t<_Sseq>>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       using __is_seed_seq = __and_<
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         __not_<is_same<__remove_cvref_t<_Sseq>, _Engine>>,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	is_unsigned<typename _Sseq::result_type>,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__not_<is_convertible<_Sseq, _Res>>
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       >;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   } // namespace __detail
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_generators Random Number Generators
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * These classes define objects which provide random or pseudorandom
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * numbers, either from a discrete or a continuous interval.  The
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number generator supplied as a part of this library are
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * all uniform random number generators which provide a sequence of
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number uniformly distributed over their range.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 163


 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A number generator is a function object with an operator() that
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * takes zero arguments and returns a number.
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A compliant random number generator must satisfy the following
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * requirements.  <table border=1 cellpadding=10 cellspacing=0>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * <caption align=top>Random Number Generator Requirements</caption>
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * <tr><td>To be documented.</td></tr> </table>
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief A model of a linear congruential random number generator.
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A random number generator that produces pseudorandom numbers via
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * linear function:
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f[
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *     x_{i+1}\leftarrow(ax_{i} + c) \bmod m 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f]
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The template parameter @p _UIntType must be an unsigned integral type
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * large enough to store values up to (__m-1). If the template parameter
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __m is 0, the modulus @p __m used is
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * std::numeric_limits<_UIntType>::max() plus 1. Otherwise, the template
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * parameters @p __a and @p __c must be less than @p __m.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The size of the state is @f$1@f$.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class linear_congruential_engine
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__m == 0u || (__a < __m && __c < __m),
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __m out of bounds");
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, linear_congruential_engine, _UIntType>::value>::type;
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The multiplier. */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type multiplier   = __a;
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** An increment. */
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type increment    = __c;
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The modulus. */
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type modulus      = __m;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 1u;
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine with seed 1.
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       linear_congruential_engine() : linear_congruential_engine(default_seed)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 164


 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine with seed @p __s.  The default seed value
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        is 1.
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s The initial seed value.
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       linear_congruential_engine(result_type __s)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine seeded from the seed sequence @p __q.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         linear_congruential_engine(_Sseq& __q)
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine sequence to the seed @p __s.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s The new seed.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s = default_seed);
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * sequence using values from the seed sequence @p __q.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the smallest possible value in the output range.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The minimum depends on the @p __c parameter: if it is zero, the
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * minimum generated must be > 0, otherwise 0 is allowed.
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __c == 0u ? 1u : 0u; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the largest possible value in the output range.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 165


 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __m - 1u; }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next random number in the sequence.
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()()
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_x = __detail::__mod<_UIntType, __m, __a, __c>(_M_x);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	return _M_x;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two linear congruential random number generator
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * objects of the same type for equality.
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A linear congruential random number generator object.
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another linear congruential random number generator
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const linear_congruential_engine& __lhs,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const linear_congruential_engine& __rhs)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_x == __rhs._M_x; }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Writes the textual representation of the state x(i) of x to
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os  The output stream.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns __os.
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::linear_congruential_engine<_UIntType1,
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __a1, __c1, __m1>& __lcr);
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Sets the state of the engine by reading its textual
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 166


 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        representation from @p __is.
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The textual representation must have been previously written using
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an output stream whose imbued locale and whose type's template
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * specialization arguments _CharT and _Traits were the same as those
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * of @p __is.
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is  The input stream.
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns __is.
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::linear_congruential_engine<_UIntType1, __a1,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __c1, __m1>& __lcr);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType _M_x;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two linear congruential random number generator
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * objects of the same type for inequality.
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A linear congruential random number generator object.
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another linear congruential random number generator
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::linear_congruential_engine<_UIntType, __a,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __c, __m>& __lhs,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::linear_congruential_engine<_UIntType, __a,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __c, __m>& __rhs)
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A generalized feedback shift register discrete random number generator.
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This algorithm avoids multiplication and division and is designed to be
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * friendly to a pipelined architecture.  If the parameters are chosen
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * correctly, this generator will produce numbers with a very long period and
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * fairly good apparent entropy, although still not cryptographically strong.
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The best way to use this generator is with the predefined mt19937 class.
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This algorithm was originally invented by Makoto Matsumoto and
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Takuji Nishimura.
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __w  Word size, the number of bits in each element of 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              the state vector.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 167


 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __n  The degree of recursion.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __m  The period parameter.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __r  The separation point bit index.
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __a  The last row of the twist matrix.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __u  The first right-shift tempering matrix parameter.
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __d  The first right-shift tempering matrix mask.
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __s  The first left-shift tempering matrix parameter.
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __b  The first left-shift tempering matrix mask.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __t  The second left-shift tempering matrix parameter.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __c  The second left-shift tempering matrix mask.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __l  The second right-shift tempering matrix parameter.
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __f  Initialization multiplier.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w,
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   size_t __n, size_t __m, size_t __r,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __b, size_t __t,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class mersenne_twister_engine
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1u <= __m && __m <= __n,
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __m out of bounds");
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__r <= __w, "template argument substituting "
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__r out of bound");
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__u <= __w, "template argument substituting "
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__u out of bound");
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__s <= __w, "template argument substituting "
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__s out of bound");
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__t <= __w, "template argument substituting "
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__t out of bound");
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__l <= __w, "template argument substituting "
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__l out of bound");
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__w <= std::numeric_limits<_UIntType>::digits,
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bound");
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__a <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __a out of bound");
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__b <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __b out of bound");
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__c <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __c out of bound");
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__d <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __d out of bound");
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__f <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __f out of bound");
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, mersenne_twister_engine, _UIntType>::value>::type;
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      word_size                 = __w;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 168


 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      state_size                = __n;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      shift_size                = __m;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      mask_bits                 = __r;
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type xor_mask                  = __a;
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_u               = __u;
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_d               = __d;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_s               = __s;
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_b               = __b;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_t               = __t;
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_c               = __c;
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_l               = __l;
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type initialization_multiplier = __f;
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 5489u;
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // constructors and member functions
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mersenne_twister_engine() : mersenne_twister_engine(default_seed) { }
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mersenne_twister_engine(result_type __sd)
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %mersenne_twister_engine random number generator
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine seeded from the seed sequence @p __q.
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         mersenne_twister_engine(_Sseq& __q)
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __sd = default_seed);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the smallest possible value in the output range.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0; }
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the largest possible value in the output range.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 169


 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z);
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two % mersenne_twister_engine random number generator
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        objects of the same type for equality.
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A % mersenne_twister_engine random number generator
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another % mersenne_twister_engine random number
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              generator object.
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const mersenne_twister_engine& __lhs,
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const mersenne_twister_engine& __rhs)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + state_size, __rhs._M_x)
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a % mersenne_twister_engine
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x into the output stream
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1,
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __w1, size_t __n1,
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __m1, size_t __r1,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __a1, size_t __u1,
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __d1, size_t __s1,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __b1, size_t __t1,
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::mersenne_twister_engine<_UIntType1, __w1, __n1,
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __l1, __f1>& __x);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % mersenne_twister_engine
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % mersenne_twister_engine random number generator
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 170


 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1,
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __w1, size_t __n1,
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __m1, size_t __r1,
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __a1, size_t __u1,
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __d1, size_t __s1,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __b1, size_t __t1,
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::mersenne_twister_engine<_UIntType1, __w1, __n1, __m1,
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __l1, __f1>& __x);
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void _M_gen_rand();
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType _M_x[state_size];
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t    _M_p;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two % mersenne_twister_engine random number generator
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        objects of the same type for inequality.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A % mersenne_twister_engine random number generator
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another % mersenne_twister_engine random number
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              generator object.
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w,
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   size_t __n, size_t __m, size_t __r,
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __b, size_t __t,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __lhs,
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __rhs)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief The Marsaglia-Zaman generator.
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This is a model of a Generalized Fibonacci discrete random number
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * generator, sometimes referred to as the SWC generator.
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 171


 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A discrete random number generator that produces pseudorandom
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * numbers using:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f[
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *     x_{i}\leftarrow(x_{i - s} - x_{i - r} - carry_{i-1}) \bmod m 
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f]
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The size of the state is @f$r@f$
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * and the maximum period of the generator is @f$(m^r - m^s - 1)@f$.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class subtract_with_carry_engine
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __s && __s < __r,
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "0 < s < r");
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bounds");
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, subtract_with_carry_engine, _UIntType>::value>::type;
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      word_size    = __w;
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      short_lag    = __s;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      long_lag     = __r;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 19780503u;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       subtract_with_carry_engine() : subtract_with_carry_engine(default_seed)
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs an explicitly seeded %subtract_with_carry_engine
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator.
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       subtract_with_carry_engine(result_type __sd)
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %subtract_with_carry_engine random number engine
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seeded from the seed sequence @p __q.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         subtract_with_carry_engine(_Sseq& __q)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the random number
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 172


 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator.
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * N1688[4.19] modifies this as follows.  If @p __value == 0,
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * sets value to 19780503.  In any case, with a linear
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * congruential generator lcg(i) having parameters @f$ m_{lcg} =
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * 2147483563, a_{lcg} = 40014, c_{lcg} = 0, and lcg(0) = value
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @f$, sets @f$ x_{-r} \dots x_{-1} @f$ to @f$ lcg(1) \bmod m
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * \dots lcg(r) \bmod m @f$ respectively.  If @f$ x_{-1} = 0 @f$
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * set carry to 1, otherwise sets carry to 0.
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __sd = default_seed);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * % subtract_with_carry_engine random number generator.
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_If_seed_seq<_Sseq>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the inclusive minimum value of the range of random
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * integers returned by this generator.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0; }
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the inclusive maximum value of the range of random
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * integers returned by this generator.
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next random number in the sequence.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two % subtract_with_carry_engine random number
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator objects of the same type for equality.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 173


 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A % subtract_with_carry_engine random number generator
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another % subtract_with_carry_engine random number
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              generator object.
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       */
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const subtract_with_carry_engine& __lhs,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const subtract_with_carry_engine& __rhs)
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + long_lag, __rhs._M_x)
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_carry == __rhs._M_carry
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a % subtract_with_carry_engine
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x into the output stream
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::subtract_with_carry_engine<_UIntType1, __w1,
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __s1, __r1>& __x);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::subtract_with_carry_engine<_UIntType1, __w1,
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __s1, __r1>& __x);
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /// The state of the generator.  This is a ring buffer.
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType  _M_x[long_lag];
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType  _M_carry;		///< The carry
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 174


 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t     _M_p;			///< Current index of x(i - r).
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two % subtract_with_carry_engine random number
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        generator objects of the same type for inequality.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A % subtract_with_carry_engine random number generator
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another % subtract_with_carry_engine random number
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              generator object.
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::subtract_with_carry_engine<_UIntType, __w,
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __s, __r>& __lhs,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::subtract_with_carry_engine<_UIntType, __w,
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __s, __r>& __rhs)
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Produces random numbers from some base engine by discarding blocks of
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * data.
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * 0 <= @p __r <= @p __p
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class discard_block_engine
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1 <= __r && __r <= __p,
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __r out of bounds");
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, discard_block_engine, result_type>::value>::type;
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t block_size = __p;
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t used_block = __r;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %discard_block_engine engine.
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine()
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(), _M_n(0) { }
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 175


 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %discard_block_engine engine.
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(const _RandomNumberEngine& __rng)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng), _M_n(0) { }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %discard_block_engine engine.
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(_RandomNumberEngine&& __rng)
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng)), _M_n(0) { }
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %discard_block_engine engine.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(result_type __s)
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s), _M_n(0) { }
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %discard_block_engine engine.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         discard_block_engine(_Sseq& __q)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_b(__q), _M_n(0)
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { }
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed();
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_n = 0;
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 176


 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed(__s);
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_n = 0;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the given seed
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        sequence.
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         {
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_b.seed(__q);
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_n = 0;
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets a const reference to the underlying generator engine
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        object.
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the minimum value in the generated random number range.
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::min(); }
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the maximum value in the generated random number range.
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::max(); }
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next value in the generated random number sequence.
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 177


1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two %discard_block_engine random number generator
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        objects of the same type for equality.
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %discard_block_engine random number generator object.
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %discard_block_engine random number generator
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const discard_block_engine& __lhs,
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const discard_block_engine& __rhs)
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_b == __rhs._M_b && __lhs._M_n == __rhs._M_n; }
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a %discard_block_engine random
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        number generator engine @p __x into the output stream
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::discard_block_engine<_RandomNumberEngine1,
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __p1, __r1>& __x);
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::discard_block_engine<_RandomNumberEngine1,
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __p1, __r1>& __x);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t _M_n;
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 178


1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two %discard_block_engine random number generator
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        objects of the same type for inequality.
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %discard_block_engine random number generator object.
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %discard_block_engine random number generator
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::discard_block_engine<_RandomNumberEngine, __p,
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r>& __lhs,
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::discard_block_engine<_RandomNumberEngine, __p,
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r>& __rhs)
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Produces random numbers by combining random numbers from some base
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * engine to produce random numbers with a specifies number of bits @p __w.
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class independent_bits_engine
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bounds");
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, independent_bits_engine, _UIntType>::value>::type;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %independent_bits_engine engine.
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine()
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b() { }
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %independent_bits_engine engine.
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(const _RandomNumberEngine& __rng)
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng) { }
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 179


1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %independent_bits_engine engine.
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(_RandomNumberEngine&& __rng)
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng)) { }
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %independent_bits_engine engine.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(result_type __s)
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s) { }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %independent_bits_engine engine.
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         independent_bits_engine(_Sseq& __q)
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         : _M_b(__q)
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_b.seed(); }
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_b.seed(__s); }
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the given
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed sequence.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { _M_b.seed(__q); }
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 180


1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets a const reference to the underlying generator engine
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        object.
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the minimum value in the generated random number range.
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0U; }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the maximum value in the generated random number range.
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next value in the generated random number sequence.
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two %independent_bits_engine random number generator
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * objects of the same type for equality.
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %independent_bits_engine random number generator
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %independent_bits_engine random number generator
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const independent_bits_engine& __lhs,
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const independent_bits_engine& __rhs)
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_b == __rhs._M_b; }
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 181


1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %independent_bits_engine random number generator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          an error state.
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _CharT, typename _Traits>
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::independent_bits_engine<_RandomNumberEngine,
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __w, _UIntType>& __x)
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __is >> __x._M_b;
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __is;
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two %independent_bits_engine random number generator
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * objects of the same type for inequality.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %independent_bits_engine random number generator
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %independent_bits_engine random number generator
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::independent_bits_engine<_RandomNumberEngine, __w,
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType>& __lhs,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine, __w,
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType>& __rhs)
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Inserts the current state of a %independent_bits_engine random
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        number generator engine @p __x into the output stream @p __os.
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __os An output stream.
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %independent_bits_engine random number generator engine.
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The output stream with the state of @p __x inserted or in
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          an error state.
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType,
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   typename _CharT, typename _Traits>
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_ostream<_CharT, _Traits>&
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 182


1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine,
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __w, _UIntType>& __x)
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       __os << __x.base();
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return __os;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     }
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Produces random numbers by combining random numbers from some
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * base engine to produce random numbers with a specifies number of bits
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __k.
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __k>
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class shuffle_order_engine
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1u <= __k, "template argument substituting "
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__k out of bound");
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, shuffle_order_engine, result_type>::value>::type;
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t table_size = __k;
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %shuffle_order_engine engine.
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine()
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b()
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %shuffle_order_engine engine.
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(const _RandomNumberEngine& __rng)
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng)
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %shuffle_order_engine engine.
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 183


1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(_RandomNumberEngine&& __rng)
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng))
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %shuffle_order_engine engine.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(result_type __s)
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s)
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %shuffle_order_engine engine.
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         shuffle_order_engine(_Sseq& __q)
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         : _M_b(__q)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { _M_initialize(); }
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****                 for the underlying base class generator engine.
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed();
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_initialize();
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        for the underlying base class generator engine.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed(__s);
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_initialize();
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the given seed
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        sequence.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 184


1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_b.seed(__q);
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_initialize();
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets a const reference to the underlying generator engine object.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the minimum value in the generated random number range.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::min(); }
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the maximum value in the generated random number range.
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::max(); }
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Discard a sequence of random numbers.
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the next value in the generated random number sequence.
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Compares two %shuffle_order_engine random number generator objects
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * of the same type for equality.
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %shuffle_order_engine random number generator object.
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %shuffle_order_engine random number generator
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       */
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const shuffle_order_engine& __lhs,
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const shuffle_order_engine& __rhs)
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (__lhs._M_b == __rhs._M_b
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& std::equal(__lhs._M_v, __lhs._M_v + __k, __rhs._M_v)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 185


1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_y == __rhs._M_y); }
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a %shuffle_order_engine random
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        number generator engine @p __x into the output stream
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	@p __os.
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::shuffle_order_engine<_RandomNumberEngine1,
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __k1>& __x);
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::shuffle_order_engine<_RandomNumberEngine1, __k1>& __x);
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void _M_initialize()
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (size_t __i = 0; __i < __k; ++__i)
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_v[__i] = _M_b();
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_y = _M_b();
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type _M_v[__k];
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type _M_y;
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Compares two %shuffle_order_engine random number generator objects
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * of the same type for inequality.
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %shuffle_order_engine random number generator object.
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %shuffle_order_engine random number generator
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 186


1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __k>
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::shuffle_order_engine<_RandomNumberEngine,
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __k>& __lhs,
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::shuffle_order_engine<_RandomNumberEngine,
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __k>& __rhs)
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The classic Minimum Standard rand0 of Lewis, Goodman, and Miller.
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef linear_congruential_engine<uint_fast32_t, 16807UL, 0UL, 2147483647UL>
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   minstd_rand0;
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * An alternative LCR (Lehmer Generator function).
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   minstd_rand;
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The classic Mersenne Twister.
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Reference:
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * M. Matsumoto and T. Nishimura, Mersenne Twister: A 623-Dimensionally
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Equidistributed Uniform Pseudo-Random Number Generator, ACM Transactions
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3-30.
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef mersenne_twister_engine<
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     uint_fast32_t,
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     32, 624, 397, 31,
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x9908b0dfUL, 11,
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xffffffffUL, 7,
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x9d2c5680UL, 15,
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xefc60000UL, 18, 1812433253UL> mt19937;
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * An alternative Mersenne Twister.
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef mersenne_twister_engine<
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     uint_fast64_t,
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     64, 312, 156, 31,
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xb5026f5aa96619e9ULL, 29,
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x5555555555555555ULL, 17,
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x71d67fffeda60000ULL, 37,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xfff7eee000000000ULL, 43,
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     6364136223846793005ULL> mt19937_64;
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ranlux24_base;
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 187


1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ranlux48_base;
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef minstd_rand0 default_random_engine;
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A standard interface to a platform-specific non-deterministic
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number generator (if any are available).
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   class random_device
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   {
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   public:
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     /** The type of the generated random value. */
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     typedef unsigned int result_type;
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // constructors, destructors and member functions
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device() { _M_init("default"); }
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     explicit
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device(const std::string& __token) { _M_init(__token); }
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #if defined _GLIBCXX_USE_DEV_RANDOM
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ~random_device()
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { _M_fini(); }
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     static constexpr result_type
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     min()
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return std::numeric_limits<result_type>::min(); }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     static constexpr result_type
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     max()
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return std::numeric_limits<result_type>::max(); }
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     double
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     entropy() const noexcept
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifdef _GLIBCXX_USE_DEV_RANDOM
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return this->_M_getentropy();
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #else
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return 0.0;
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     }
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     result_type
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator()()
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return this->_M_getval(); }
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // No copy functions.
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device(const random_device&) = delete;
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void operator=(const random_device&) = delete;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 188


1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   private:
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_init(const std::string& __token);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_init_pretr1(const std::string& __token);
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_fini();
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     result_type _M_getval();
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     result_type _M_getval_pretr1();
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     double _M_getentropy() const noexcept;
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_init(const char*, size_t); // not exported from the shared library
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     union
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	void*      _M_file;
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type (*_M_func)(void*);
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	int _M_fd;
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mt19937    _M_mt;
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   };
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /* @} */ // group random_generators
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_distributions Random Number Distributions
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_distributions_uniform Uniform Distributions
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random_distributions
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // std::uniform_int_distribution is defined in <bits/uniform_int_dist.h>
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Return true if two uniform integer distributions have
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        different parameters.
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _IntType>
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::uniform_int_distribution<_IntType>& __d1,
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::uniform_int_distribution<_IntType>& __d2)
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__d1 == __d2); }
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Inserts a %uniform_int_distribution random number
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        distribution @p __x into the output stream @p os.
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __os An output stream.
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %uniform_int_distribution random number distribution.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 189


1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The output stream with the state of @p __x inserted or in
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * an error state.
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _IntType, typename _CharT, typename _Traits>
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_ostream<_CharT, _Traits>&
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>&,
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::uniform_int_distribution<_IntType>&);
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Extracts a %uniform_int_distribution random number distribution
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __x from the input stream @p __is.
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __is An input stream.
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %uniform_int_distribution random number generator engine.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The input stream with @p __x extracted or in an error state.
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _IntType, typename _CharT, typename _Traits>
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_istream<_CharT, _Traits>&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator>>(std::basic_istream<_CharT, _Traits>&,
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       std::uniform_int_distribution<_IntType>&);
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Uniform continuous distribution for random numbers.
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A continuous random distribution on the range [min, max) with equal
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * probability throughout the range.  The URNG should be real-valued and
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * deliver number in the range [0, 1).
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType = double>
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class uniform_real_distribution
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_floating_point<_RealType>::value,
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be a floating point type");
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the range of the distribution. */
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _RealType result_type;
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** Parameter type. */
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct param_type
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	typedef uniform_real_distribution<_RealType> distribution_type;
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	param_type() : param_type(0) { }
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	explicit
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	param_type(_RealType __a, _RealType __b = _RealType(1))
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 3308              		.loc 19 1749 23 view .LVU791
 3309 000e 4265     		str	r2, [r0, #84]	@ float
 3310              	.LBE1924:
 3311              	.LBE1923:
 3312              	.LBE1922:
 3313              	.LBE1921:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 190


 3314              	.LBB1933:
 3315              	.LBB1934:
 3316              	.LBB1935:
 3317              	.LBB1936:
 3318              	.LBB1937:
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __glibcxx_assert(_M_a <= _M_b);
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	a() const
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_a; }
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	b() const
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_b; }
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend bool
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator==(const param_type& __p1, const param_type& __p2)
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return __p1._M_a == __p2._M_a && __p1._M_b == __p2._M_b; }
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend bool
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator!=(const param_type& __p1, const param_type& __p2)
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return !(__p1 == __p2); }
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       private:
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType _M_a;
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType _M_b;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a uniform_real_distribution object.
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The lower bound is set to 0.0 and the upper bound to 1.0
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       uniform_real_distribution() : uniform_real_distribution(0.0) { }
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a uniform_real_distribution object.
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __a [IN]  The lower bound of the distribution.
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __b [IN]  The upper bound of the distribution.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       uniform_real_distribution(_RealType __a, _RealType __b = _RealType(1))
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__a, __b)
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       uniform_real_distribution(const param_type& __p)
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__p)
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Resets the distribution state.
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 191


1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Does nothing for the uniform real distribution.
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       reset() { }
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       a() const
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_param.a(); }
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       b() const
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_param.b(); }
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Returns the parameter set of the distribution.
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       param_type
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       param() const
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_param; }
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Sets the parameter set of the distribution.
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __param The new parameter set of the distribution.
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       param(const param_type& __param)
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_param = __param; }
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Returns the inclusive lower bound of the distribution range.
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min() const
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return this->a(); }
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Returns the inclusive upper bound of the distribution range.
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max() const
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return this->b(); }
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generating functions.
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UniformRandomNumberGenerator>
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator()(_UniformRandomNumberGenerator& __urng)
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { return this->operator()(__urng, _M_param); }
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UniformRandomNumberGenerator>
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator()(_UniformRandomNumberGenerator& __urng,
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const param_type& __p)
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	    __aurng(__urng);
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 192


1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return (__aurng() * (__p.b() - __p.a())) + __p.a();
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _ForwardIterator,
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _UniformRandomNumberGenerator>
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	void
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__generate(_ForwardIterator __f, _ForwardIterator __t,
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   _UniformRandomNumberGenerator& __urng)
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ this->__generate(__f, __t, __urng, _M_param); }
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _ForwardIterator,
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _UniformRandomNumberGenerator>
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	void
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__generate(_ForwardIterator __f, _ForwardIterator __t,
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   _UniformRandomNumberGenerator& __urng,
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const param_type& __p)
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ this->__generate_impl(__f, __t, __urng, __p); }
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UniformRandomNumberGenerator>
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	void
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__generate(result_type* __f, result_type* __t,
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   _UniformRandomNumberGenerator& __urng,
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const param_type& __p)
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ this->__generate_impl(__f, __t, __urng, __p); }
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Return true if two uniform real distributions have
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        the same parameters.
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const uniform_real_distribution& __d1,
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const uniform_real_distribution& __d2)
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __d1._M_param == __d2._M_param; }
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _ForwardIterator,
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _UniformRandomNumberGenerator>
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	void
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			_UniformRandomNumberGenerator& __urng,
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			const param_type& __p);
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       param_type _M_param;
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Return true if two uniform real distributions have
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        different parameters.
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _IntType>
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::uniform_real_distribution<_IntType>& __d1,
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::uniform_real_distribution<_IntType>& __d2)
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__d1 == __d2); }
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Inserts a %uniform_real_distribution random number
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 193


1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        distribution @p __x into the output stream @p __os.
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __os An output stream.
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %uniform_real_distribution random number distribution.
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The output stream with the state of @p __x inserted or in
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          an error state.
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType, typename _CharT, typename _Traits>
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_ostream<_CharT, _Traits>&
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>&,
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::uniform_real_distribution<_RealType>&);
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Extracts a %uniform_real_distribution random number distribution
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __x from the input stream @p __is.
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __is An input stream.
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %uniform_real_distribution random number generator engine.
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The input stream with @p __x extracted or in an error state.
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType, typename _CharT, typename _Traits>
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_istream<_CharT, _Traits>&
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator>>(std::basic_istream<_CharT, _Traits>&,
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       std::uniform_real_distribution<_RealType>&);
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /* @} */ // group random_distributions_uniform
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_distributions_normal Normal Distributions
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random_distributions
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief A normal continuous distribution for random numbers.
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The formula for the normal probability density function is
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f[
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *     p(x|\mu,\sigma) = \frac{1}{\sigma \sqrt{2 \pi}}
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *            e^{- \frac{{x - \mu}^ {2}}{2 \sigma ^ {2}} } 
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f]
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType = double>
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class normal_distribution
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_floating_point<_RealType>::value,
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be a floating point type");
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the range of the distribution. */
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _RealType result_type;
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** Parameter type. */
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct param_type
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 194


1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	typedef normal_distribution<_RealType> distribution_type;
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	param_type() : param_type(0.0) { }
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	explicit
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	param_type(_RealType __mean, _RealType __stddev = _RealType(1))
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 3319              		.loc 19 1979 39 view .LVU792
 3320 0010 C265     		str	r2, [r0, #92]	@ float
 3321              	.LBE1937:
 3322              	.LBE1936:
 3323              	.LBE1935:
 3324              	.LBE1934:
 3325              	.LBE1933:
 3326              	.LBB1947:
 3327              	.LBB1930:
 3328              	.LBB1927:
 3329              	.LBB1925:
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 3330              		.loc 19 1749 23 view .LVU793
 3331 0012 4FF07E52 		mov	r2, #1065353216
 3332              	.LBE1925:
 3333              	.LBE1927:
 3334              	.LBE1930:
 3335              	.LBE1947:
  19:TapeLoop.h    **** 
 3336              		.loc 8 19 74 view .LVU794
 3337 0016 C163     		str	r1, [r0, #60]	@ float
 3338 0018 0164     		str	r1, [r0, #64]	@ float
 3339              	.LVL107:
 3340              	.LBB1948:
 3341              	.LBI1948:
  23:../../DaisySP//Source/Noise/whitenoise.h ****     ~WhiteNoise() {}
 3342              		.loc 9 23 5 is_stmt 1 view .LVU795
  23:../../DaisySP//Source/Noise/whitenoise.h ****     ~WhiteNoise() {}
 3343              		.loc 9 23 5 is_stmt 0 view .LVU796
 3344              	.LBE1948:
  19:TapeLoop.h    **** 
 3345              		.loc 8 19 74 view .LVU797
 3346 001a 4FF04041 		mov	r1, #-1073741824
 3347              	.LBB1949:
 3348              	.LBB1931:
 3349              	.LBB1928:
 3350              	.LBB1926:
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 3351              		.loc 19 1749 23 view .LVU798
 3352 001e 8265     		str	r2, [r0, #88]	@ float
 3353              	.LBE1926:
 3354              	.LBE1928:
 3355              	.LBE1931:
 3356              	.LBE1949:
 3357              	.LBB1950:
 3358              	.LBB1944:
 3359              	.LBB1941:
 3360              	.LBB1939:
 3361              	.LBB1938:
 3362              		.loc 19 1979 39 view .LVU799
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 195


 3363 0020 0266     		str	r2, [r0, #96]	@ float
 3364              	.LBE1938:
 3365              	.LBE1939:
 3366              	.LBE1941:
 3367              	.LBE1944:
 3368              	.LBE1950:
  19:TapeLoop.h    **** 
 3369              		.loc 8 19 74 view .LVU800
 3370 0022 4FF08042 		mov	r2, #1073741824
 3371 0026 4163     		str	r1, [r0, #52]	@ float
 3372 0028 0221     		movs	r1, #2
 3373 002a 8263     		str	r2, [r0, #56]	@ float
 3374 002c 094A     		ldr	r2, .L49
 3375 002e 8162     		str	r1, [r0, #40]
 3376 0030 C261     		str	r2, [r0, #28]	@ float
 3377 0032 0262     		str	r2, [r0, #32]	@ float
 3378              	.LBE1920:
  19:TapeLoop.h    **** 
 3379              		.loc 8 19 5 view .LVU801
 3380 0034 30B4     		push	{r4, r5}
 3381              		.cfi_def_cfa_offset 8
 3382              		.cfi_offset 4, -8
 3383              		.cfi_offset 5, -4
 3384              	.LBB1961:
  19:TapeLoop.h    **** 
 3385              		.loc 8 19 74 view .LVU802
 3386 0036 0024     		movs	r4, #0
 3387 0038 0125     		movs	r5, #1
 3388 003a C460     		str	r4, [r0, #12]
 3389 003c 0474     		strb	r4, [r0, #16]
 3390 003e 4461     		str	r4, [r0, #20]
 3391 0040 4462     		str	r4, [r0, #36]
 3392              	.LBB1951:
 3393              	.LBB1945:
 3394              	.LBB1942:
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __glibcxx_assert(_M_stddev > _RealType(0));
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	mean() const
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_mean; }
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	stddev() const
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_stddev; }
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend bool
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator==(const param_type& __p1, const param_type& __p2)
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return (__p1._M_mean == __p2._M_mean
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		  && __p1._M_stddev == __p2._M_stddev); }
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend bool
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator!=(const param_type& __p1, const param_type& __p2)
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return !(__p1 == __p2); }
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       private:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 196


2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType _M_mean;
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType _M_stddev;
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       normal_distribution() : normal_distribution(0.0) { }
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs a normal distribution with parameters @f$mean@f$ and
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * standard deviation.
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       normal_distribution(result_type __mean,
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  result_type __stddev = result_type(1))
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__mean, __stddev), _M_saved_available(false)
 3395              		.loc 19 2016 61 view .LVU803
 3396 0042 80F86840 		strb	r4, [r0, #104]
 3397              	.LBE1942:
 3398              	.LBE1945:
 3399              	.LBE1951:
  19:TapeLoop.h    **** 
 3400              		.loc 8 19 74 view .LVU804
 3401 0046 044C     		ldr	r4, .L49+4
 3402 0048 0572     		strb	r5, [r0, #8]
 3403              	.LBB1952:
 3404              	.LBB1953:
 3405              	.LBB1954:
 3406              	.LBB1955:
 3407              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\random.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // random number generation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Copyright (C) 2009-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** /** @file bits/random.tcc
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  *  Do not attempt to use it directly. @headername{random}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 197


  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #ifndef _RANDOM_TCC
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #define _RANDOM_TCC 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #include <numeric> // std::accumulate and std::partial_sum
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** {
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /*
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * (Further) implementation-space details.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   namespace __detail
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   {
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // General case for x = (ax + c) mod m -- use Schrage's algorithm
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // to avoid integer overflow.
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     //
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // Preconditions:  a > 0, m > 0.
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     //
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // Note: only works correctly for __m % __a < __m / __a.
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _Tp
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _Mod<_Tp, __m, __a, __c, false, true>::
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __calc(_Tp __x)
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__a == 1)
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x %= __m;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    static const _Tp __q = __m / __a;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    static const _Tp __r = __m % __a;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _Tp __t1 = __a * (__x % __q);
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _Tp __t2 = __r * (__x / __q);
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__t1 >= __t2)
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __t1 - __t2;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    else
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __m - __t2 + __t1;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__c != 0)
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const _Tp __d = __m - __x;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__d > __c)
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x += __c;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    else
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __c - __d;
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __x;
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _InputIterator, typename _OutputIterator,
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _Tp>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _OutputIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __normalize(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  _OutputIterator __result, const _Tp& __factor)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 198


  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (; __first != __last; ++__first, ++__result)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__result = *__first / __factor;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __result;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   } // namespace __detail
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::multiplier;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::increment;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::modulus;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::default_seed;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Seeds the LCR with integral value @p __s, adjusted so that the
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * ring identity is never a member of the convergence set.
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if ((__detail::__mod<_UIntType, __m>(__c) == 0)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  && (__detail::__mod<_UIntType, __m>(__s) == 0))
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_x = 1;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       else
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_x = __detail::__mod<_UIntType, __m>(__s);
 3408              		.loc 20 123 7 view .LVU805
 3409 004a 0565     		str	r5, [r0, #80]
 3410              	.LBE1955:
 3411              	.LBE1954:
 3412              	.LBE1953:
 3413              	.LBE1952:
  19:TapeLoop.h    **** 
 3414              		.loc 8 19 74 view .LVU806
 3415 004c C464     		str	r4, [r0, #76]	@ float
 3416              	.LVL108:
 3417              	.LBB1958:
 3418              	.LBI1952:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 3419              		.loc 19 273 7 is_stmt 1 view .LVU807
 3420              	.LBB1957:
 3421              	.LBI1953:
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 3422              		.loc 19 284 7 view .LVU808
 3423              	.LBB1956:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 199


 3424              	.LBI1954:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 3425              		.loc 20 116 5 view .LVU809
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 3426              		.loc 20 116 5 is_stmt 0 view .LVU810
 3427              	.LBE1956:
 3428              	.LBE1957:
 3429              	.LBE1958:
 3430              	.LBB1959:
 3431              	.LBI1921:
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 3432              		.loc 19 1781 7 is_stmt 1 view .LVU811
 3433              	.LBB1932:
 3434              	.LBI1922:
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__a, __b)
 3435              		.loc 19 1790 7 view .LVU812
 3436              	.LBB1929:
 3437              	.LBI1923:
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 3438              		.loc 19 1748 2 view .LVU813
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 3439              		.loc 19 1748 2 is_stmt 0 view .LVU814
 3440              	.LBE1929:
 3441              	.LBE1932:
 3442              	.LBE1959:
 3443              	.LBB1960:
 3444              	.LBI1933:
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 3445              		.loc 19 2007 7 is_stmt 1 view .LVU815
 3446              	.LBB1946:
 3447              	.LBI1934:
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  result_type __stddev = result_type(1))
 3448              		.loc 19 2014 7 view .LVU816
 3449              	.LBB1943:
 3450              	.LBB1940:
 3451              	.LBI1936:
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 3452              		.loc 19 1978 2 view .LVU817
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 3453              		.loc 19 1978 2 is_stmt 0 view .LVU818
 3454              	.LBE1940:
 3455              	.LBE1943:
 3456              	.LBE1946:
 3457              	.LBE1960:
 3458              	.LBE1961:
  19:TapeLoop.h    **** 
 3459              		.loc 8 19 77 view .LVU819
 3460 004e 30BC     		pop	{r4, r5}
 3461              		.cfi_restore 5
 3462              		.cfi_restore 4
 3463              		.cfi_def_cfa_offset 0
 3464 0050 7047     		bx	lr
 3465              	.L50:
 3466 0052 00BF     		.align	2
 3467              	.L49:
 3468 0054 E03F9C48 		.word	1218199520
 3469 0058 6F12033B 		.word	990057071
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 200


 3470              		.cfi_endproc
 3471              	.LFE4682:
 3473              		.weak	_ZN8TapeLoopC1ERA2_A320000_f
 3474              		.thumb_set _ZN8TapeLoopC1ERA2_A320000_f,_ZN8TapeLoopC2ERA2_A320000_f
 3475              		.section	.text._Z11tracks_Initv,"ax",%progbits
 3476              		.align	1
 3477              		.p2align 2,,3
 3478              		.global	_Z11tracks_Initv
 3479              		.syntax unified
 3480              		.thumb
 3481              		.thumb_func
 3482              		.fpu fpv5-d16
 3484              	_Z11tracks_Initv:
 3485              	.LFB4718:
 105:TapeLooper.cpp ****     track1.Init(hw.AudioSampleRate());
 3486              		.loc 10 105 1 is_stmt 1 view -0
 3487              		.cfi_startproc
 3488              		@ args = 0, pretend = 0, frame = 0
 3489              		@ frame_needed = 0, uses_anonymous_args = 0
 106:TapeLooper.cpp ****     track2.Init(hw.AudioSampleRate());
 3490              		.loc 10 106 5 view .LVU821
 105:TapeLooper.cpp ****     track1.Init(hw.AudioSampleRate());
 3491              		.loc 10 105 1 is_stmt 0 view .LVU822
 3492 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3493              		.cfi_def_cfa_offset 40
 3494              		.cfi_offset 3, -40
 3495              		.cfi_offset 4, -36
 3496              		.cfi_offset 5, -32
 3497              		.cfi_offset 6, -28
 3498              		.cfi_offset 7, -24
 3499              		.cfi_offset 8, -20
 3500              		.cfi_offset 9, -16
 3501              		.cfi_offset 10, -12
 3502              		.cfi_offset 11, -8
 3503              		.cfi_offset 14, -4
 106:TapeLooper.cpp ****     track2.Init(hw.AudioSampleRate());
 3504              		.loc 10 106 16 view .LVU823
 3505 0004 DFF8A0A1 		ldr	r10, .L53+20
 3506              	.LBB2034:
 3507              	.LBB2035:
 3508              	.LBB2036:
 3509              	.LBB2037:
  25:../../DaisySP//Source/Noise/whitenoise.h ****     /** Initializes the WhiteNoise object
  26:../../DaisySP//Source/Noise/whitenoise.h ****     */
  27:../../DaisySP//Source/Noise/whitenoise.h ****     void Init()
  28:../../DaisySP//Source/Noise/whitenoise.h ****     {
  29:../../DaisySP//Source/Noise/whitenoise.h ****         amp_      = 1.0f;
  30:../../DaisySP//Source/Noise/whitenoise.h ****         randseed_ = 1;
 3510              		.loc 9 30 19 view .LVU824
 3511 0008 4FF00109 		mov	r9, #1
 3512              	.LBE2037:
 3513              	.LBE2036:
  23:TapeLoop.h    **** 
 3514              		.loc 8 23 21 view .LVU825
 3515 000c 614E     		ldr	r6, .L53
 3516              	.LBB2040:
 3517              	.LBB2041:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 201


 146:TapeLoop.h    ****         filled    = false;
 3518              		.loc 8 146 19 view .LVU826
 3519 000e 0024     		movs	r4, #0
 3520              	.LBE2041:
 3521              	.LBE2040:
 3522              	.LBE2035:
 3523              	.LBE2034:
 106:TapeLooper.cpp ****     track2.Init(hw.AudioSampleRate());
 3524              		.loc 10 106 16 view .LVU827
 3525 0010 5046     		mov	r0, r10
 3526              	.LBB2093:
 3527              	.LBB2091:
 3528              	.LBB2047:
 3529              	.LBB2048:
 3530              	.LBB2049:
 3531              	.LBB2050:
 3532              	.LBB2051:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3533              		.loc 19 141 12 view .LVU828
 3534 0012 0325     		movs	r5, #3
 3535              	.LBE2051:
 3536              	.LBE2050:
 3537              	.LBE2049:
 3538              	.LBE2048:
 3539              	.LBE2047:
  33:TapeLoop.h    ****     }
 3540              		.loc 8 33 13 view .LVU829
 3541 0014 4FF0804B 		mov	fp, #1073741824
 3542              	.LBE2091:
 3543              	.LBE2093:
 3544              	.LBB2094:
 3545              	.LBB2095:
  23:TapeLoop.h    **** 
 3546              		.loc 8 23 21 view .LVU830
 3547 0018 DFF89081 		ldr	r8, .L53+24
 3548              	.LBE2095:
 3549              	.LBE2094:
 3550              	.LBB2150:
 3551              	.LBB2151:
 3552 001c 5E4F     		ldr	r7, .L53+4
 3553              	.LBE2151:
 3554              	.LBE2150:
 105:TapeLooper.cpp ****     track1.Init(hw.AudioSampleRate());
 3555              		.loc 10 105 1 view .LVU831
 3556 001e 2DED048B 		vpush.64	{d8, d9}
 3557              		.cfi_def_cfa_offset 56
 3558              		.cfi_offset 80, -56
 3559              		.cfi_offset 81, -52
 3560              		.cfi_offset 82, -48
 3561              		.cfi_offset 83, -44
 106:TapeLooper.cpp ****     track2.Init(hw.AudioSampleRate());
 3562              		.loc 10 106 16 view .LVU832
 3563 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 3564              	.LVL109:
 3565              	.LBB2196:
 3566              	.LBI2034:
  21:TapeLoop.h    ****     {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 202


 3567              		.loc 8 21 10 is_stmt 1 view .LVU833
 3568              	.LBB2092:
  23:TapeLoop.h    **** 
 3569              		.loc 8 23 9 view .LVU834
 3570              	.LBB2071:
 3571              	.LBB2044:
 3572              	.LBB2042:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 3573              		.loc 8 143 25 is_stmt 0 view .LVU835
 3574 0026 5D4A     		ldr	r2, .L53+8
 3575 0028 0021     		movs	r1, #0
 3576 002a 7068     		ldr	r0, [r6, #4]
 3577              	.LBE2042:
 3578              	.LBE2044:
 3579              	.LBE2071:
  23:TapeLoop.h    **** 
 3580              		.loc 8 23 21 view .LVU836
 3581 002c 86ED000A 		vstr.32	s0, [r6]
  25:TapeLoop.h    **** 
 3582              		.loc 8 25 9 is_stmt 1 view .LVU837
 3583              	.LVL110:
 3584              	.LBB2072:
 3585              	.LBI2040:
 139:TapeLoop.h    ****     {
 3586              		.loc 8 139 10 view .LVU838
 3587              	.LBB2045:
 3588              	.LBB2043:
 141:TapeLoop.h    ****         {
 3589              		.loc 8 141 26 view .LVU839
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 3590              		.loc 8 143 25 is_stmt 0 view .LVU840
 3591 0030 FFF7FEFF 		bl	memset
 3592              	.LVL111:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 3593              		.loc 8 143 25 view .LVU841
 3594              	.LBE2043:
 146:TapeLoop.h    ****         filled    = false;
 3595              		.loc 8 146 9 is_stmt 1 view .LVU842
 3596              	.LBE2045:
 3597              	.LBE2072:
 3598              	.LBB2073:
 3599              	.LBB2074:
  31:../../DaisySP//Source/Noise/whitenoise.h ****     }
  32:../../DaisySP//Source/Noise/whitenoise.h **** 
  33:../../DaisySP//Source/Noise/whitenoise.h ****     /** sets the amplitude of the noise output
  34:../../DaisySP//Source/Noise/whitenoise.h ****     */
  35:../../DaisySP//Source/Noise/whitenoise.h ****     inline void SetAmp(float a) { amp_ = a; }
 3600              		.loc 9 35 40 is_stmt 0 view .LVU843
 3601 0034 F36C     		ldr	r3, [r6, #76]	@ float
 3602              	.LBE2074:
 3603              	.LBE2073:
  31:TapeLoop.h    ****         dist_normal
 3604              		.loc 8 31 22 view .LVU844
 3605 0036 F7EE008A 		vmov.f32	s17, #1.0e+0
 3606              	.LBB2077:
 3607              	.LBB2038:
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 203


 3608              		.loc 9 30 19 view .LVU845
 3609 003a C6F84890 		str	r9, [r6, #72]
 3610              	.LBE2038:
 3611              	.LBE2077:
  33:TapeLoop.h    ****     }
 3612              		.loc 8 33 13 view .LVU846
 3613 003e B1EE088A 		vmov.f32	s16, #6.0e+0
 3614              	.LBB2078:
 3615              	.LBB2075:
 3616              		.loc 9 35 40 view .LVU847
 3617 0042 7364     		str	r3, [r6, #68]	@ float
 3618              	.LBE2075:
 3619              	.LBE2078:
 3620              	.LBB2079:
 3621              	.LBB2046:
 146:TapeLoop.h    ****         filled    = false;
 3622              		.loc 8 146 19 view .LVU848
 3623 0044 F460     		str	r4, [r6, #12]
 147:TapeLoop.h    ****     }
 3624              		.loc 8 147 9 is_stmt 1 view .LVU849
 147:TapeLoop.h    ****     }
 3625              		.loc 8 147 19 is_stmt 0 view .LVU850
 3626 0046 3474     		strb	r4, [r6, #16]
 3627              	.LVL112:
 147:TapeLoop.h    ****     }
 3628              		.loc 8 147 19 view .LVU851
 3629              	.LBE2046:
 3630              	.LBE2079:
  27:TapeLoop.h    ****         tape_noise.SetAmp(tape_noise_amt);
 3631              		.loc 8 27 9 is_stmt 1 view .LVU852
 3632              	.LBB2080:
 3633              	.LBI2036:
  27:../../DaisySP//Source/Noise/whitenoise.h ****     {
 3634              		.loc 9 27 10 view .LVU853
 3635              	.LBB2039:
  29:../../DaisySP//Source/Noise/whitenoise.h ****         randseed_ = 1;
 3636              		.loc 9 29 9 view .LVU854
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 3637              		.loc 9 30 9 view .LVU855
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 3638              		.loc 9 30 9 is_stmt 0 view .LVU856
 3639              	.LBE2039:
 3640              	.LBE2080:
  28:TapeLoop.h    **** 
 3641              		.loc 8 28 9 is_stmt 1 view .LVU857
 3642              	.LBB2081:
 3643              	.LBI2073:
 3644              		.loc 9 35 17 view .LVU858
 3645              	.LBB2076:
 3646              		.loc 9 35 35 view .LVU859
 3647              		.loc 9 35 35 is_stmt 0 view .LVU860
 3648              	.LBE2076:
 3649              	.LBE2081:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 3650              		.loc 8 30 9 is_stmt 1 view .LVU861
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 3651              		.loc 8 30 65 is_stmt 0 view .LVU862
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 204


 3652 0048 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 3653              	.LVL113:
 3654              	.LBB2082:
 3655              	.LBB2066:
 3656              	.LBB2061:
 3657              	.LBB2056:
 3658              	.LBB2052:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3659              		.loc 19 141 12 view .LVU863
 3660 004c A5FB0023 		umull	r2, r3, r5, r0
 3661              	.LBE2052:
 3662              	.LBE2056:
 3663              	.LBE2061:
 3664              	.LBE2066:
 3665              	.LBE2082:
  31:TapeLoop.h    ****         dist_normal
 3666              		.loc 8 31 22 view .LVU864
 3667 0050 9FED539A 		vldr.32	s18, .L53+12
 3668 0054 C6ED168A 		vstr.32	s17, [r6, #88]
 3669              	.LBB2083:
 3670              	.LBB2067:
 3671              	.LBB2062:
 3672              	.LBB2057:
 3673              	.LBB2053:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3674              		.loc 19 141 12 view .LVU865
 3675 0058 C11A     		subs	r1, r0, r3
 3676              	.LBE2053:
 3677              	.LBE2057:
 3678              	.LBE2062:
 3679              	.LBE2067:
 3680              	.LBE2083:
  33:TapeLoop.h    ****     }
 3681              		.loc 8 33 13 view .LVU866
 3682 005a 86ED178A 		vstr.32	s16, [r6, #92]
  31:TapeLoop.h    ****         dist_normal
 3683              		.loc 8 31 22 view .LVU867
 3684 005e 86ED159A 		vstr.32	s18, [r6, #84]
 3685              	.LBB2084:
 3686              	.LBB2068:
 3687              	.LBB2063:
 3688              	.LBB2058:
 3689              	.LBB2054:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3690              		.loc 19 141 12 view .LVU868
 3691 0062 03EB5103 		add	r3, r3, r1, lsr #1
 3692              	.LBE2054:
 3693              	.LBE2058:
 3694              	.LBE2063:
 3695              	.LBE2068:
 3696              	.LBE2084:
  33:TapeLoop.h    ****     }
 3697              		.loc 8 33 13 view .LVU869
 3698 0066 86F86840 		strb	r4, [r6, #104]
 3699              	.LVL114:
 3700              	.LBB2085:
 3701              	.LBI2047:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 205


 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 3702              		.loc 19 284 7 is_stmt 1 view .LVU870
 3703              	.LBB2069:
 3704              	.LBI2048:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 3705              		.loc 20 116 5 view .LVU871
 3706              	.LBB2064:
 3707              	.LBI2049:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 3708              		.loc 19 148 7 view .LVU872
 3709              	.LBB2059:
 3710              	.LBI2050:
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 3711              		.loc 19 137 2 view .LVU873
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 3712              		.loc 19 137 2 is_stmt 0 view .LVU874
 3713              	.LBE2059:
 3714              	.LBE2064:
 3715              	.LBE2069:
 3716              	.LBE2085:
  33:TapeLoop.h    ****     }
 3717              		.loc 8 33 13 view .LVU875
 3718 006a C6F860B0 		str	fp, [r6, #96]	@ float
 3719              	.LBB2086:
 3720              	.LBB2070:
 3721              	.LBB2065:
 3722              	.LBB2060:
 3723              	.LBB2055:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3724              		.loc 19 141 12 view .LVU876
 3725 006e 9B0F     		lsrs	r3, r3, #30
 3726 0070 C3EBC373 		rsb	r3, r3, r3, lsl #31
 3727 0074 C01A     		subs	r0, r0, r3
 3728              	.LBE2055:
 3729              	.LBE2060:
 3730              	.LBE2065:
 3731              	.LBE2070:
 3732              	.LBE2086:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 3733              		.loc 8 30 22 view .LVU877
 3734 0076 4845     		cmp	r0, r9
 3735 0078 38BF     		it	cc
 3736 007a 4846     		movcc	r0, r9
 3737 007c 3065     		str	r0, [r6, #80]
  31:TapeLoop.h    ****         dist_normal
 3738              		.loc 8 31 9 is_stmt 1 view .LVU878
 3739              	.LVL115:
 3740              	.LBB2087:
 3741              	.LBI2087:
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__a, __b)
 3742              		.loc 19 1790 7 view .LVU879
 3743              	.LBB2088:
 3744              	.LBI2088:
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 3745              		.loc 19 1748 2 view .LVU880
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 3746              		.loc 19 1748 2 is_stmt 0 view .LVU881
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 206


 3747              	.LBE2088:
 3748              	.LBE2087:
  32:TapeLoop.h    ****             = std::normal_distribution<float>(demag_size_mean, demag_size_sd);
 3749              		.loc 8 32 9 is_stmt 1 view .LVU882
 3750              	.LBB2089:
 3751              	.LBI2089:
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  result_type __stddev = result_type(1))
 3752              		.loc 19 2014 7 view .LVU883
 3753              	.LBB2090:
 3754              	.LBI2090:
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 3755              		.loc 19 1978 2 view .LVU884
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 3756              		.loc 19 1978 2 is_stmt 0 view .LVU885
 3757              	.LBE2090:
 3758              	.LBE2089:
 3759              	.LBE2092:
 3760              	.LBE2196:
 107:TapeLooper.cpp ****     track3.Init(hw.AudioSampleRate());
 3761              		.loc 10 107 5 is_stmt 1 view .LVU886
 107:TapeLooper.cpp ****     track3.Init(hw.AudioSampleRate());
 3762              		.loc 10 107 16 is_stmt 0 view .LVU887
 3763 007e 5046     		mov	r0, r10
 3764 0080 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 3765              	.LVL116:
 3766              	.LBB2197:
 3767              	.LBI2094:
  21:TapeLoop.h    ****     {
 3768              		.loc 8 21 10 is_stmt 1 view .LVU888
 3769              	.LBB2147:
  23:TapeLoop.h    **** 
 3770              		.loc 8 23 9 view .LVU889
 3771              	.LBB2096:
 3772              	.LBB2097:
 3773              	.LBB2098:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 3774              		.loc 8 143 25 is_stmt 0 view .LVU890
 3775 0084 454A     		ldr	r2, .L53+8
 3776 0086 2146     		mov	r1, r4
 3777 0088 D8F80400 		ldr	r0, [r8, #4]
 3778              	.LBE2098:
 3779              	.LBE2097:
 3780              	.LBE2096:
  23:TapeLoop.h    **** 
 3781              		.loc 8 23 21 view .LVU891
 3782 008c 88ED000A 		vstr.32	s0, [r8]
  25:TapeLoop.h    **** 
 3783              		.loc 8 25 9 is_stmt 1 view .LVU892
 3784              	.LVL117:
 3785              	.LBB2103:
 3786              	.LBI2096:
 139:TapeLoop.h    ****     {
 3787              		.loc 8 139 10 view .LVU893
 3788              	.LBB2100:
 3789              	.LBB2099:
 141:TapeLoop.h    ****         {
 3790              		.loc 8 141 26 view .LVU894
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 207


 143:TapeLoop.h    ****             track[1][i] = 0.f;
 3791              		.loc 8 143 25 is_stmt 0 view .LVU895
 3792 0090 FFF7FEFF 		bl	memset
 3793              	.LVL118:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 3794              		.loc 8 143 25 view .LVU896
 3795              	.LBE2099:
 146:TapeLoop.h    ****         filled    = false;
 3796              		.loc 8 146 9 is_stmt 1 view .LVU897
 3797              	.LBE2100:
 3798              	.LBE2103:
 3799              	.LBB2104:
 3800              	.LBB2105:
 3801              		.loc 9 35 40 is_stmt 0 view .LVU898
 3802 0094 D8F84C30 		ldr	r3, [r8, #76]	@ float
 3803              	.LBE2105:
 3804              	.LBE2104:
 3805              	.LBB2108:
 3806              	.LBB2101:
 146:TapeLoop.h    ****         filled    = false;
 3807              		.loc 8 146 19 view .LVU899
 3808 0098 C8F80C40 		str	r4, [r8, #12]
 147:TapeLoop.h    ****     }
 3809              		.loc 8 147 9 is_stmt 1 view .LVU900
 3810              	.LBE2101:
 3811              	.LBE2108:
 3812              	.LBB2109:
 3813              	.LBB2106:
 3814              		.loc 9 35 40 is_stmt 0 view .LVU901
 3815 009c C8F84430 		str	r3, [r8, #68]	@ float
 3816              	.LBE2106:
 3817              	.LBE2109:
 3818              	.LBB2110:
 3819              	.LBB2102:
 147:TapeLoop.h    ****     }
 3820              		.loc 8 147 19 view .LVU902
 3821 00a0 88F81040 		strb	r4, [r8, #16]
 3822              	.LVL119:
 147:TapeLoop.h    ****     }
 3823              		.loc 8 147 19 view .LVU903
 3824              	.LBE2102:
 3825              	.LBE2110:
  27:TapeLoop.h    ****         tape_noise.SetAmp(tape_noise_amt);
 3826              		.loc 8 27 9 is_stmt 1 view .LVU904
 3827              	.LBB2111:
 3828              	.LBI2111:
  27:../../DaisySP//Source/Noise/whitenoise.h ****     {
 3829              		.loc 9 27 10 view .LVU905
 3830              	.LBB2112:
  29:../../DaisySP//Source/Noise/whitenoise.h ****         randseed_ = 1;
 3831              		.loc 9 29 9 view .LVU906
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 3832              		.loc 9 30 9 view .LVU907
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 3833              		.loc 9 30 19 is_stmt 0 view .LVU908
 3834 00a4 C8F84890 		str	r9, [r8, #72]
 3835              	.LVL120:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 208


  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 3836              		.loc 9 30 19 view .LVU909
 3837              	.LBE2112:
 3838              	.LBE2111:
  28:TapeLoop.h    **** 
 3839              		.loc 8 28 9 is_stmt 1 view .LVU910
 3840              	.LBB2113:
 3841              	.LBI2104:
 3842              		.loc 9 35 17 view .LVU911
 3843              	.LBB2107:
 3844              		.loc 9 35 35 view .LVU912
 3845              		.loc 9 35 35 is_stmt 0 view .LVU913
 3846              	.LBE2107:
 3847              	.LBE2113:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 3848              		.loc 8 30 9 is_stmt 1 view .LVU914
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 3849              		.loc 8 30 65 is_stmt 0 view .LVU915
 3850 00a8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 3851              	.LVL121:
 3852              	.LBB2114:
 3853              	.LBB2115:
 3854              	.LBB2116:
 3855              	.LBB2117:
 3856              	.LBB2118:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3857              		.loc 19 141 12 view .LVU916
 3858 00ac A5FB0021 		umull	r2, r1, r5, r0
 3859              	.LBE2118:
 3860              	.LBE2117:
 3861              	.LBE2116:
 3862              	.LBE2115:
 3863              	.LBE2114:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 3864              		.loc 8 30 65 view .LVU917
 3865 00b0 0346     		mov	r3, r0
 3866              	.LVL122:
 3867              	.LBB2138:
 3868              	.LBI2114:
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 3869              		.loc 19 284 7 is_stmt 1 view .LVU918
 3870              	.LBB2133:
 3871              	.LBI2115:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 3872              		.loc 20 116 5 view .LVU919
 3873              	.LBB2128:
 3874              	.LBI2116:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 3875              		.loc 19 148 7 view .LVU920
 3876              	.LBB2123:
 3877              	.LBI2117:
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 3878              		.loc 19 137 2 view .LVU921
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 3879              		.loc 19 137 2 is_stmt 0 view .LVU922
 3880              	.LBE2123:
 3881              	.LBE2128:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 209


 3882              	.LBE2133:
 3883              	.LBE2138:
 3884              	.LBE2147:
 3885              	.LBE2197:
 108:TapeLooper.cpp ****     track4.Init(hw.AudioSampleRate());
 3886              		.loc 10 108 16 view .LVU923
 3887 00b2 5046     		mov	r0, r10
 3888              	.LBB2198:
 3889              	.LBB2148:
  31:TapeLoop.h    ****         dist_normal
 3890              		.loc 8 31 22 view .LVU924
 3891 00b4 88ED159A 		vstr.32	s18, [r8, #84]
 3892              	.LBB2139:
 3893              	.LBB2134:
 3894              	.LBB2129:
 3895              	.LBB2124:
 3896              	.LBB2119:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3897              		.loc 19 141 12 view .LVU925
 3898 00b8 A3EB010C 		sub	ip, r3, r1
 3899              	.LBE2119:
 3900              	.LBE2124:
 3901              	.LBE2129:
 3902              	.LBE2134:
 3903              	.LBE2139:
  31:TapeLoop.h    ****         dist_normal
 3904              		.loc 8 31 22 view .LVU926
 3905 00bc C8ED168A 		vstr.32	s17, [r8, #88]
  33:TapeLoop.h    ****     }
 3906              		.loc 8 33 13 view .LVU927
 3907 00c0 88ED178A 		vstr.32	s16, [r8, #92]
 3908              	.LBB2140:
 3909              	.LBB2135:
 3910              	.LBB2130:
 3911              	.LBB2125:
 3912              	.LBB2120:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3913              		.loc 19 141 12 view .LVU928
 3914 00c4 01EB5C01 		add	r1, r1, ip, lsr #1
 3915              	.LBE2120:
 3916              	.LBE2125:
 3917              	.LBE2130:
 3918              	.LBE2135:
 3919              	.LBE2140:
  33:TapeLoop.h    ****     }
 3920              		.loc 8 33 13 view .LVU929
 3921 00c8 C8F860B0 		str	fp, [r8, #96]	@ float
 3922 00cc 88F86840 		strb	r4, [r8, #104]
 3923              	.LBB2141:
 3924              	.LBB2136:
 3925              	.LBB2131:
 3926              	.LBB2126:
 3927              	.LBB2121:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3928              		.loc 19 141 12 view .LVU930
 3929 00d0 890F     		lsrs	r1, r1, #30
 3930              	.LBE2121:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 210


 3931              	.LBE2126:
 3932              	.LBE2131:
 3933              	.LBE2136:
 3934              	.LBE2141:
 3935              	.LBE2148:
 3936              	.LBE2198:
 3937              	.LBB2199:
 3938              	.LBB2200:
  23:TapeLoop.h    **** 
 3939              		.loc 8 23 21 view .LVU931
 3940 00d2 344E     		ldr	r6, .L53+16
 3941              	.LBE2200:
 3942              	.LBE2199:
 3943              	.LBB2245:
 3944              	.LBB2149:
 3945              	.LBB2142:
 3946              	.LBB2137:
 3947              	.LBB2132:
 3948              	.LBB2127:
 3949              	.LBB2122:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 3950              		.loc 19 141 12 view .LVU932
 3951 00d4 C1EBC171 		rsb	r1, r1, r1, lsl #31
 3952 00d8 5B1A     		subs	r3, r3, r1
 3953              	.LBE2122:
 3954              	.LBE2127:
 3955              	.LBE2132:
 3956              	.LBE2137:
 3957              	.LBE2142:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 3958              		.loc 8 30 22 view .LVU933
 3959 00da 4B45     		cmp	r3, r9
 3960 00dc 38BF     		it	cc
 3961 00de 4B46     		movcc	r3, r9
 3962 00e0 C8F85030 		str	r3, [r8, #80]
  31:TapeLoop.h    ****         dist_normal
 3963              		.loc 8 31 9 is_stmt 1 view .LVU934
 3964              	.LVL123:
 3965              	.LBB2143:
 3966              	.LBI2143:
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__a, __b)
 3967              		.loc 19 1790 7 view .LVU935
 3968              	.LBB2144:
 3969              	.LBI2144:
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 3970              		.loc 19 1748 2 view .LVU936
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 3971              		.loc 19 1748 2 is_stmt 0 view .LVU937
 3972              	.LBE2144:
 3973              	.LBE2143:
  32:TapeLoop.h    ****             = std::normal_distribution<float>(demag_size_mean, demag_size_sd);
 3974              		.loc 8 32 9 is_stmt 1 view .LVU938
 3975              	.LBB2145:
 3976              	.LBI2145:
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  result_type __stddev = result_type(1))
 3977              		.loc 19 2014 7 view .LVU939
 3978              	.LBB2146:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 211


 3979              	.LBI2146:
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 3980              		.loc 19 1978 2 view .LVU940
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 3981              		.loc 19 1978 2 is_stmt 0 view .LVU941
 3982              	.LBE2146:
 3983              	.LBE2145:
 3984              	.LBE2149:
 3985              	.LBE2245:
 108:TapeLooper.cpp ****     track4.Init(hw.AudioSampleRate());
 3986              		.loc 10 108 5 is_stmt 1 view .LVU942
 108:TapeLooper.cpp ****     track4.Init(hw.AudioSampleRate());
 3987              		.loc 10 108 16 is_stmt 0 view .LVU943
 3988 00e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 3989              	.LVL124:
 3990              	.LBB2246:
 3991              	.LBI2150:
  21:TapeLoop.h    ****     {
 3992              		.loc 8 21 10 is_stmt 1 view .LVU944
 3993              	.LBB2194:
  23:TapeLoop.h    **** 
 3994              		.loc 8 23 9 view .LVU945
 3995              	.LBB2152:
 3996              	.LBB2153:
 3997              	.LBB2154:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 3998              		.loc 8 143 25 is_stmt 0 view .LVU946
 3999 00e8 2C4A     		ldr	r2, .L53+8
 4000 00ea 2146     		mov	r1, r4
 4001 00ec 7868     		ldr	r0, [r7, #4]
 4002              	.LBE2154:
 4003              	.LBE2153:
 4004              	.LBE2152:
  23:TapeLoop.h    **** 
 4005              		.loc 8 23 21 view .LVU947
 4006 00ee 87ED000A 		vstr.32	s0, [r7]
  25:TapeLoop.h    **** 
 4007              		.loc 8 25 9 is_stmt 1 view .LVU948
 4008              	.LVL125:
 4009              	.LBB2159:
 4010              	.LBI2152:
 139:TapeLoop.h    ****     {
 4011              		.loc 8 139 10 view .LVU949
 4012              	.LBB2156:
 4013              	.LBB2155:
 141:TapeLoop.h    ****         {
 4014              		.loc 8 141 26 view .LVU950
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 4015              		.loc 8 143 25 is_stmt 0 view .LVU951
 4016 00f2 FFF7FEFF 		bl	memset
 4017              	.LVL126:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 4018              		.loc 8 143 25 view .LVU952
 4019              	.LBE2155:
 146:TapeLoop.h    ****         filled    = false;
 4020              		.loc 8 146 9 is_stmt 1 view .LVU953
 4021              	.LBE2156:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 212


 4022              	.LBE2159:
 4023              	.LBB2160:
 4024              	.LBB2161:
 4025              		.loc 9 35 40 is_stmt 0 view .LVU954
 4026 00f6 FB6C     		ldr	r3, [r7, #76]	@ float
 4027              	.LBE2161:
 4028              	.LBE2160:
 4029              	.LBB2164:
 4030              	.LBB2157:
 146:TapeLoop.h    ****         filled    = false;
 4031              		.loc 8 146 19 view .LVU955
 4032 00f8 FC60     		str	r4, [r7, #12]
 147:TapeLoop.h    ****     }
 4033              		.loc 8 147 9 is_stmt 1 view .LVU956
 4034              	.LBE2157:
 4035              	.LBE2164:
 4036              	.LBB2165:
 4037              	.LBB2162:
 4038              		.loc 9 35 40 is_stmt 0 view .LVU957
 4039 00fa 7B64     		str	r3, [r7, #68]	@ float
 4040              	.LBE2162:
 4041              	.LBE2165:
 4042              	.LBB2166:
 4043              	.LBB2158:
 147:TapeLoop.h    ****     }
 4044              		.loc 8 147 19 view .LVU958
 4045 00fc 3C74     		strb	r4, [r7, #16]
 4046              	.LVL127:
 147:TapeLoop.h    ****     }
 4047              		.loc 8 147 19 view .LVU959
 4048              	.LBE2158:
 4049              	.LBE2166:
  27:TapeLoop.h    ****         tape_noise.SetAmp(tape_noise_amt);
 4050              		.loc 8 27 9 is_stmt 1 view .LVU960
 4051              	.LBB2167:
 4052              	.LBI2167:
  27:../../DaisySP//Source/Noise/whitenoise.h ****     {
 4053              		.loc 9 27 10 view .LVU961
 4054              	.LBB2168:
  29:../../DaisySP//Source/Noise/whitenoise.h ****         randseed_ = 1;
 4055              		.loc 9 29 9 view .LVU962
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 4056              		.loc 9 30 9 view .LVU963
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 4057              		.loc 9 30 19 is_stmt 0 view .LVU964
 4058 00fe C7F84890 		str	r9, [r7, #72]
 4059              	.LVL128:
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 4060              		.loc 9 30 19 view .LVU965
 4061              	.LBE2168:
 4062              	.LBE2167:
  28:TapeLoop.h    **** 
 4063              		.loc 8 28 9 is_stmt 1 view .LVU966
 4064              	.LBB2169:
 4065              	.LBI2160:
 4066              		.loc 9 35 17 view .LVU967
 4067              	.LBB2163:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 213


 4068              		.loc 9 35 35 view .LVU968
 4069              		.loc 9 35 35 is_stmt 0 view .LVU969
 4070              	.LBE2163:
 4071              	.LBE2169:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 4072              		.loc 8 30 9 is_stmt 1 view .LVU970
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 4073              		.loc 8 30 65 is_stmt 0 view .LVU971
 4074 0102 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 4075              	.LVL129:
 4076 0106 0346     		mov	r3, r0
 4077              	.LBE2194:
 4078              	.LBE2246:
 109:TapeLooper.cpp **** }
 4079              		.loc 10 109 16 view .LVU972
 4080 0108 5046     		mov	r0, r10
 4081              	.LBB2247:
 4082              	.LBB2195:
  31:TapeLoop.h    ****         dist_normal
 4083              		.loc 8 31 22 view .LVU973
 4084 010a 87ED159A 		vstr.32	s18, [r7, #84]
 4085              	.LBB2170:
 4086              	.LBB2171:
 4087              	.LBB2172:
 4088              	.LBB2173:
 4089              	.LBB2174:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4090              		.loc 19 141 12 view .LVU974
 4091 010e A5FB0321 		umull	r2, r1, r5, r3
 4092              	.LBE2174:
 4093              	.LBE2173:
 4094              	.LBE2172:
 4095              	.LBE2171:
 4096              	.LBE2170:
  31:TapeLoop.h    ****         dist_normal
 4097              		.loc 8 31 22 view .LVU975
 4098 0112 C7ED168A 		vstr.32	s17, [r7, #88]
 4099              	.LVL130:
 4100              	.LBB2187:
 4101              	.LBI2170:
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 4102              		.loc 19 284 7 is_stmt 1 view .LVU976
 4103              	.LBB2184:
 4104              	.LBI2171:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 4105              		.loc 20 116 5 view .LVU977
 4106              	.LBB2181:
 4107              	.LBI2172:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 4108              		.loc 19 148 7 view .LVU978
 4109              	.LBB2178:
 4110              	.LBI2173:
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 4111              		.loc 19 137 2 view .LVU979
 4112              	.LBB2175:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4113              		.loc 19 141 12 is_stmt 0 view .LVU980
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 214


 4114 0116 A3EB010C 		sub	ip, r3, r1
 4115              	.LBE2175:
 4116              	.LBE2178:
 4117              	.LBE2181:
 4118              	.LBE2184:
 4119              	.LBE2187:
  33:TapeLoop.h    ****     }
 4120              		.loc 8 33 13 view .LVU981
 4121 011a 87ED178A 		vstr.32	s16, [r7, #92]
 4122 011e C7F860B0 		str	fp, [r7, #96]	@ float
 4123              	.LBB2188:
 4124              	.LBB2185:
 4125              	.LBB2182:
 4126              	.LBB2179:
 4127              	.LBB2176:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4128              		.loc 19 141 12 view .LVU982
 4129 0122 01EB5C01 		add	r1, r1, ip, lsr #1
 4130              	.LBE2176:
 4131              	.LBE2179:
 4132              	.LBE2182:
 4133              	.LBE2185:
 4134              	.LBE2188:
  33:TapeLoop.h    ****     }
 4135              		.loc 8 33 13 view .LVU983
 4136 0126 87F86840 		strb	r4, [r7, #104]
 4137              	.LBB2189:
 4138              	.LBB2186:
 4139              	.LBB2183:
 4140              	.LBB2180:
 4141              	.LBB2177:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4142              		.loc 19 141 12 view .LVU984
 4143 012a 890F     		lsrs	r1, r1, #30
 4144 012c C1EBC171 		rsb	r1, r1, r1, lsl #31
 4145 0130 591A     		subs	r1, r3, r1
 4146              	.LBE2177:
 4147              	.LBE2180:
 4148              	.LBE2183:
 4149              	.LBE2186:
 4150              	.LBE2189:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 4151              		.loc 8 30 22 view .LVU985
 4152 0132 4945     		cmp	r1, r9
 4153 0134 38BF     		it	cc
 4154 0136 4946     		movcc	r1, r9
 4155 0138 3965     		str	r1, [r7, #80]
  31:TapeLoop.h    ****         dist_normal
 4156              		.loc 8 31 9 is_stmt 1 view .LVU986
 4157              	.LVL131:
 4158              	.LBB2190:
 4159              	.LBI2190:
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__a, __b)
 4160              		.loc 19 1790 7 view .LVU987
 4161              	.LBB2191:
 4162              	.LBI2191:
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 215


 4163              		.loc 19 1748 2 view .LVU988
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 4164              		.loc 19 1748 2 is_stmt 0 view .LVU989
 4165              	.LBE2191:
 4166              	.LBE2190:
  32:TapeLoop.h    ****             = std::normal_distribution<float>(demag_size_mean, demag_size_sd);
 4167              		.loc 8 32 9 is_stmt 1 view .LVU990
 4168              	.LBB2192:
 4169              	.LBI2192:
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  result_type __stddev = result_type(1))
 4170              		.loc 19 2014 7 view .LVU991
 4171              	.LBB2193:
 4172              	.LBI2193:
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 4173              		.loc 19 1978 2 view .LVU992
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 4174              		.loc 19 1978 2 is_stmt 0 view .LVU993
 4175              	.LBE2193:
 4176              	.LBE2192:
 4177              	.LBE2195:
 4178              	.LBE2247:
 109:TapeLooper.cpp **** }
 4179              		.loc 10 109 5 is_stmt 1 view .LVU994
 109:TapeLooper.cpp **** }
 4180              		.loc 10 109 16 is_stmt 0 view .LVU995
 4181 013a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 4182              	.LVL132:
 4183              	.LBB2248:
 4184              	.LBI2199:
  21:TapeLoop.h    ****     {
 4185              		.loc 8 21 10 is_stmt 1 view .LVU996
 4186              	.LBB2243:
  23:TapeLoop.h    **** 
 4187              		.loc 8 23 9 view .LVU997
 4188              	.LBB2201:
 4189              	.LBB2202:
 4190              	.LBB2203:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 4191              		.loc 8 143 25 is_stmt 0 view .LVU998
 4192 013e 174A     		ldr	r2, .L53+8
 4193 0140 2146     		mov	r1, r4
 4194 0142 7068     		ldr	r0, [r6, #4]
 4195              	.LBE2203:
 4196              	.LBE2202:
 4197              	.LBE2201:
  23:TapeLoop.h    **** 
 4198              		.loc 8 23 21 view .LVU999
 4199 0144 86ED000A 		vstr.32	s0, [r6]
  25:TapeLoop.h    **** 
 4200              		.loc 8 25 9 is_stmt 1 view .LVU1000
 4201              	.LVL133:
 4202              	.LBB2207:
 4203              	.LBI2201:
 139:TapeLoop.h    ****     {
 4204              		.loc 8 139 10 view .LVU1001
 4205              	.LBB2205:
 4206              	.LBB2204:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 216


 141:TapeLoop.h    ****         {
 4207              		.loc 8 141 26 view .LVU1002
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 4208              		.loc 8 143 25 is_stmt 0 view .LVU1003
 4209 0148 FFF7FEFF 		bl	memset
 4210              	.LVL134:
 143:TapeLoop.h    ****             track[1][i] = 0.f;
 4211              		.loc 8 143 25 view .LVU1004
 4212              	.LBE2204:
 146:TapeLoop.h    ****         filled    = false;
 4213              		.loc 8 146 9 is_stmt 1 view .LVU1005
 4214              	.LBE2205:
 4215              	.LBE2207:
 4216              	.LBB2208:
 4217              	.LBB2209:
 4218              		.loc 9 35 40 is_stmt 0 view .LVU1006
 4219 014c F36C     		ldr	r3, [r6, #76]	@ float
 4220              	.LBE2209:
 4221              	.LBE2208:
 4222              	.LBB2212:
 4223              	.LBB2213:
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 4224              		.loc 9 30 19 view .LVU1007
 4225 014e C6F84890 		str	r9, [r6, #72]
 4226              	.LBE2213:
 4227              	.LBE2212:
 4228              	.LBB2215:
 4229              	.LBB2210:
 4230              		.loc 9 35 40 view .LVU1008
 4231 0152 7364     		str	r3, [r6, #68]	@ float
 4232              	.LBE2210:
 4233              	.LBE2215:
 4234              	.LBB2216:
 4235              	.LBB2206:
 146:TapeLoop.h    ****         filled    = false;
 4236              		.loc 8 146 19 view .LVU1009
 4237 0154 F460     		str	r4, [r6, #12]
 147:TapeLoop.h    ****     }
 4238              		.loc 8 147 9 is_stmt 1 view .LVU1010
 147:TapeLoop.h    ****     }
 4239              		.loc 8 147 19 is_stmt 0 view .LVU1011
 4240 0156 3474     		strb	r4, [r6, #16]
 4241              	.LVL135:
 147:TapeLoop.h    ****     }
 4242              		.loc 8 147 19 view .LVU1012
 4243              	.LBE2206:
 4244              	.LBE2216:
  27:TapeLoop.h    ****         tape_noise.SetAmp(tape_noise_amt);
 4245              		.loc 8 27 9 is_stmt 1 view .LVU1013
 4246              	.LBB2217:
 4247              	.LBI2212:
  27:../../DaisySP//Source/Noise/whitenoise.h ****     {
 4248              		.loc 9 27 10 view .LVU1014
 4249              	.LBB2214:
  29:../../DaisySP//Source/Noise/whitenoise.h ****         randseed_ = 1;
 4250              		.loc 9 29 9 view .LVU1015
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 217


 4251              		.loc 9 30 9 view .LVU1016
  30:../../DaisySP//Source/Noise/whitenoise.h ****     }
 4252              		.loc 9 30 9 is_stmt 0 view .LVU1017
 4253              	.LBE2214:
 4254              	.LBE2217:
  28:TapeLoop.h    **** 
 4255              		.loc 8 28 9 is_stmt 1 view .LVU1018
 4256              	.LBB2218:
 4257              	.LBI2208:
 4258              		.loc 9 35 17 view .LVU1019
 4259              	.LBB2211:
 4260              		.loc 9 35 35 view .LVU1020
 4261              		.loc 9 35 35 is_stmt 0 view .LVU1021
 4262              	.LBE2211:
 4263              	.LBE2218:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 4264              		.loc 8 30 9 is_stmt 1 view .LVU1022
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 4265              		.loc 8 30 65 is_stmt 0 view .LVU1023
 4266 0158 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 4267              	.LVL136:
 4268              	.LBB2219:
 4269              	.LBB2220:
 4270              	.LBB2221:
 4271              	.LBB2222:
 4272              	.LBB2223:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4273              		.loc 19 141 12 view .LVU1024
 4274 015c A5FB0035 		umull	r3, r5, r5, r0
 4275              	.LBE2223:
 4276              	.LBE2222:
 4277              	.LBE2221:
 4278              	.LBE2220:
 4279              	.LBE2219:
  31:TapeLoop.h    ****         dist_normal
 4280              		.loc 8 31 22 view .LVU1025
 4281 0160 86ED159A 		vstr.32	s18, [r6, #84]
 4282              	.LBB2236:
 4283              	.LBB2233:
 4284              	.LBB2230:
 4285              	.LBB2227:
 4286              	.LBB2224:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4287              		.loc 19 141 12 view .LVU1026
 4288 0164 431B     		subs	r3, r0, r5
 4289              	.LBE2224:
 4290              	.LBE2227:
 4291              	.LBE2230:
 4292              	.LBE2233:
 4293              	.LBE2236:
  31:TapeLoop.h    ****         dist_normal
 4294              		.loc 8 31 22 view .LVU1027
 4295 0166 C6ED168A 		vstr.32	s17, [r6, #88]
  33:TapeLoop.h    ****     }
 4296              		.loc 8 33 13 view .LVU1028
 4297 016a 86ED178A 		vstr.32	s16, [r6, #92]
 4298              	.LVL137:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 218


 4299              	.LBB2237:
 4300              	.LBI2219:
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 4301              		.loc 19 284 7 is_stmt 1 view .LVU1029
 4302              	.LBB2234:
 4303              	.LBI2220:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 4304              		.loc 20 116 5 view .LVU1030
 4305              	.LBB2231:
 4306              	.LBI2221:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 4307              		.loc 19 148 7 view .LVU1031
 4308              	.LBB2228:
 4309              	.LBI2222:
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 4310              		.loc 19 137 2 view .LVU1032
 4311              	.LBB2225:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4312              		.loc 19 141 12 is_stmt 0 view .LVU1033
 4313 016e 05EB5305 		add	r5, r5, r3, lsr #1
 4314              	.LBE2225:
 4315              	.LBE2228:
 4316              	.LBE2231:
 4317              	.LBE2234:
 4318              	.LBE2237:
  33:TapeLoop.h    ****     }
 4319              		.loc 8 33 13 view .LVU1034
 4320 0172 C6F860B0 		str	fp, [r6, #96]	@ float
 4321 0176 86F86840 		strb	r4, [r6, #104]
 4322              	.LBB2238:
 4323              	.LBB2235:
 4324              	.LBB2232:
 4325              	.LBB2229:
 4326              	.LBB2226:
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 4327              		.loc 19 141 12 view .LVU1035
 4328 017a AB0F     		lsrs	r3, r5, #30
 4329 017c C3EBC373 		rsb	r3, r3, r3, lsl #31
 4330 0180 C31A     		subs	r3, r0, r3
 4331              	.LBE2226:
 4332              	.LBE2229:
 4333              	.LBE2232:
 4334              	.LBE2235:
 4335              	.LBE2238:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 4336              		.loc 8 30 22 view .LVU1036
 4337 0182 4B45     		cmp	r3, r9
 4338              	.LBE2243:
 4339              	.LBE2248:
 110:TapeLooper.cpp **** 
 4340              		.loc 10 110 1 view .LVU1037
 4341 0184 BDEC048B 		vldm	sp!, {d8-d9}
 4342              		.cfi_restore 82
 4343              		.cfi_restore 83
 4344              		.cfi_restore 80
 4345              		.cfi_restore 81
 4346              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 219


 4347              	.LBB2249:
 4348              	.LBB2244:
  30:TapeLoop.h    ****         dist_uniform = std::uniform_real_distribution<float>(0.f, 1.f);
 4349              		.loc 8 30 22 view .LVU1038
 4350 0188 38BF     		it	cc
 4351 018a 4B46     		movcc	r3, r9
 4352 018c 3365     		str	r3, [r6, #80]
  31:TapeLoop.h    ****         dist_normal
 4353              		.loc 8 31 9 is_stmt 1 view .LVU1039
 4354              	.LVL138:
 4355              	.LBB2239:
 4356              	.LBI2239:
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__a, __b)
 4357              		.loc 19 1790 7 view .LVU1040
 4358              	.LBB2240:
 4359              	.LBI2240:
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 4360              		.loc 19 1748 2 view .LVU1041
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 4361              		.loc 19 1748 2 is_stmt 0 view .LVU1042
 4362              	.LBE2240:
 4363              	.LBE2239:
  32:TapeLoop.h    ****             = std::normal_distribution<float>(demag_size_mean, demag_size_sd);
 4364              		.loc 8 32 9 is_stmt 1 view .LVU1043
 4365              	.LBB2241:
 4366              	.LBI2241:
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  result_type __stddev = result_type(1))
 4367              		.loc 19 2014 7 view .LVU1044
 4368              	.LBB2242:
 4369              	.LBI2242:
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 4370              		.loc 19 1978 2 view .LVU1045
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_mean(__mean), _M_stddev(__stddev)
 4371              		.loc 19 1978 2 is_stmt 0 view .LVU1046
 4372              	.LBE2242:
 4373              	.LBE2241:
 4374              	.LBE2244:
 4375              	.LBE2249:
 110:TapeLooper.cpp **** 
 4376              		.loc 10 110 1 view .LVU1047
 4377 018e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4378              	.L54:
 4379 0192 00BF     		.align	2
 4380              	.L53:
 4381 0194 00000000 		.word	.LANCHOR5
 4382 0198 00000000 		.word	.LANCHOR7
 4383 019c 00102700 		.word	2560000
 4384 01a0 00000000 		.word	0
 4385 01a4 00000000 		.word	.LANCHOR8
 4386 01a8 00000000 		.word	.LANCHOR4
 4387 01ac 00000000 		.word	.LANCHOR6
 4388              		.cfi_endproc
 4389              	.LFE4718:
 4391              		.section	.text._Z21saturate_and_compressf,"ax",%progbits
 4392              		.align	1
 4393              		.p2align 2,,3
 4394              		.global	_Z21saturate_and_compressf
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 220


 4395              		.syntax unified
 4396              		.thumb
 4397              		.thumb_func
 4398              		.fpu fpv5-d16
 4400              	_Z21saturate_and_compressf:
 4401              	.LVL139:
 4402              	.LFB4719:
 117:TapeLooper.cpp ****     float saturation = 30 * ((1 - quality) * (1.f - 0.1) + 0.1);
 4403              		.loc 10 117 1 is_stmt 1 view -0
 4404              		.cfi_startproc
 4405              		@ args = 0, pretend = 0, frame = 0
 4406              		@ frame_needed = 0, uses_anonymous_args = 0
 4407              		@ link register save eliminated.
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4408              		.loc 10 118 5 view .LVU1049
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4409              		.loc 10 118 33 is_stmt 0 view .LVU1050
 4410 0000 114B     		ldr	r3, .L56+16
 4411 0002 B7EE006A 		vmov.f32	s12, #1.0e+0
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4412              		.loc 10 118 27 view .LVU1051
 4413 0006 B3EE0E5B 		vmov.f64	d5, #3.0e+1
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4414              		.loc 10 118 33 view .LVU1052
 4415 000a D3ED006A 		vldr.32	s13, [r3]
 4416 000e 36EE666A 		vsub.f32	s12, s12, s13
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4417              		.loc 10 118 58 view .LVU1053
 4418 0012 9FED094B 		vldr.64	d4, .L56
 4419 0016 9FED0A7B 		vldr.64	d7, .L56+8
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4420              		.loc 10 118 33 view .LVU1054
 4421 001a B7EEC66A 		vcvt.f64.f32	d6, s12
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4422              		.loc 10 118 58 view .LVU1055
 4423 001e A6EE047B 		vfma.f64	d7, d6, d4
 4424              	.LVL140:
 119:TapeLooper.cpp ****     return saturated;
 4425              		.loc 10 119 5 is_stmt 1 view .LVU1056
 4426              	.LBB2250:
 4427              	.LBI2250:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 4428              		.loc 12 125 3 view .LVU1057
 4429              	.LBB2251:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4430              		.loc 12 126 5 view .LVU1058
 4431              	.LBE2251:
 4432              	.LBE2250:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4433              		.loc 10 118 27 is_stmt 0 view .LVU1059
 4434 0022 27EE057B 		vmul.f64	d7, d7, d5
 4435              	.LVL141:
 118:TapeLooper.cpp ****     float saturated  = atan(saturation * value);
 4436              		.loc 10 118 11 view .LVU1060
 4437 0026 B7EEC77B 		vcvt.f32.f64	s14, d7
 4438              	.LVL142:
 4439              	.LBB2253:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 221


 4440              	.LBB2252:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4441              		.loc 12 126 27 view .LVU1061
 4442 002a 27EE000A 		vmul.f32	s0, s14, s0
 4443              	.LVL143:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4444              		.loc 12 126 27 view .LVU1062
 4445 002e FFF7FEBF 		b	atanf
 4446              	.LVL144:
 4447              	.L57:
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4448              		.loc 12 126 27 view .LVU1063
 4449 0032 00BFAFF3 		.align	3
 4449      0080
 4450              	.L56:
 4451 0038 CDCCCCCC 		.word	-858993459
 4452 003c CCCCEC3F 		.word	1072483532
 4453 0040 9A999999 		.word	-1717986918
 4454 0044 9999B93F 		.word	1069128089
 4455 0048 00000000 		.word	.LANCHOR3
 4456              	.LBE2252:
 4457              	.LBE2253:
 4458              		.cfi_endproc
 4459              	.LFE4719:
 4461              		.section	.text._Z16peripherals_Initv,"ax",%progbits
 4462              		.align	1
 4463              		.p2align 2,,3
 4464              		.global	_Z16peripherals_Initv
 4465              		.syntax unified
 4466              		.thumb
 4467              		.thumb_func
 4468              		.fpu fpv5-d16
 4470              	_Z16peripherals_Initv:
 4471              	.LFB4720:
 124:TapeLooper.cpp ****     //INS
 4472              		.loc 10 124 1 is_stmt 1 view -0
 4473              		.cfi_startproc
 4474              		@ args = 0, pretend = 0, frame = 72
 4475              		@ frame_needed = 0, uses_anonymous_args = 0
 126:TapeLooper.cpp ****                     0.0f,
 4476              		.loc 10 126 5 view .LVU1065
 4477              	.LVL145:
 4478              	.LBB2254:
 4479              	.LBI2254:
 4480              		.file 21 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 222


  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 223


  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 224


 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 225


 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 226


 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libDaisy//src/daisy_core.h **** 
 274:../../libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy//src/daisy_core.h ****     */
 277:../../libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libDaisy//src/daisy_core.h **** 
 279:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy//src/daisy_core.h ****     {
 282:../../libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy//src/daisy_core.h ****     }
 284:../../libDaisy//src/daisy_core.h **** 
 285:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy//src/daisy_core.h **** 
 288:../../libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy//src/daisy_core.h ****      * 
 291:../../libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy//src/daisy_core.h ****      *  type.
 293:../../libDaisy//src/daisy_core.h ****      */
 294:../../libDaisy//src/daisy_core.h ****     constexpr operator dsy_gpio_pin() const
 4481              		.loc 21 294 15 view .LVU1066
 4482              	.LBB2255:
 295:../../libDaisy//src/daisy_core.h ****     {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 227


 296:../../libDaisy//src/daisy_core.h ****         return dsy_gpio_pin{.port = static_cast<dsy_gpio_port>(port),
 4483              		.loc 21 296 9 view .LVU1067
 297:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4484              		.loc 21 297 37 is_stmt 0 view .LVU1068
 4485 0000 984A     		ldr	r2, .L60
 4486              	.LBE2255:
 4487              	.LBE2254:
 126:TapeLooper.cpp ****                     0.0f,
 4488              		.loc 10 126 20 view .LVU1069
 4489 0002 0123     		movs	r3, #1
 4490 0004 9FED980A 		vldr.32	s0, .L60+4
 4491 0008 9848     		ldr	r0, .L60+8
 124:TapeLooper.cpp ****     //INS
 4492              		.loc 10 124 1 view .LVU1070
 4493 000a 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4494              		.cfi_def_cfa_offset 36
 4495              		.cfi_offset 4, -36
 4496              		.cfi_offset 5, -32
 4497              		.cfi_offset 6, -28
 4498              		.cfi_offset 7, -24
 4499              		.cfi_offset 8, -20
 4500              		.cfi_offset 9, -16
 4501              		.cfi_offset 10, -12
 4502              		.cfi_offset 11, -8
 4503              		.cfi_offset 14, -4
 4504 000e 97B0     		sub	sp, sp, #92
 4505              		.cfi_def_cfa_offset 128
 4506              	.LBB2257:
 4507              	.LBB2256:
 4508              		.loc 21 297 37 view .LVU1071
 4509 0010 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4510 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4511              	.LBE2256:
 4512              	.LBE2257:
 126:TapeLooper.cpp ****                     0.0f,
 4513              		.loc 10 126 20 view .LVU1072
 4514 0014 0024     		movs	r4, #0
 4515 0016 8DF81910 		strb	r1, [sp, #25]
 4516              	.LVL146:
 146:TapeLooper.cpp ****     record_button.Init(rcd_pin, 0.f, Switch::Type::TYPE_TOGGLE, Switch::Polarity::POLARITY_NORMAL, 
 4517              		.loc 10 146 27 view .LVU1073
 4518 001a 0125     		movs	r5, #1
 4519 001c 8DF81820 		strb	r2, [sp, #24]
 126:TapeLooper.cpp ****                     0.0f,
 4520              		.loc 10 126 20 view .LVU1074
 4521 0020 1A46     		mov	r2, r3
 4522 0022 0699     		ldr	r1, [sp, #24]
 161:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
 4523              		.loc 10 161 28 view .LVU1075
 4524 0024 4FF00208 		mov	r8, #2
 126:TapeLooper.cpp ****                     0.0f,
 4525              		.loc 10 126 20 view .LVU1076
 4526 0028 0094     		str	r4, [sp]
 4527 002a 8DED050A 		vstr.32	s0, [sp, #20]	@ int
 4528 002e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 4529              	.LVL147:
 131:TapeLooper.cpp ****                     0.0f,
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 228


 4530              		.loc 10 131 5 is_stmt 1 view .LVU1077
 4531              	.LBB2258:
 4532              	.LBI2258:
 294:../../libDaisy//src/daisy_core.h ****     {
 4533              		.loc 21 294 15 view .LVU1078
 4534              	.LBB2259:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4535              		.loc 21 296 9 view .LVU1079
 4536              		.loc 21 297 37 is_stmt 0 view .LVU1080
 4537 0032 8F4B     		ldr	r3, .L60+12
 4538              	.LBE2259:
 4539              	.LBE2258:
 131:TapeLooper.cpp ****                     0.0f,
 4540              		.loc 10 131 20 view .LVU1081
 4541 0034 9DED050A 		vldr.32	s0, [sp, #20]	@ int
 4542              	.LBB2261:
 4543              	.LBB2260:
 4544              		.loc 21 297 37 view .LVU1082
 4545 0038 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4546 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4547 003c 8DF81D20 		strb	r2, [sp, #29]
 4548              	.LVL148:
 4549              		.loc 21 297 37 view .LVU1083
 4550 0040 8DF81C30 		strb	r3, [sp, #28]
 4551              	.LBE2260:
 4552              	.LBE2261:
 131:TapeLooper.cpp ****                     0.0f,
 4553              		.loc 10 131 20 view .LVU1084
 4554 0044 0123     		movs	r3, #1
 4555 0046 0799     		ldr	r1, [sp, #28]
 4556 0048 1A46     		mov	r2, r3
 4557 004a 0094     		str	r4, [sp]
 4558 004c 8948     		ldr	r0, .L60+16
 4559 004e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 4560              	.LVL149:
 136:TapeLooper.cpp ****                     0.0f,
 4561              		.loc 10 136 5 is_stmt 1 view .LVU1085
 4562              	.LBB2262:
 4563              	.LBI2262:
 294:../../libDaisy//src/daisy_core.h ****     {
 4564              		.loc 21 294 15 view .LVU1086
 4565              	.LBB2263:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4566              		.loc 21 296 9 view .LVU1087
 4567              		.loc 21 297 37 is_stmt 0 view .LVU1088
 4568 0052 894B     		ldr	r3, .L60+20
 4569              	.LBE2263:
 4570              	.LBE2262:
 136:TapeLooper.cpp ****                     0.0f,
 4571              		.loc 10 136 20 view .LVU1089
 4572 0054 9DED050A 		vldr.32	s0, [sp, #20]	@ int
 4573              	.LBB2265:
 4574              	.LBB2264:
 4575              		.loc 21 297 37 view .LVU1090
 4576 0058 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4577 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4578 005c 8DF82120 		strb	r2, [sp, #33]
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 229


 4579              	.LVL150:
 4580              		.loc 21 297 37 view .LVU1091
 4581 0060 8DF82030 		strb	r3, [sp, #32]
 4582              	.LBE2264:
 4583              	.LBE2265:
 136:TapeLooper.cpp ****                     0.0f,
 4584              		.loc 10 136 20 view .LVU1092
 4585 0064 0123     		movs	r3, #1
 4586 0066 0899     		ldr	r1, [sp, #32]
 4587 0068 1A46     		mov	r2, r3
 4588 006a 0094     		str	r4, [sp]
 4589 006c 8348     		ldr	r0, .L60+24
 4590 006e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 4591              	.LVL151:
 141:TapeLooper.cpp ****                     0.0f,
 4592              		.loc 10 141 5 is_stmt 1 view .LVU1093
 4593              	.LBB2266:
 4594              	.LBI2266:
 294:../../libDaisy//src/daisy_core.h ****     {
 4595              		.loc 21 294 15 view .LVU1094
 4596              	.LBB2267:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4597              		.loc 21 296 9 view .LVU1095
 4598              		.loc 21 297 37 is_stmt 0 view .LVU1096
 4599 0072 834B     		ldr	r3, .L60+28
 4600              	.LBE2267:
 4601              	.LBE2266:
 141:TapeLooper.cpp ****                     0.0f,
 4602              		.loc 10 141 20 view .LVU1097
 4603 0074 9DED050A 		vldr.32	s0, [sp, #20]	@ int
 4604              	.LBB2269:
 4605              	.LBB2268:
 4606              		.loc 21 297 37 view .LVU1098
 4607 0078 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4608 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4609 007c 8DF82520 		strb	r2, [sp, #37]
 4610              	.LVL152:
 4611              		.loc 21 297 37 view .LVU1099
 4612 0080 8DF82430 		strb	r3, [sp, #36]
 4613              	.LBE2268:
 4614              	.LBE2269:
 141:TapeLooper.cpp ****                     0.0f,
 4615              		.loc 10 141 20 view .LVU1100
 4616 0084 0123     		movs	r3, #1
 4617 0086 0999     		ldr	r1, [sp, #36]
 4618 0088 1A46     		mov	r2, r3
 4619 008a 0094     		str	r4, [sp]
 4620 008c 7D48     		ldr	r0, .L60+32
 4621 008e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 4622              	.LVL153:
 146:TapeLooper.cpp ****     record_button.Init(rcd_pin, 0.f, Switch::Type::TYPE_TOGGLE, Switch::Polarity::POLARITY_NORMAL, 
 4623              		.loc 10 146 5 is_stmt 1 view .LVU1101
 4624              	.LBB2270:
 4625              	.LBI2270:
 294:../../libDaisy//src/daisy_core.h ****     {
 4626              		.loc 21 294 15 view .LVU1102
 4627              	.LBB2271:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 230


 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4628              		.loc 21 296 9 view .LVU1103
 4629              		.loc 21 297 37 is_stmt 0 view .LVU1104
 4630 0092 7D4B     		ldr	r3, .L60+36
 4631              	.LBE2271:
 4632              	.LBE2270:
 146:TapeLooper.cpp ****     record_button.Init(rcd_pin, 0.f, Switch::Type::TYPE_TOGGLE, Switch::Polarity::POLARITY_NORMAL, 
 4633              		.loc 10 146 27 view .LVU1105
 4634 0094 9DED050A 		vldr.32	s0, [sp, #20]	@ int
 4635              	.LBB2273:
 4636              	.LBB2272:
 4637              		.loc 21 297 37 view .LVU1106
 4638 0098 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4639 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4640 009c 8DF82920 		strb	r2, [sp, #41]
 4641              	.LVL154:
 4642              		.loc 21 297 37 view .LVU1107
 4643              	.LBE2272:
 4644              	.LBE2273:
 146:TapeLooper.cpp ****     record_button.Init(rcd_pin, 0.f, Switch::Type::TYPE_TOGGLE, Switch::Polarity::POLARITY_NORMAL, 
 4645              		.loc 10 146 27 view .LVU1108
 4646 00a0 2246     		mov	r2, r4
 4647 00a2 8DF82830 		strb	r3, [sp, #40]
 4648 00a6 2346     		mov	r3, r4
 4649 00a8 0A99     		ldr	r1, [sp, #40]
 4650 00aa 0095     		str	r5, [sp]
 4651 00ac 7748     		ldr	r0, .L60+40
 4652 00ae FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 4653              	.LVL155:
 147:TapeLooper.cpp **** 
 4654              		.loc 10 147 5 is_stmt 1 view .LVU1109
 4655              	.LBB2274:
 4656              	.LBI2274:
 294:../../libDaisy//src/daisy_core.h ****     {
 4657              		.loc 21 294 15 view .LVU1110
 4658              	.LBB2275:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4659              		.loc 21 296 9 view .LVU1111
 4660              		.loc 21 297 37 is_stmt 0 view .LVU1112
 4661 00b2 7749     		ldr	r1, .L60+44
 4662              	.LBE2275:
 4663              	.LBE2274:
 147:TapeLooper.cpp **** 
 4664              		.loc 10 147 23 view .LVU1113
 4665 00b4 0095     		str	r5, [sp]
 4666 00b6 2346     		mov	r3, r4
 4667              	.LBB2277:
 4668              	.LBB2276:
 4669              		.loc 21 297 37 view .LVU1114
 4670 00b8 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 4671              	.LBE2276:
 4672              	.LBE2277:
 147:TapeLooper.cpp **** 
 4673              		.loc 10 147 23 view .LVU1115
 4674 00ba 2246     		mov	r2, r4
 4675 00bc 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4676 00be 8DF82D00 		strb	r0, [sp, #45]
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 231


 4677              	.LVL156:
 147:TapeLooper.cpp **** 
 4678              		.loc 10 147 23 view .LVU1116
 4679 00c2 8DF82C10 		strb	r1, [sp, #44]
 4680 00c6 9DED050A 		vldr.32	s0, [sp, #20]	@ int
 4681 00ca 0B99     		ldr	r1, [sp, #44]
 4682 00cc 7148     		ldr	r0, .L60+48
 4683 00ce FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 4684              	.LVL157:
 150:TapeLooper.cpp ****     track2_LED.Init(trk2LED_pin, false);
 4685              		.loc 10 150 5 is_stmt 1 view .LVU1117
 4686              	.LBB2278:
 4687              	.LBI2278:
 294:../../libDaisy//src/daisy_core.h ****     {
 4688              		.loc 21 294 15 view .LVU1118
 4689              	.LBB2279:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4690              		.loc 21 296 9 view .LVU1119
 4691              		.loc 21 297 37 is_stmt 0 view .LVU1120
 4692 00d2 714B     		ldr	r3, .L60+52
 4693              	.LBE2279:
 4694              	.LBE2278:
 150:TapeLooper.cpp ****     track2_LED.Init(trk2LED_pin, false);
 4695              		.loc 10 150 20 view .LVU1121
 4696 00d4 DFF808B2 		ldr	fp, .L60+124
 4697              	.LBB2281:
 4698              	.LBB2280:
 4699              		.loc 21 297 37 view .LVU1122
 4700 00d8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4701 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4702              	.LBE2280:
 4703              	.LBE2281:
 150:TapeLooper.cpp ****     track2_LED.Init(trk2LED_pin, false);
 4704              		.loc 10 150 20 view .LVU1123
 4705 00dc 5846     		mov	r0, fp
 4706 00de 8DF83120 		strb	r2, [sp, #49]
 4707              	.LVL158:
 150:TapeLooper.cpp ****     track2_LED.Init(trk2LED_pin, false);
 4708              		.loc 10 150 20 view .LVU1124
 4709 00e2 2246     		mov	r2, r4
 4710 00e4 8DF83030 		strb	r3, [sp, #48]
 4711 00e8 0C99     		ldr	r1, [sp, #48]
 4712 00ea 9FED6C0A 		vldr.32	s0, .L60+56
 4713 00ee FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 4714              	.LVL159:
 151:TapeLooper.cpp ****     track3_LED.Init(trk3LED_pin, false);
 4715              		.loc 10 151 5 is_stmt 1 view .LVU1125
 4716              	.LBB2282:
 4717              	.LBI2282:
 294:../../libDaisy//src/daisy_core.h ****     {
 4718              		.loc 21 294 15 view .LVU1126
 4719              	.LBB2283:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4720              		.loc 21 296 9 view .LVU1127
 4721              		.loc 21 297 37 is_stmt 0 view .LVU1128
 4722 00f2 6B4B     		ldr	r3, .L60+60
 4723              	.LBE2283:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 232


 4724              	.LBE2282:
 151:TapeLooper.cpp ****     track3_LED.Init(trk3LED_pin, false);
 4725              		.loc 10 151 20 view .LVU1129
 4726 00f4 6B4D     		ldr	r5, .L60+64
 4727              	.LBB2285:
 4728              	.LBB2284:
 4729              		.loc 21 297 37 view .LVU1130
 4730 00f6 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4731 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4732              	.LBE2284:
 4733              	.LBE2285:
 151:TapeLooper.cpp ****     track3_LED.Init(trk3LED_pin, false);
 4734              		.loc 10 151 20 view .LVU1131
 4735 00fa 2846     		mov	r0, r5
 4736 00fc 8DF83520 		strb	r2, [sp, #53]
 4737              	.LVL160:
 151:TapeLooper.cpp ****     track3_LED.Init(trk3LED_pin, false);
 4738              		.loc 10 151 20 view .LVU1132
 4739 0100 2246     		mov	r2, r4
 4740 0102 8DF83430 		strb	r3, [sp, #52]
 155:TapeLooper.cpp ****     LEDs[2] = track3_LED;
 4741              		.loc 10 155 13 view .LVU1133
 4742 0106 AA46     		mov	r10, r5
 151:TapeLooper.cpp ****     track3_LED.Init(trk3LED_pin, false);
 4743              		.loc 10 151 20 view .LVU1134
 4744 0108 9FED670A 		vldr.32	s0, .L60+68
 4745 010c 0D99     		ldr	r1, [sp, #52]
 4746 010e 8DED050A 		vstr.32	s0, [sp, #20]	@ int
 4747 0112 FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 4748              	.LVL161:
 152:TapeLooper.cpp ****     track4_LED.Init(trk4LED_pin, false);
 4749              		.loc 10 152 5 is_stmt 1 view .LVU1135
 4750              	.LBB2286:
 4751              	.LBI2286:
 294:../../libDaisy//src/daisy_core.h ****     {
 4752              		.loc 21 294 15 view .LVU1136
 4753              	.LBB2287:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4754              		.loc 21 296 9 view .LVU1137
 4755              		.loc 21 297 37 is_stmt 0 view .LVU1138
 4756 0116 654B     		ldr	r3, .L60+72
 4757              	.LBE2287:
 4758              	.LBE2286:
 152:TapeLooper.cpp ****     track4_LED.Init(trk4LED_pin, false);
 4759              		.loc 10 152 20 view .LVU1139
 4760 0118 654E     		ldr	r6, .L60+76
 4761              	.LBB2289:
 4762              	.LBB2288:
 4763              		.loc 21 297 37 view .LVU1140
 4764 011a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4765 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4766              	.LBE2288:
 4767              	.LBE2289:
 152:TapeLooper.cpp ****     track4_LED.Init(trk4LED_pin, false);
 4768              		.loc 10 152 20 view .LVU1141
 4769 011e 3046     		mov	r0, r6
 4770 0120 8DF83920 		strb	r2, [sp, #57]
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 233


 4771              	.LVL162:
 152:TapeLooper.cpp ****     track4_LED.Init(trk4LED_pin, false);
 4772              		.loc 10 152 20 view .LVU1142
 4773 0124 2246     		mov	r2, r4
 4774 0126 8DF83830 		strb	r3, [sp, #56]
 4775 012a 9DED050A 		vldr.32	s0, [sp, #20]	@ int
 4776 012e 0E99     		ldr	r1, [sp, #56]
 4777 0130 FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 4778              	.LVL163:
 153:TapeLooper.cpp ****     LEDs[0] = track1_LED;
 4779              		.loc 10 153 5 is_stmt 1 view .LVU1143
 4780              	.LBB2290:
 4781              	.LBI2290:
 294:../../libDaisy//src/daisy_core.h ****     {
 4782              		.loc 21 294 15 view .LVU1144
 4783              	.LBB2291:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4784              		.loc 21 296 9 view .LVU1145
 4785              		.loc 21 297 37 is_stmt 0 view .LVU1146
 4786 0134 5F4B     		ldr	r3, .L60+80
 4787              	.LBE2291:
 4788              	.LBE2290:
 153:TapeLooper.cpp ****     LEDs[0] = track1_LED;
 4789              		.loc 10 153 20 view .LVU1147
 4790 0136 2246     		mov	r2, r4
 4791 0138 5F4C     		ldr	r4, .L60+84
 4792              	.LBB2293:
 4793              	.LBB2292:
 4794              		.loc 21 297 37 view .LVU1148
 4795 013a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 4796 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4797              	.LBE2292:
 4798              	.LBE2293:
 153:TapeLooper.cpp ****     LEDs[0] = track1_LED;
 4799              		.loc 10 153 20 view .LVU1149
 4800 013e 2046     		mov	r0, r4
 4801 0140 8DF83D10 		strb	r1, [sp, #61]
 4802              	.LVL164:
 157:TapeLooper.cpp **** 
 4803              		.loc 10 157 13 view .LVU1150
 4804 0144 A146     		mov	r9, r4
 4805 0146 8DF83C30 		strb	r3, [sp, #60]
 153:TapeLooper.cpp ****     LEDs[0] = track1_LED;
 4806              		.loc 10 153 20 view .LVU1151
 4807 014a 9DED050A 		vldr.32	s0, [sp, #20]	@ int
 4808 014e 0F99     		ldr	r1, [sp, #60]
 4809 0150 FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 4810              	.LVL165:
 154:TapeLooper.cpp ****     LEDs[1] = track2_LED;
 4811              		.loc 10 154 5 is_stmt 1 view .LVU1152
 154:TapeLooper.cpp ****     LEDs[1] = track2_LED;
 4812              		.loc 10 154 13 is_stmt 0 view .LVU1153
 4813 0154 594B     		ldr	r3, .L60+88
 161:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
 4814              		.loc 10 161 28 view .LVU1154
 4815 0156 5A4F     		ldr	r7, .L60+92
 154:TapeLooper.cpp ****     LEDs[1] = track2_LED;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 234


 4816              		.loc 10 154 13 view .LVU1155
 4817 0158 9C46     		mov	ip, r3
 155:TapeLooper.cpp ****     LEDs[2] = track3_LED;
 4818              		.loc 10 155 13 view .LVU1156
 4819 015a 03F11C05 		add	r5, r3, #28
 156:TapeLooper.cpp ****     LEDs[3] = track4_LED;
 4820              		.loc 10 156 13 view .LVU1157
 4821 015e 03F13804 		add	r4, r3, #56
 157:TapeLooper.cpp **** 
 4822              		.loc 10 157 13 view .LVU1158
 4823 0162 03F1540E 		add	lr, r3, #84
 154:TapeLooper.cpp ****     LEDs[1] = track2_LED;
 4824              		.loc 10 154 13 view .LVU1159
 4825 0166 BBE80F00 		ldmia	fp!, {r0, r1, r2, r3}
 4826 016a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4827 016e 9BE80700 		ldm	fp, {r0, r1, r2}
 4828 0172 ACE80300 		stmia	ip!, {r0, r1}
 4829 0176 2CF8022B 		strh	r2, [ip], #2	@ movhi
 4830 017a 120C     		lsrs	r2, r2, #16
 4831 017c 8CF80020 		strb	r2, [ip]
 155:TapeLooper.cpp ****     LEDs[2] = track3_LED;
 4832              		.loc 10 155 5 is_stmt 1 view .LVU1160
 155:TapeLooper.cpp ****     LEDs[2] = track3_LED;
 4833              		.loc 10 155 13 is_stmt 0 view .LVU1161
 4834 0180 BAE80F00 		ldmia	r10!, {r0, r1, r2, r3}
 4835 0184 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4836 0186 9AE80700 		ldm	r10, {r0, r1, r2}
 4837 018a 03C5     		stmia	r5!, {r0, r1}
 4838 018c 25F8022B 		strh	r2, [r5], #2	@ movhi
 4839 0190 120C     		lsrs	r2, r2, #16
 4840 0192 2A70     		strb	r2, [r5]
 156:TapeLooper.cpp ****     LEDs[3] = track4_LED;
 4841              		.loc 10 156 5 is_stmt 1 view .LVU1162
 156:TapeLooper.cpp ****     LEDs[3] = track4_LED;
 4842              		.loc 10 156 13 is_stmt 0 view .LVU1163
 4843 0194 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4844 0196 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4845              	.LBB2294:
 4846              	.LBB2295:
 4847              		.loc 21 297 37 view .LVU1164
 4848 0198 4A4A     		ldr	r2, .L60+96
 4849 019a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 4850 019c 8DF84130 		strb	r3, [sp, #65]
 4851 01a0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4852              	.LBE2295:
 4853              	.LBE2294:
 156:TapeLooper.cpp ****     LEDs[3] = track4_LED;
 4854              		.loc 10 156 13 view .LVU1165
 4855 01a2 96E80700 		ldm	r6, {r0, r1, r2}
 4856 01a6 03C4     		stmia	r4!, {r0, r1}
 4857 01a8 24F8022B 		strh	r2, [r4], #2	@ movhi
 4858 01ac 120C     		lsrs	r2, r2, #16
 4859 01ae 8DF84030 		strb	r3, [sp, #64]
 4860 01b2 2270     		strb	r2, [r4]
 157:TapeLooper.cpp **** 
 4861              		.loc 10 157 5 is_stmt 1 view .LVU1166
 157:TapeLooper.cpp **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 235


 4862              		.loc 10 157 13 is_stmt 0 view .LVU1167
 4863 01b4 B9E80F00 		ldmia	r9!, {r0, r1, r2, r3}
 4864 01b8 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 4865 01bc 99E80700 		ldm	r9, {r0, r1, r2}
 4866 01c0 AEE80300 		stmia	lr!, {r0, r1}
 4867 01c4 2EF8022B 		strh	r2, [lr], #2	@ movhi
 4868 01c8 120C     		lsrs	r2, r2, #16
 161:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
 4869              		.loc 10 161 28 view .LVU1168
 4870 01ca 3846     		mov	r0, r7
 157:TapeLooper.cpp **** 
 4871              		.loc 10 157 13 view .LVU1169
 4872 01cc 8EF80020 		strb	r2, [lr]
 161:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
 4873              		.loc 10 161 5 is_stmt 1 view .LVU1170
 4874              	.LVL166:
 4875              	.LBB2297:
 4876              	.LBI2294:
 294:../../libDaisy//src/daisy_core.h ****     {
 4877              		.loc 21 294 15 view .LVU1171
 4878              	.LBB2296:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4879              		.loc 21 296 9 view .LVU1172
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4880              		.loc 21 296 9 is_stmt 0 view .LVU1173
 4881              	.LBE2296:
 4882              	.LBE2297:
 4883              	.LBB2298:
 4884              	.LBI2298:
 294:../../libDaisy//src/daisy_core.h ****     {
 4885              		.loc 21 294 15 is_stmt 1 view .LVU1174
 4886              	.LBB2299:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4887              		.loc 21 296 9 view .LVU1175
 4888              		.loc 21 297 37 is_stmt 0 view .LVU1176
 4889 01d0 3D4A     		ldr	r2, .L60+100
 4890 01d2 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 4891              	.LBE2299:
 4892              	.LBE2298:
 161:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
 4893              		.loc 10 161 28 view .LVU1177
 4894 01d4 1099     		ldr	r1, [sp, #64]
 4895 01d6 8DF84530 		strb	r3, [sp, #69]
 4896              	.LVL167:
 4897              	.LBB2300:
 4898              	.LBI2300:
 294:../../libDaisy//src/daisy_core.h ****     {
 4899              		.loc 21 294 15 is_stmt 1 view .LVU1178
 4900              	.LBB2301:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4901              		.loc 21 296 9 view .LVU1179
 4902 01da 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4903              		.loc 21 297 37 is_stmt 0 view .LVU1180
 4904 01dc 3B4A     		ldr	r2, .L60+104
 4905              	.LBE2301:
 4906              	.LBE2300:
 161:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 236


 4907              		.loc 10 161 28 view .LVU1181
 4908 01de CDF80880 		str	r8, [sp, #8]
 4909 01e2 8DF84430 		strb	r3, [sp, #68]
 4910              	.LBB2303:
 4911              	.LBB2302:
 4912              		.loc 21 297 37 view .LVU1182
 4913 01e6 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 4914 01e8 8DF84930 		strb	r3, [sp, #73]
 4915              	.LVL168:
 4916              		.loc 21 297 37 view .LVU1183
 4917              	.LBE2302:
 4918              	.LBE2303:
 4919              	.LBB2304:
 4920              	.LBI2304:
 294:../../libDaisy//src/daisy_core.h ****     {
 4921              		.loc 21 294 15 is_stmt 1 view .LVU1184
 4922              	.LBB2305:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4923              		.loc 21 296 9 view .LVU1185
 4924 01ec 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4925              		.loc 21 297 37 is_stmt 0 view .LVU1186
 4926 01ee 384A     		ldr	r2, .L60+108
 4927 01f0 8DF84830 		strb	r3, [sp, #72]
 4928 01f4 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 4929 01f6 8DF84D30 		strb	r3, [sp, #77]
 4930              	.LVL169:
 4931              		.loc 21 297 37 view .LVU1187
 4932 01fa 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4933 01fc 8DF84C30 		strb	r3, [sp, #76]
 4934              	.LBE2305:
 4935              	.LBE2304:
 161:TapeLooper.cpp ****     adc_config[QUALITY_POT].InitSingle(QUALITY_PIN);
 4936              		.loc 10 161 28 view .LVU1188
 4937 0200 BDF84830 		ldrh	r3, [sp, #72]
 4938 0204 BDF84C20 		ldrh	r2, [sp, #76]
 4939 0208 ADF80030 		strh	r3, [sp]	@ movhi
 4940 020c ADF80420 		strh	r2, [sp, #4]	@ movhi
 4941 0210 0822     		movs	r2, #8
 4942 0212 119B     		ldr	r3, [sp, #68]
 4943 0214 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_NS0_15ConversionSpeedE
 4944              	.LVL170:
 162:TapeLooper.cpp ****     adc_config[WARBLE_POT].InitSingle(WARBLE_PIN);
 4945              		.loc 10 162 5 is_stmt 1 view .LVU1189
 4946              	.LBB2306:
 4947              	.LBI2306:
 294:../../libDaisy//src/daisy_core.h ****     {
 4948              		.loc 21 294 15 view .LVU1190
 4949              	.LBB2307:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4950              		.loc 21 296 9 view .LVU1191
 4951              		.loc 21 297 37 is_stmt 0 view .LVU1192
 4952 0218 2E4B     		ldr	r3, .L60+112
 4953              	.LBE2307:
 4954              	.LBE2306:
 162:TapeLooper.cpp ****     adc_config[WARBLE_POT].InitSingle(WARBLE_PIN);
 4955              		.loc 10 162 39 view .LVU1193
 4956 021a 07F11200 		add	r0, r7, #18
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 237


 4957              	.LBB2309:
 4958              	.LBB2308:
 4959              		.loc 21 297 37 view .LVU1194
 4960 021e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4961 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4962 0222 8DF85120 		strb	r2, [sp, #81]
 4963              	.LVL171:
 4964              		.loc 21 297 37 view .LVU1195
 4965              	.LBE2308:
 4966              	.LBE2309:
 162:TapeLooper.cpp ****     adc_config[WARBLE_POT].InitSingle(WARBLE_PIN);
 4967              		.loc 10 162 39 view .LVU1196
 4968 0226 4246     		mov	r2, r8
 4969 0228 8DF85030 		strb	r3, [sp, #80]
 4970 022c 1499     		ldr	r1, [sp, #80]
 4971 022e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 4972              	.LVL172:
 163:TapeLooper.cpp **** 
 4973              		.loc 10 163 5 is_stmt 1 view .LVU1197
 4974              	.LBB2310:
 4975              	.LBI2310:
 294:../../libDaisy//src/daisy_core.h ****     {
 4976              		.loc 21 294 15 view .LVU1198
 4977              	.LBB2311:
 296:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 4978              		.loc 21 296 9 view .LVU1199
 4979              		.loc 21 297 37 is_stmt 0 view .LVU1200
 4980 0232 294B     		ldr	r3, .L60+116
 4981              	.LBE2311:
 4982              	.LBE2310:
 163:TapeLooper.cpp **** 
 4983              		.loc 10 163 38 view .LVU1201
 4984 0234 4246     		mov	r2, r8
 4985 0236 07F12400 		add	r0, r7, #36
 4986              	.LBB2313:
 4987              	.LBB2312:
 4988              		.loc 21 297 37 view .LVU1202
 4989 023a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 4990 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4991 023e 8DF85510 		strb	r1, [sp, #85]
 4992              	.LVL173:
 4993              		.loc 21 297 37 view .LVU1203
 4994 0242 8DF85430 		strb	r3, [sp, #84]
 4995              	.LBE2312:
 4996              	.LBE2313:
 163:TapeLooper.cpp **** 
 4997              		.loc 10 163 38 view .LVU1204
 4998 0246 1599     		ldr	r1, [sp, #84]
 4999 0248 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 5000              	.LVL174:
 165:TapeLooper.cpp ****     hw.adc.Start();
 5001              		.loc 10 165 5 is_stmt 1 view .LVU1205
 165:TapeLooper.cpp ****     hw.adc.Start();
 5002              		.loc 10 165 16 is_stmt 0 view .LVU1206
 5003 024c 0423     		movs	r3, #4
 5004 024e 0322     		movs	r2, #3
 5005 0250 3946     		mov	r1, r7
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 238


 5006 0252 2248     		ldr	r0, .L60+120
 5007 0254 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 5008              	.LVL175:
 166:TapeLooper.cpp **** }
 5009              		.loc 10 166 5 is_stmt 1 view .LVU1207
 166:TapeLooper.cpp **** }
 5010              		.loc 10 166 17 is_stmt 0 view .LVU1208
 5011 0258 2048     		ldr	r0, .L60+120
 167:TapeLooper.cpp **** 
 5012              		.loc 10 167 1 view .LVU1209
 5013 025a 17B0     		add	sp, sp, #92
 5014              		.cfi_def_cfa_offset 36
 5015              		@ sp needed
 5016 025c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5017              		.cfi_restore 14
 5018              		.cfi_restore 11
 5019              		.cfi_restore 10
 5020              		.cfi_restore 9
 5021              		.cfi_restore 8
 5022              		.cfi_restore 7
 5023              		.cfi_restore 6
 5024              		.cfi_restore 5
 5025              		.cfi_restore 4
 5026              		.cfi_def_cfa_offset 0
 166:TapeLooper.cpp **** }
 5027              		.loc 10 166 17 view .LVU1210
 5028 0260 FFF7FEBF 		b	_ZN5daisy9AdcHandle5StartEv
 5029              	.LVL176:
 5030              	.L61:
 5031              		.align	2
 5032              	.L60:
 5033 0264 00000000 		.word	.LANCHOR9
 5034 0268 00000000 		.word	0
 5035 026c 00000000 		.word	.LANCHOR10
 5036 0270 00000000 		.word	.LANCHOR11
 5037 0274 00000000 		.word	.LANCHOR12
 5038 0278 00000000 		.word	.LANCHOR13
 5039 027c 00000000 		.word	.LANCHOR14
 5040 0280 00000000 		.word	.LANCHOR15
 5041 0284 00000000 		.word	.LANCHOR16
 5042 0288 00000000 		.word	.LANCHOR17
 5043 028c 00000000 		.word	.LANCHOR18
 5044 0290 00000000 		.word	.LANCHOR19
 5045 0294 00000000 		.word	.LANCHOR1
 5046 0298 00000000 		.word	.LANCHOR20
 5047 029c 0000FA44 		.word	1157234688
 5048 02a0 00000000 		.word	.LANCHOR22
 5049 02a4 00000000 		.word	.LANCHOR23
 5050 02a8 00007A44 		.word	1148846080
 5051 02ac 00000000 		.word	.LANCHOR24
 5052 02b0 00000000 		.word	.LANCHOR25
 5053 02b4 00000000 		.word	.LANCHOR26
 5054 02b8 00000000 		.word	.LANCHOR27
 5055 02bc 00000000 		.word	.LANCHOR28
 5056 02c0 00000000 		.word	.LANCHOR33
 5057 02c4 00000000 		.word	.LANCHOR29
 5058 02c8 00000000 		.word	.LANCHOR30
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 239


 5059 02cc 00000000 		.word	.LANCHOR31
 5060 02d0 00000000 		.word	.LANCHOR32
 5061 02d4 00000000 		.word	.LANCHOR34
 5062 02d8 00000000 		.word	.LANCHOR35
 5063 02dc 18000000 		.word	.LANCHOR4+24
 5064 02e0 00000000 		.word	.LANCHOR21
 5065              		.cfi_endproc
 5066              	.LFE4720:
 5068              		.section	.text._Z5blinkii,"ax",%progbits
 5069              		.align	1
 5070              		.p2align 2,,3
 5071              		.global	_Z5blinkii
 5072              		.syntax unified
 5073              		.thumb
 5074              		.thumb_func
 5075              		.fpu fpv5-d16
 5077              	_Z5blinkii:
 5078              	.LVL177:
 5079              	.LFB4721:
 170:TapeLooper.cpp ****     while(nTimes + 1 > 0)
 5080              		.loc 10 170 1 is_stmt 1 view -0
 5081              		.cfi_startproc
 5082              		@ args = 0, pretend = 0, frame = 0
 5083              		@ frame_needed = 0, uses_anonymous_args = 0
 171:TapeLooper.cpp ****     {
 5084              		.loc 10 171 5 view .LVU1212
 171:TapeLooper.cpp ****     {
 5085              		.loc 10 171 22 view .LVU1213
 170:TapeLooper.cpp ****     while(nTimes + 1 > 0)
 5086              		.loc 10 170 1 is_stmt 0 view .LVU1214
 5087 0000 38B5     		push	{r3, r4, r5, lr}
 5088              		.cfi_def_cfa_offset 16
 5089              		.cfi_offset 3, -16
 5090              		.cfi_offset 4, -12
 5091              		.cfi_offset 5, -8
 5092              		.cfi_offset 14, -4
 171:TapeLooper.cpp ****     {
 5093              		.loc 10 171 22 view .LVU1215
 5094 0002 0D1E     		subs	r5, r1, #0
 5095 0004 1FDB     		blt	.L62
 173:TapeLooper.cpp ****         LEDs[led].Update();
 5096              		.loc 10 173 22 view .LVU1216
 5097 0006 104C     		ldr	r4, .L67
 5098 0008 C0EBC000 		rsb	r0, r0, r0, lsl #3
 5099              	.LVL178:
 173:TapeLooper.cpp ****         LEDs[led].Update();
 5100              		.loc 10 173 22 view .LVU1217
 5101 000c 04EB8004 		add	r4, r4, r0, lsl #2
 5102              	.LVL179:
 5103              	.L64:
 173:TapeLooper.cpp ****         LEDs[led].Update();
 5104              		.loc 10 173 9 is_stmt 1 view .LVU1218
 173:TapeLooper.cpp ****         LEDs[led].Update();
 5105              		.loc 10 173 22 is_stmt 0 view .LVU1219
 5106 0010 9FED0E0A 		vldr.32	s0, .L67+4
 5107 0014 2046     		mov	r0, r4
 5108 0016 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 240


 5109              	.LVL180:
 174:TapeLooper.cpp ****         hw.DelayMs(100);
 5110              		.loc 10 174 9 is_stmt 1 view .LVU1220
 174:TapeLooper.cpp ****         hw.DelayMs(100);
 5111              		.loc 10 174 25 is_stmt 0 view .LVU1221
 5112 001a 2046     		mov	r0, r4
 5113 001c FFF7FEFF 		bl	_ZN5daisy3Led6UpdateEv
 5114              	.LVL181:
 175:TapeLooper.cpp ****         LEDs[led].Set(1.f);
 5115              		.loc 10 175 9 is_stmt 1 view .LVU1222
 175:TapeLooper.cpp ****         LEDs[led].Set(1.f);
 5116              		.loc 10 175 19 is_stmt 0 view .LVU1223
 5117 0020 6421     		movs	r1, #100
 5118 0022 0B48     		ldr	r0, .L67+8
 179:TapeLooper.cpp ****     }
 5119              		.loc 10 179 15 view .LVU1224
 5120 0024 013D     		subs	r5, r5, #1
 5121              	.LVL182:
 175:TapeLooper.cpp ****         LEDs[led].Set(1.f);
 5122              		.loc 10 175 19 view .LVU1225
 5123 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed7DelayMsEj
 5124              	.LVL183:
 176:TapeLooper.cpp ****         LEDs[led].Update();
 5125              		.loc 10 176 9 is_stmt 1 view .LVU1226
 176:TapeLooper.cpp ****         LEDs[led].Update();
 5126              		.loc 10 176 22 is_stmt 0 view .LVU1227
 5127 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 5128 002e 2046     		mov	r0, r4
 5129 0030 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 5130              	.LVL184:
 177:TapeLooper.cpp ****         hw.DelayMs(100);
 5131              		.loc 10 177 9 is_stmt 1 view .LVU1228
 177:TapeLooper.cpp ****         hw.DelayMs(100);
 5132              		.loc 10 177 25 is_stmt 0 view .LVU1229
 5133 0034 2046     		mov	r0, r4
 5134 0036 FFF7FEFF 		bl	_ZN5daisy3Led6UpdateEv
 5135              	.LVL185:
 178:TapeLooper.cpp ****         nTimes--;
 5136              		.loc 10 178 9 is_stmt 1 view .LVU1230
 178:TapeLooper.cpp ****         nTimes--;
 5137              		.loc 10 178 19 is_stmt 0 view .LVU1231
 5138 003a 6421     		movs	r1, #100
 5139 003c 0448     		ldr	r0, .L67+8
 5140 003e FFF7FEFF 		bl	_ZN5daisy9DaisySeed7DelayMsEj
 5141              	.LVL186:
 179:TapeLooper.cpp ****     }
 5142              		.loc 10 179 9 is_stmt 1 view .LVU1232
 171:TapeLooper.cpp ****     {
 5143              		.loc 10 171 5 view .LVU1233
 171:TapeLooper.cpp ****     {
 5144              		.loc 10 171 22 view .LVU1234
 5145 0042 6B1C     		adds	r3, r5, #1
 5146 0044 E4D1     		bne	.L64
 5147              	.L62:
 181:TapeLooper.cpp **** 
 5148              		.loc 10 181 1 is_stmt 0 view .LVU1235
 5149 0046 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 241


 5150              	.LVL187:
 5151              	.L68:
 181:TapeLooper.cpp **** 
 5152              		.loc 10 181 1 view .LVU1236
 5153              		.align	2
 5154              	.L67:
 5155 0048 00000000 		.word	.LANCHOR28
 5156 004c 00000000 		.word	0
 5157 0050 00000000 		.word	.LANCHOR4
 5158              		.cfi_endproc
 5159              	.LFE4721:
 5161              		.section	.text._Z12update_trackif,"ax",%progbits
 5162              		.align	1
 5163              		.p2align 2,,3
 5164              		.global	_Z12update_trackif
 5165              		.syntax unified
 5166              		.thumb
 5167              		.thumb_func
 5168              		.fpu fpv5-d16
 5170              	_Z12update_trackif:
 5171              	.LVL188:
 5172              	.LFB4722:
 184:TapeLooper.cpp **** 	play_pause_button.Debounce();
 5173              		.loc 10 184 1 is_stmt 1 view -0
 5174              		.cfi_startproc
 5175              		@ args = 0, pretend = 0, frame = 0
 5176              		@ frame_needed = 0, uses_anonymous_args = 0
 185:TapeLooper.cpp ****     switch(tracks[t].get_Input_Mode())
 5177              		.loc 10 185 2 view .LVU1238
 184:TapeLooper.cpp **** 	play_pause_button.Debounce();
 5178              		.loc 10 184 1 is_stmt 0 view .LVU1239
 5179 0000 38B5     		push	{r3, r4, r5, lr}
 5180              		.cfi_def_cfa_offset 16
 5181              		.cfi_offset 3, -16
 5182              		.cfi_offset 4, -12
 5183              		.cfi_offset 5, -8
 5184              		.cfi_offset 14, -4
 185:TapeLooper.cpp ****     switch(tracks[t].get_Input_Mode())
 5185              		.loc 10 185 28 view .LVU1240
 5186 0002 144D     		ldr	r5, .L77
 184:TapeLooper.cpp **** 	play_pause_button.Debounce();
 5187              		.loc 10 184 1 view .LVU1241
 5188 0004 0446     		mov	r4, r0
 5189 0006 2DED028B 		vpush.64	{d8}
 5190              		.cfi_def_cfa_offset 24
 5191              		.cfi_offset 80, -24
 5192              		.cfi_offset 81, -20
 185:TapeLooper.cpp ****     switch(tracks[t].get_Input_Mode())
 5193              		.loc 10 185 28 view .LVU1242
 5194 000a 2846     		mov	r0, r5
 5195              	.LVL189:
 184:TapeLooper.cpp **** 	play_pause_button.Debounce();
 5196              		.loc 10 184 1 view .LVU1243
 5197 000c B0EE408A 		vmov.f32	s16, s0
 185:TapeLooper.cpp ****     switch(tracks[t].get_Input_Mode())
 5198              		.loc 10 185 28 view .LVU1244
 5199 0010 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 242


 5200              	.LVL190:
 186:TapeLooper.cpp ****     {
 5201              		.loc 10 186 5 is_stmt 1 view .LVU1245
 5202              	.LBB2328:
 5203              	.LBI2328:
 189:TapeLoop.h    **** 
 5204              		.loc 8 189 9 view .LVU1246
 5205              	.LBB2329:
 189:TapeLoop.h    **** 
 5206              		.loc 8 189 28 view .LVU1247
 189:TapeLoop.h    **** 
 5207              		.loc 8 189 35 is_stmt 0 view .LVU1248
 5208 0014 104B     		ldr	r3, .L77+4
 5209 0016 6C20     		movs	r0, #108
 5210 0018 00FB0430 		mla	r0, r0, r4, r3
 5211 001c 436A     		ldr	r3, [r0, #36]
 5212              	.LVL191:
 189:TapeLoop.h    **** 
 5213              		.loc 8 189 35 view .LVU1249
 5214              	.LBE2329:
 5215              	.LBE2328:
 186:TapeLooper.cpp ****     {
 5216              		.loc 10 186 5 view .LVU1250
 5217 001e 33B1     		cbz	r3, .L70
 5218 0020 012B     		cmp	r3, #1
 5219 0022 01D1     		bne	.L69
 192:TapeLooper.cpp ****     }
 5220              		.loc 10 192 4 is_stmt 1 view .LVU1251
 192:TapeLooper.cpp ****     }
 5221              		.loc 10 192 21 view .LVU1252
 5222              	.LVL192:
 5223              	.LBB2330:
 5224              	.LBI2330:
 212:TapeLoop.h    **** 
 213:TapeLoop.h    ****     void set_Fade(float input) { fade = input; }
 5225              		.loc 8 213 10 view .LVU1253
 5226              	.LBB2331:
 5227              		.loc 8 213 34 view .LVU1254
 5228              		.loc 8 213 39 is_stmt 0 view .LVU1255
 5229 0024 80ED108A 		vstr.32	s16, [r0, #64]
 5230              	.LVL193:
 5231              	.L69:
 5232              		.loc 8 213 39 view .LVU1256
 5233              	.LBE2331:
 5234              	.LBE2330:
 194:TapeLooper.cpp **** 
 5235              		.loc 10 194 1 view .LVU1257
 5236 0028 BDEC028B 		vldm	sp!, {d8}
 5237              		.cfi_remember_state
 5238              		.cfi_restore 80
 5239              		.cfi_restore 81
 5240              		.cfi_def_cfa_offset 16
 5241              	.LVL194:
 194:TapeLooper.cpp **** 
 5242              		.loc 10 194 1 view .LVU1258
 5243 002c 38BD     		pop	{r3, r4, r5, pc}
 5244              	.LVL195:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 243


 5245              	.L70:
 5246              		.cfi_restore_state
 5247              	.LBB2332:
 5248              	.LBI2332:
 183:TapeLooper.cpp **** {
 5249              		.loc 10 183 6 is_stmt 1 view .LVU1259
 5250              	.LBB2333:
 188:TapeLooper.cpp ****             tracks[t].set_Playback_Speed(play_pause_button.Pressed() ? tc : 0.5);
 5251              		.loc 10 188 9 view .LVU1260
 189:TapeLooper.cpp ****             break;
 5252              		.loc 10 189 13 view .LVU1261
 5253              	.LBB2334:
 5254              	.LBI2334:
 5255              		.loc 1 79 17 view .LVU1262
 5256              	.LBB2335:
 5257              		.loc 1 79 35 view .LVU1263
 5258              		.loc 1 79 35 is_stmt 0 view .LVU1264
 5259              	.LBE2335:
 5260              	.LBE2334:
 5261              	.LBB2336:
 5262              	.LBB2337:
 198:TapeLoop.h    ****                             - max_tape_speed;
 5263              		.loc 8 198 46 view .LVU1265
 5264 002e D0ED0E7A 		vldr.32	s15, [r0, #56]
 5265              	.LBE2337:
 5266              	.LBE2336:
 189:TapeLooper.cpp ****             break;
 5267              		.loc 10 189 41 view .LVU1266
 5268 0032 F6EE006A 		vmov.f32	s13, #5.0e-1
 5269              	.LBB2342:
 5270              	.LBB2338:
 198:TapeLoop.h    ****                             - max_tape_speed;
 5271              		.loc 8 198 61 view .LVU1267
 5272 0036 90ED0D7A 		vldr.32	s14, [r0, #52]
 5273              	.LBE2338:
 5274              	.LBE2342:
 189:TapeLooper.cpp ****             break;
 5275              		.loc 10 189 41 view .LVU1268
 5276 003a AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 5277              	.LBB2343:
 5278              	.LBB2339:
 198:TapeLoop.h    ****                             - max_tape_speed;
 5279              		.loc 8 198 61 view .LVU1269
 5280 003c 37EEC77A 		vsub.f32	s14, s15, s14
 5281              	.LBE2339:
 5282              	.LBE2343:
 189:TapeLooper.cpp ****             break;
 5283              		.loc 10 189 41 view .LVU1270
 5284 0040 FF2B     		cmp	r3, #255
 5285 0042 08FE268A 		vseleq.f32	s16, s16, s13
 5286              	.LVL196:
 5287              	.LBB2344:
 5288              	.LBI2336:
 196:TapeLoop.h    ****     {
 5289              		.loc 8 196 10 is_stmt 1 view .LVU1271
 5290              	.LBB2340:
 198:TapeLoop.h    ****                             - max_tape_speed;
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 244


 5291              		.loc 8 198 9 view .LVU1272
 199:TapeLoop.h    ****     }
 5292              		.loc 8 199 29 is_stmt 0 view .LVU1273
 5293 0046 D7EE087A 		vfnms.f32	s15, s14, s16
 5294              	.LBE2340:
 5295              	.LBE2344:
 5296              	.LBE2333:
 5297              	.LBE2332:
 194:TapeLooper.cpp **** 
 5298              		.loc 10 194 1 view .LVU1274
 5299 004a BDEC028B 		vldm	sp!, {d8}
 5300              		.cfi_restore 80
 5301              		.cfi_restore 81
 5302              		.cfi_def_cfa_offset 16
 5303              	.LVL197:
 5304              	.LBB2347:
 5305              	.LBB2346:
 5306              	.LBB2345:
 5307              	.LBB2341:
 198:TapeLoop.h    ****                             - max_tape_speed;
 5308              		.loc 8 198 27 view .LVU1275
 5309 004e C0ED0B7A 		vstr.32	s15, [r0, #44]
 5310              	.LVL198:
 198:TapeLoop.h    ****                             - max_tape_speed;
 5311              		.loc 8 198 27 view .LVU1276
 5312              	.LBE2341:
 5313              	.LBE2345:
 5314              	.LBE2346:
 5315              	.LBE2347:
 194:TapeLooper.cpp **** 
 5316              		.loc 10 194 1 view .LVU1277
 5317 0052 38BD     		pop	{r3, r4, r5, pc}
 5318              	.LVL199:
 5319              	.L78:
 194:TapeLooper.cpp **** 
 5320              		.loc 10 194 1 view .LVU1278
 5321              		.align	2
 5322              	.L77:
 5323 0054 00000000 		.word	.LANCHOR18
 5324 0058 00000000 		.word	.LANCHOR0
 5325              		.cfi_endproc
 5326              	.LFE4722:
 5328              		.section	.text._Z14update_buttonsv,"ax",%progbits
 5329              		.align	1
 5330              		.p2align 2,,3
 5331              		.global	_Z14update_buttonsv
 5332              		.syntax unified
 5333              		.thumb
 5334              		.thumb_func
 5335              		.fpu fpv5-d16
 5337              	_Z14update_buttonsv:
 5338              	.LFB4723:
 198:TapeLooper.cpp ****     track1_sel.Debounce();
 5339              		.loc 10 198 1 is_stmt 1 view -0
 5340              		.cfi_startproc
 5341              		@ args = 0, pretend = 0, frame = 0
 5342              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 245


 199:TapeLooper.cpp ****     if(track1_sel.RisingEdge())
 5343              		.loc 10 199 5 view .LVU1280
 198:TapeLooper.cpp ****     track1_sel.Debounce();
 5344              		.loc 10 198 1 is_stmt 0 view .LVU1281
 5345 0000 10B5     		push	{r4, lr}
 5346              		.cfi_def_cfa_offset 8
 5347              		.cfi_offset 4, -8
 5348              		.cfi_offset 14, -4
 199:TapeLooper.cpp ****     if(track1_sel.RisingEdge())
 5349              		.loc 10 199 24 view .LVU1282
 5350 0002 394C     		ldr	r4, .L108
 5351 0004 2046     		mov	r0, r4
 5352 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5353              	.LVL200:
 200:TapeLooper.cpp ****     {
 5354              		.loc 10 200 5 is_stmt 1 view .LVU1283
 5355              	.LBB2348:
 5356              	.LBI2348:
  70:../../libDaisy//src/hid/switch.h **** 
 5357              		.loc 1 70 17 view .LVU1284
 5358              	.LBB2349:
  70:../../libDaisy//src/hid/switch.h **** 
 5359              		.loc 1 70 38 view .LVU1285
  70:../../libDaisy//src/hid/switch.h **** 
 5360              		.loc 1 70 54 is_stmt 0 view .LVU1286
 5361 000a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5362 000c 13B1     		cbz	r3, .L80
 5363              	.LVL201:
  70:../../libDaisy//src/hid/switch.h **** 
 5364              		.loc 1 70 54 view .LVU1287
 5365              	.LBE2349:
 5366              	.LBE2348:
 200:TapeLooper.cpp ****     {
 5367              		.loc 10 200 5 view .LVU1288
 5368 000e A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 5369 0010 7F2B     		cmp	r3, #127
 5370 0012 2FD0     		beq	.L101
 5371              	.L80:
 213:TapeLooper.cpp ****     if(track2_sel.RisingEdge())
 5372              		.loc 10 213 5 is_stmt 1 view .LVU1289
 213:TapeLooper.cpp ****     if(track2_sel.RisingEdge())
 5373              		.loc 10 213 24 is_stmt 0 view .LVU1290
 5374 0014 354C     		ldr	r4, .L108+4
 5375 0016 2046     		mov	r0, r4
 5376 0018 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5377              	.LVL202:
 214:TapeLooper.cpp ****     {
 5378              		.loc 10 214 5 is_stmt 1 view .LVU1291
 5379              	.LBB2350:
 5380              	.LBI2350:
  70:../../libDaisy//src/hid/switch.h **** 
 5381              		.loc 1 70 17 view .LVU1292
 5382              	.LBB2351:
  70:../../libDaisy//src/hid/switch.h **** 
 5383              		.loc 1 70 38 view .LVU1293
  70:../../libDaisy//src/hid/switch.h **** 
 5384              		.loc 1 70 54 is_stmt 0 view .LVU1294
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 246


 5385 001c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5386 001e 13B1     		cbz	r3, .L82
 5387              	.LVL203:
  70:../../libDaisy//src/hid/switch.h **** 
 5388              		.loc 1 70 54 view .LVU1295
 5389              	.LBE2351:
 5390              	.LBE2350:
 214:TapeLooper.cpp ****     {
 5391              		.loc 10 214 5 view .LVU1296
 5392 0020 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 5393 0022 7F2B     		cmp	r3, #127
 5394 0024 1FD0     		beq	.L102
 5395              	.L82:
 227:TapeLooper.cpp ****     if(track3_sel.RisingEdge())
 5396              		.loc 10 227 5 is_stmt 1 view .LVU1297
 227:TapeLooper.cpp ****     if(track3_sel.RisingEdge())
 5397              		.loc 10 227 24 is_stmt 0 view .LVU1298
 5398 0026 324C     		ldr	r4, .L108+8
 5399 0028 2046     		mov	r0, r4
 5400 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5401              	.LVL204:
 228:TapeLooper.cpp ****     {
 5402              		.loc 10 228 5 is_stmt 1 view .LVU1299
 5403              	.LBB2352:
 5404              	.LBI2352:
  70:../../libDaisy//src/hid/switch.h **** 
 5405              		.loc 1 70 17 view .LVU1300
 5406              	.LBB2353:
  70:../../libDaisy//src/hid/switch.h **** 
 5407              		.loc 1 70 38 view .LVU1301
  70:../../libDaisy//src/hid/switch.h **** 
 5408              		.loc 1 70 54 is_stmt 0 view .LVU1302
 5409 002e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5410 0030 13B1     		cbz	r3, .L84
 5411              	.LVL205:
  70:../../libDaisy//src/hid/switch.h **** 
 5412              		.loc 1 70 54 view .LVU1303
 5413              	.LBE2353:
 5414              	.LBE2352:
 228:TapeLooper.cpp ****     {
 5415              		.loc 10 228 5 view .LVU1304
 5416 0032 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 5417 0034 7F2B     		cmp	r3, #127
 5418 0036 0FD0     		beq	.L103
 5419              	.L84:
 241:TapeLooper.cpp ****     if(track4_sel.RisingEdge())
 5420              		.loc 10 241 5 is_stmt 1 view .LVU1305
 241:TapeLooper.cpp ****     if(track4_sel.RisingEdge())
 5421              		.loc 10 241 24 is_stmt 0 view .LVU1306
 5422 0038 2E4C     		ldr	r4, .L108+12
 5423 003a 2046     		mov	r0, r4
 5424 003c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5425              	.LVL206:
 242:TapeLooper.cpp ****     {
 5426              		.loc 10 242 5 is_stmt 1 view .LVU1307
 5427              	.LBB2354:
 5428              	.LBI2354:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 247


  70:../../libDaisy//src/hid/switch.h **** 
 5429              		.loc 1 70 17 view .LVU1308
 5430              	.LBB2355:
  70:../../libDaisy//src/hid/switch.h **** 
 5431              		.loc 1 70 38 view .LVU1309
  70:../../libDaisy//src/hid/switch.h **** 
 5432              		.loc 1 70 54 is_stmt 0 view .LVU1310
 5433 0040 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5434 0042 43B1     		cbz	r3, .L79
 5435              	.LVL207:
  70:../../libDaisy//src/hid/switch.h **** 
 5436              		.loc 1 70 54 view .LVU1311
 5437              	.LBE2355:
 5438              	.LBE2354:
 242:TapeLooper.cpp ****     {
 5439              		.loc 10 242 5 view .LVU1312
 5440 0044 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 5441 0046 7F2B     		cmp	r3, #127
 5442 0048 05D1     		bne	.L79
 244:TapeLooper.cpp ****         {
 5443              		.loc 10 244 9 is_stmt 1 view .LVU1313
 244:TapeLooper.cpp ****         {
 5444              		.loc 10 244 25 is_stmt 0 view .LVU1314
 5445 004a 2B4B     		ldr	r3, .L108+16
 244:TapeLooper.cpp ****         {
 5446              		.loc 10 244 9 view .LVU1315
 5447 004c 1868     		ldr	r0, [r3]
 5448 004e 0328     		cmp	r0, #3
 5449 0050 22D0     		beq	.L104
 251:TapeLooper.cpp ****         }
 5450              		.loc 10 251 13 is_stmt 1 view .LVU1316
 251:TapeLooper.cpp ****         }
 5451              		.loc 10 251 26 is_stmt 0 view .LVU1317
 5452 0052 0322     		movs	r2, #3
 5453 0054 1A60     		str	r2, [r3]
 5454              	.L79:
 254:TapeLooper.cpp **** 
 5455              		.loc 10 254 1 view .LVU1318
 5456 0056 10BD     		pop	{r4, pc}
 5457              	.L103:
 230:TapeLooper.cpp ****         {
 5458              		.loc 10 230 9 is_stmt 1 view .LVU1319
 230:TapeLooper.cpp ****         {
 5459              		.loc 10 230 25 is_stmt 0 view .LVU1320
 5460 0058 274B     		ldr	r3, .L108+16
 230:TapeLooper.cpp ****         {
 5461              		.loc 10 230 9 view .LVU1321
 5462 005a 1868     		ldr	r0, [r3]
 5463 005c 0228     		cmp	r0, #2
 5464 005e 36D0     		beq	.L105
 237:TapeLooper.cpp ****         }
 5465              		.loc 10 237 13 is_stmt 1 view .LVU1322
 237:TapeLooper.cpp ****         }
 5466              		.loc 10 237 26 is_stmt 0 view .LVU1323
 5467 0060 0222     		movs	r2, #2
 5468 0062 1A60     		str	r2, [r3]
 5469 0064 E8E7     		b	.L84
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 248


 5470              	.L102:
 216:TapeLooper.cpp ****         {
 5471              		.loc 10 216 9 is_stmt 1 view .LVU1324
 216:TapeLooper.cpp ****         {
 5472              		.loc 10 216 25 is_stmt 0 view .LVU1325
 5473 0066 244B     		ldr	r3, .L108+16
 216:TapeLooper.cpp ****         {
 5474              		.loc 10 216 9 view .LVU1326
 5475 0068 1868     		ldr	r0, [r3]
 5476 006a 0128     		cmp	r0, #1
 5477 006c 22D0     		beq	.L106
 223:TapeLooper.cpp ****         }
 5478              		.loc 10 223 13 is_stmt 1 view .LVU1327
 223:TapeLooper.cpp ****         }
 5479              		.loc 10 223 26 is_stmt 0 view .LVU1328
 5480 006e 0122     		movs	r2, #1
 5481 0070 1A60     		str	r2, [r3]
 5482 0072 D8E7     		b	.L82
 5483              	.L101:
 202:TapeLooper.cpp ****         {
 5484              		.loc 10 202 9 is_stmt 1 view .LVU1329
 202:TapeLooper.cpp ****         {
 5485              		.loc 10 202 25 is_stmt 0 view .LVU1330
 5486 0074 204B     		ldr	r3, .L108+16
 202:TapeLooper.cpp ****         {
 5487              		.loc 10 202 9 view .LVU1331
 5488 0076 1868     		ldr	r0, [r3]
 5489 0078 10B1     		cbz	r0, .L107
 209:TapeLooper.cpp ****         }
 5490              		.loc 10 209 13 is_stmt 1 view .LVU1332
 209:TapeLooper.cpp ****         }
 5491              		.loc 10 209 26 is_stmt 0 view .LVU1333
 5492 007a 0022     		movs	r2, #0
 5493 007c 1A60     		str	r2, [r3]
 5494 007e C9E7     		b	.L80
 5495              	.L107:
 204:TapeLooper.cpp ****             blink(0, tracks[active_track].get_Input_Mode());
 5496              		.loc 10 204 13 is_stmt 1 view .LVU1334
 5497              	.LVL208:
 5498              	.LBB2356:
 5499              	.LBI2356:
 185:TapeLoop.h    **** 
 5500              		.loc 8 185 10 view .LVU1335
 5501              	.LBB2357:
 185:TapeLoop.h    **** 
 5502              		.loc 8 185 30 view .LVU1336
 185:TapeLoop.h    **** 
 5503              		.loc 8 185 44 is_stmt 0 view .LVU1337
 5504 0080 1E4B     		ldr	r3, .L108+20
 185:TapeLoop.h    **** 
 5505              		.loc 8 185 60 view .LVU1338
 5506 0082 D3E90912 		ldrd	r1, r2, [r3, #36]
 185:TapeLoop.h    **** 
 5507              		.loc 8 185 55 view .LVU1339
 5508 0086 0131     		adds	r1, r1, #1
 185:TapeLoop.h    **** 
 5509              		.loc 8 185 60 view .LVU1340
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 249


 5510 0088 91FBF2F4 		sdiv	r4, r1, r2
 5511 008c 02FB1411 		mls	r1, r2, r4, r1
 185:TapeLoop.h    **** 
 5512              		.loc 8 185 41 view .LVU1341
 5513 0090 5962     		str	r1, [r3, #36]
 5514              	.LVL209:
 185:TapeLoop.h    **** 
 5515              		.loc 8 185 41 view .LVU1342
 5516              	.LBE2357:
 5517              	.LBE2356:
 205:TapeLooper.cpp ****         }
 5518              		.loc 10 205 13 is_stmt 1 view .LVU1343
 189:TapeLoop.h    **** 
 5519              		.loc 8 189 28 view .LVU1344
 205:TapeLooper.cpp ****         }
 5520              		.loc 10 205 18 is_stmt 0 view .LVU1345
 5521 0092 FFF7FEFF 		bl	_Z5blinkii
 5522              	.LVL210:
 5523 0096 BDE7     		b	.L80
 5524              	.L104:
 246:TapeLooper.cpp ****             blink(3, tracks[active_track].get_Input_Mode());
 5525              		.loc 10 246 13 is_stmt 1 view .LVU1346
 5526              	.LVL211:
 5527              	.LBB2358:
 5528              	.LBI2358:
 185:TapeLoop.h    **** 
 5529              		.loc 8 185 10 view .LVU1347
 5530              	.LBB2359:
 185:TapeLoop.h    **** 
 5531              		.loc 8 185 30 view .LVU1348
 185:TapeLoop.h    **** 
 5532              		.loc 8 185 44 is_stmt 0 view .LVU1349
 5533 0098 184B     		ldr	r3, .L108+20
 185:TapeLoop.h    **** 
 5534              		.loc 8 185 60 view .LVU1350
 5535 009a D3E95A12 		ldrd	r1, r2, [r3, #360]
 185:TapeLoop.h    **** 
 5536              		.loc 8 185 55 view .LVU1351
 5537 009e 0131     		adds	r1, r1, #1
 185:TapeLoop.h    **** 
 5538              		.loc 8 185 60 view .LVU1352
 5539 00a0 91FBF2F4 		sdiv	r4, r1, r2
 5540 00a4 02FB1411 		mls	r1, r2, r4, r1
 5541              	.LBE2359:
 5542              	.LBE2358:
 254:TapeLooper.cpp **** 
 5543              		.loc 10 254 1 view .LVU1353
 5544 00a8 BDE81040 		pop	{r4, lr}
 5545              		.cfi_remember_state
 5546              		.cfi_restore 14
 5547              		.cfi_restore 4
 5548              		.cfi_def_cfa_offset 0
 5549              	.LBB2361:
 5550              	.LBB2360:
 185:TapeLoop.h    **** 
 5551              		.loc 8 185 41 view .LVU1354
 5552 00ac C3F86811 		str	r1, [r3, #360]
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 250


 5553              	.LVL212:
 185:TapeLoop.h    **** 
 5554              		.loc 8 185 41 view .LVU1355
 5555              	.LBE2360:
 5556              	.LBE2361:
 247:TapeLooper.cpp ****         }
 5557              		.loc 10 247 13 is_stmt 1 view .LVU1356
 189:TapeLoop.h    **** 
 5558              		.loc 8 189 28 view .LVU1357
 247:TapeLooper.cpp ****         }
 5559              		.loc 10 247 18 is_stmt 0 view .LVU1358
 5560 00b0 FFF7FEBF 		b	_Z5blinkii
 5561              	.LVL213:
 5562              	.L106:
 5563              		.cfi_restore_state
 218:TapeLooper.cpp ****             blink(1, tracks[active_track].get_Input_Mode());
 5564              		.loc 10 218 13 is_stmt 1 view .LVU1359
 5565              	.LBB2362:
 5566              	.LBI2362:
 185:TapeLoop.h    **** 
 5567              		.loc 8 185 10 view .LVU1360
 5568              	.LBB2363:
 185:TapeLoop.h    **** 
 5569              		.loc 8 185 30 view .LVU1361
 185:TapeLoop.h    **** 
 5570              		.loc 8 185 44 is_stmt 0 view .LVU1362
 5571 00b4 114B     		ldr	r3, .L108+20
 185:TapeLoop.h    **** 
 5572              		.loc 8 185 60 view .LVU1363
 5573 00b6 D3E92412 		ldrd	r1, r2, [r3, #144]
 185:TapeLoop.h    **** 
 5574              		.loc 8 185 55 view .LVU1364
 5575 00ba 0131     		adds	r1, r1, #1
 185:TapeLoop.h    **** 
 5576              		.loc 8 185 60 view .LVU1365
 5577 00bc 91FBF2F4 		sdiv	r4, r1, r2
 5578 00c0 02FB1411 		mls	r1, r2, r4, r1
 185:TapeLoop.h    **** 
 5579              		.loc 8 185 41 view .LVU1366
 5580 00c4 C3F89010 		str	r1, [r3, #144]
 5581              	.LVL214:
 185:TapeLoop.h    **** 
 5582              		.loc 8 185 41 view .LVU1367
 5583              	.LBE2363:
 5584              	.LBE2362:
 219:TapeLooper.cpp ****         }
 5585              		.loc 10 219 13 is_stmt 1 view .LVU1368
 189:TapeLoop.h    **** 
 5586              		.loc 8 189 28 view .LVU1369
 219:TapeLooper.cpp ****         }
 5587              		.loc 10 219 18 is_stmt 0 view .LVU1370
 5588 00c8 FFF7FEFF 		bl	_Z5blinkii
 5589              	.LVL215:
 5590 00cc ABE7     		b	.L82
 5591              	.L105:
 232:TapeLooper.cpp ****             blink(2, tracks[active_track].get_Input_Mode());
 5592              		.loc 10 232 13 is_stmt 1 view .LVU1371
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 251


 5593              	.LVL216:
 5594              	.LBB2364:
 5595              	.LBI2364:
 185:TapeLoop.h    **** 
 5596              		.loc 8 185 10 view .LVU1372
 5597              	.LBB2365:
 185:TapeLoop.h    **** 
 5598              		.loc 8 185 30 view .LVU1373
 185:TapeLoop.h    **** 
 5599              		.loc 8 185 44 is_stmt 0 view .LVU1374
 5600 00ce 0B4B     		ldr	r3, .L108+20
 185:TapeLoop.h    **** 
 5601              		.loc 8 185 60 view .LVU1375
 5602 00d0 D3E93F12 		ldrd	r1, r2, [r3, #252]
 185:TapeLoop.h    **** 
 5603              		.loc 8 185 55 view .LVU1376
 5604 00d4 0131     		adds	r1, r1, #1
 185:TapeLoop.h    **** 
 5605              		.loc 8 185 60 view .LVU1377
 5606 00d6 91FBF2F4 		sdiv	r4, r1, r2
 5607 00da 02FB1411 		mls	r1, r2, r4, r1
 185:TapeLoop.h    **** 
 5608              		.loc 8 185 41 view .LVU1378
 5609 00de C3F8FC10 		str	r1, [r3, #252]
 5610              	.LVL217:
 185:TapeLoop.h    **** 
 5611              		.loc 8 185 41 view .LVU1379
 5612              	.LBE2365:
 5613              	.LBE2364:
 233:TapeLooper.cpp ****         }
 5614              		.loc 10 233 13 is_stmt 1 view .LVU1380
 189:TapeLoop.h    **** 
 5615              		.loc 8 189 28 view .LVU1381
 233:TapeLooper.cpp ****         }
 5616              		.loc 10 233 18 is_stmt 0 view .LVU1382
 5617 00e2 FFF7FEFF 		bl	_Z5blinkii
 5618              	.LVL218:
 5619 00e6 A7E7     		b	.L84
 5620              	.L109:
 5621              		.align	2
 5622              	.L108:
 5623 00e8 00000000 		.word	.LANCHOR10
 5624 00ec 00000000 		.word	.LANCHOR12
 5625 00f0 00000000 		.word	.LANCHOR14
 5626 00f4 00000000 		.word	.LANCHOR16
 5627 00f8 00000000 		.word	.LANCHOR2
 5628 00fc 00000000 		.word	.LANCHOR0
 5629              		.cfi_endproc
 5630              	.LFE4723:
 5632              		.section	.text._Z11update_potsv,"ax",%progbits
 5633              		.align	1
 5634              		.p2align 2,,3
 5635              		.global	_Z11update_potsv
 5636              		.syntax unified
 5637              		.thumb
 5638              		.thumb_func
 5639              		.fpu fpv5-d16
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 252


 5641              	_Z11update_potsv:
 5642              	.LFB4724:
 257:TapeLooper.cpp **** 
 5643              		.loc 10 257 1 is_stmt 1 view -0
 5644              		.cfi_startproc
 5645              		@ args = 0, pretend = 0, frame = 0
 5646              		@ frame_needed = 0, uses_anonymous_args = 0
 259:TapeLooper.cpp **** tracks[1].set_Volume(hw.adc.GetMuxFloat(MUX, VOL2));
 5647              		.loc 10 259 1 view .LVU1384
 257:TapeLooper.cpp **** 
 5648              		.loc 10 257 1 is_stmt 0 view .LVU1385
 5649 0000 38B5     		push	{r3, r4, r5, lr}
 5650              		.cfi_def_cfa_offset 16
 5651              		.cfi_offset 3, -16
 5652              		.cfi_offset 4, -12
 5653              		.cfi_offset 5, -8
 5654              		.cfi_offset 14, -4
 259:TapeLooper.cpp **** tracks[1].set_Volume(hw.adc.GetMuxFloat(MUX, VOL2));
 5655              		.loc 10 259 21 view .LVU1386
 5656 0002 2D4C     		ldr	r4, .L112
 5657 0004 0322     		movs	r2, #3
 5658 0006 0021     		movs	r1, #0
 5659              	.LBB2366:
 5660              	.LBB2367:
 209:TapeLoop.h    **** 
 5661              		.loc 8 209 39 view .LVU1387
 5662 0008 2C4D     		ldr	r5, .L112+4
 5663              	.LBE2367:
 5664              	.LBE2366:
 259:TapeLooper.cpp **** tracks[1].set_Volume(hw.adc.GetMuxFloat(MUX, VOL2));
 5665              		.loc 10 259 21 view .LVU1388
 5666 000a 2046     		mov	r0, r4
 257:TapeLooper.cpp **** 
 5667              		.loc 10 257 1 view .LVU1389
 5668 000c 2DED028B 		vpush.64	{d8}
 5669              		.cfi_def_cfa_offset 24
 5670              		.cfi_offset 80, -24
 5671              		.cfi_offset 81, -20
 259:TapeLooper.cpp **** tracks[1].set_Volume(hw.adc.GetMuxFloat(MUX, VOL2));
 5672              		.loc 10 259 21 view .LVU1390
 5673 0010 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5674              	.LVL219:
 5675              	.LBB2370:
 5676              	.LBI2366:
 209:TapeLoop.h    **** 
 5677              		.loc 8 209 10 is_stmt 1 view .LVU1391
 5678              	.LBB2368:
 209:TapeLoop.h    **** 
 5679              		.loc 8 209 32 view .LVU1392
 5680              	.LBE2368:
 5681              	.LBE2370:
 260:TapeLooper.cpp **** tracks[2].set_Volume(hw.adc.GetMuxFloat(MUX, VOL3));
 5682              		.loc 10 260 21 is_stmt 0 view .LVU1393
 5683 0014 0022     		movs	r2, #0
 5684 0016 2046     		mov	r0, r4
 265:TapeLooper.cpp **** update_track(1, (1.f - hw.adc.GetMuxFloat(MUX, TC2)));
 5685              		.loc 10 265 13 view .LVU1394
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 253


 5686 0018 B7EE008A 		vmov.f32	s16, #1.0e+0
 260:TapeLooper.cpp **** tracks[2].set_Volume(hw.adc.GetMuxFloat(MUX, VOL3));
 5687              		.loc 10 260 21 view .LVU1395
 5688 001c 1146     		mov	r1, r2
 5689              	.LBB2371:
 5690              	.LBB2369:
 209:TapeLoop.h    **** 
 5691              		.loc 8 209 39 view .LVU1396
 5692 001e 85ED0F0A 		vstr.32	s0, [r5, #60]
 5693              	.LVL220:
 209:TapeLoop.h    **** 
 5694              		.loc 8 209 39 view .LVU1397
 5695              	.LBE2369:
 5696              	.LBE2371:
 260:TapeLooper.cpp **** tracks[2].set_Volume(hw.adc.GetMuxFloat(MUX, VOL3));
 5697              		.loc 10 260 1 is_stmt 1 view .LVU1398
 260:TapeLooper.cpp **** tracks[2].set_Volume(hw.adc.GetMuxFloat(MUX, VOL3));
 5698              		.loc 10 260 21 is_stmt 0 view .LVU1399
 5699 0022 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5700              	.LVL221:
 5701              	.LBB2372:
 5702              	.LBI2372:
 209:TapeLoop.h    **** 
 5703              		.loc 8 209 10 is_stmt 1 view .LVU1400
 5704              	.LBB2373:
 209:TapeLoop.h    **** 
 5705              		.loc 8 209 32 view .LVU1401
 5706              	.LBE2373:
 5707              	.LBE2372:
 261:TapeLooper.cpp **** tracks[3].set_Volume(hw.adc.GetMuxFloat(MUX, VOL4));
 5708              		.loc 10 261 21 is_stmt 0 view .LVU1402
 5709 0026 0122     		movs	r2, #1
 5710 0028 0021     		movs	r1, #0
 5711 002a 2046     		mov	r0, r4
 5712              	.LBB2375:
 5713              	.LBB2374:
 209:TapeLoop.h    **** 
 5714              		.loc 8 209 39 view .LVU1403
 5715 002c 85ED2A0A 		vstr.32	s0, [r5, #168]
 5716              	.LVL222:
 209:TapeLoop.h    **** 
 5717              		.loc 8 209 39 view .LVU1404
 5718              	.LBE2374:
 5719              	.LBE2375:
 261:TapeLooper.cpp **** tracks[3].set_Volume(hw.adc.GetMuxFloat(MUX, VOL4));
 5720              		.loc 10 261 1 is_stmt 1 view .LVU1405
 261:TapeLooper.cpp **** tracks[3].set_Volume(hw.adc.GetMuxFloat(MUX, VOL4));
 5721              		.loc 10 261 21 is_stmt 0 view .LVU1406
 5722 0030 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5723              	.LVL223:
 5724              	.LBB2376:
 5725              	.LBI2376:
 209:TapeLoop.h    **** 
 5726              		.loc 8 209 10 is_stmt 1 view .LVU1407
 5727              	.LBB2377:
 209:TapeLoop.h    **** 
 5728              		.loc 8 209 32 view .LVU1408
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 254


 5729              	.LBE2377:
 5730              	.LBE2376:
 262:TapeLooper.cpp **** 
 5731              		.loc 10 262 21 is_stmt 0 view .LVU1409
 5732 0034 0222     		movs	r2, #2
 5733 0036 0021     		movs	r1, #0
 5734 0038 2046     		mov	r0, r4
 5735              	.LBB2379:
 5736              	.LBB2378:
 209:TapeLoop.h    **** 
 5737              		.loc 8 209 39 view .LVU1410
 5738 003a 85ED450A 		vstr.32	s0, [r5, #276]
 5739              	.LVL224:
 209:TapeLoop.h    **** 
 5740              		.loc 8 209 39 view .LVU1411
 5741              	.LBE2378:
 5742              	.LBE2379:
 262:TapeLooper.cpp **** 
 5743              		.loc 10 262 1 is_stmt 1 view .LVU1412
 262:TapeLooper.cpp **** 
 5744              		.loc 10 262 21 is_stmt 0 view .LVU1413
 5745 003e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5746              	.LVL225:
 5747              	.LBB2380:
 5748              	.LBI2380:
 209:TapeLoop.h    **** 
 5749              		.loc 8 209 10 is_stmt 1 view .LVU1414
 5750              	.LBB2381:
 209:TapeLoop.h    **** 
 5751              		.loc 8 209 32 view .LVU1415
 5752              	.LBE2381:
 5753              	.LBE2380:
 265:TapeLooper.cpp **** update_track(1, (1.f - hw.adc.GetMuxFloat(MUX, TC2)));
 5754              		.loc 10 265 42 is_stmt 0 view .LVU1416
 5755 0042 0522     		movs	r2, #5
 5756 0044 0021     		movs	r1, #0
 5757 0046 2046     		mov	r0, r4
 5758              	.LBB2383:
 5759              	.LBB2382:
 209:TapeLoop.h    **** 
 5760              		.loc 8 209 39 view .LVU1417
 5761 0048 85ED600A 		vstr.32	s0, [r5, #384]
 5762              	.LVL226:
 209:TapeLoop.h    **** 
 5763              		.loc 8 209 39 view .LVU1418
 5764              	.LBE2382:
 5765              	.LBE2383:
 265:TapeLooper.cpp **** update_track(1, (1.f - hw.adc.GetMuxFloat(MUX, TC2)));
 5766              		.loc 10 265 1 is_stmt 1 view .LVU1419
 265:TapeLooper.cpp **** update_track(1, (1.f - hw.adc.GetMuxFloat(MUX, TC2)));
 5767              		.loc 10 265 42 is_stmt 0 view .LVU1420
 5768 004c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5769              	.LVL227:
 265:TapeLooper.cpp **** update_track(1, (1.f - hw.adc.GetMuxFloat(MUX, TC2)));
 5770              		.loc 10 265 13 view .LVU1421
 5771 0050 0020     		movs	r0, #0
 5772 0052 38EE400A 		vsub.f32	s0, s16, s0
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 255


 5773 0056 FFF7FEFF 		bl	_Z12update_trackif
 5774              	.LVL228:
 266:TapeLooper.cpp **** update_track(2, (1.f - hw.adc.GetMuxFloat(MUX, TC3)));
 5775              		.loc 10 266 1 is_stmt 1 view .LVU1422
 266:TapeLooper.cpp **** update_track(2, (1.f - hw.adc.GetMuxFloat(MUX, TC3)));
 5776              		.loc 10 266 42 is_stmt 0 view .LVU1423
 5777 005a 0722     		movs	r2, #7
 5778 005c 0021     		movs	r1, #0
 5779 005e 2046     		mov	r0, r4
 5780 0060 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5781              	.LVL229:
 266:TapeLooper.cpp **** update_track(2, (1.f - hw.adc.GetMuxFloat(MUX, TC3)));
 5782              		.loc 10 266 13 view .LVU1424
 5783 0064 0120     		movs	r0, #1
 5784 0066 38EE400A 		vsub.f32	s0, s16, s0
 5785 006a FFF7FEFF 		bl	_Z12update_trackif
 5786              	.LVL230:
 267:TapeLooper.cpp **** update_track(3, (1.f - hw.adc.GetMuxFloat(MUX, TC4)));
 5787              		.loc 10 267 1 is_stmt 1 view .LVU1425
 267:TapeLooper.cpp **** update_track(3, (1.f - hw.adc.GetMuxFloat(MUX, TC4)));
 5788              		.loc 10 267 42 is_stmt 0 view .LVU1426
 5789 006e 0622     		movs	r2, #6
 5790 0070 0021     		movs	r1, #0
 5791 0072 2046     		mov	r0, r4
 5792 0074 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5793              	.LVL231:
 267:TapeLooper.cpp **** update_track(3, (1.f - hw.adc.GetMuxFloat(MUX, TC4)));
 5794              		.loc 10 267 13 view .LVU1427
 5795 0078 0220     		movs	r0, #2
 5796 007a 38EE400A 		vsub.f32	s0, s16, s0
 5797 007e FFF7FEFF 		bl	_Z12update_trackif
 5798              	.LVL232:
 268:TapeLooper.cpp ****     
 5799              		.loc 10 268 1 is_stmt 1 view .LVU1428
 268:TapeLooper.cpp ****     
 5800              		.loc 10 268 42 is_stmt 0 view .LVU1429
 5801 0082 0422     		movs	r2, #4
 5802 0084 0021     		movs	r1, #0
 5803 0086 2046     		mov	r0, r4
 5804 0088 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5805              	.LVL233:
 268:TapeLooper.cpp ****     
 5806              		.loc 10 268 13 view .LVU1430
 5807 008c 0320     		movs	r0, #3
 5808 008e 38EE400A 		vsub.f32	s0, s16, s0
 5809 0092 FFF7FEFF 		bl	_Z12update_trackif
 5810              	.LVL234:
 270:TapeLooper.cpp ****     warble  = hw.adc.GetFloat(WARBLE_POT);
 5811              		.loc 10 270 5 is_stmt 1 view .LVU1431
 270:TapeLooper.cpp ****     warble  = hw.adc.GetFloat(WARBLE_POT);
 5812              		.loc 10 270 30 is_stmt 0 view .LVU1432
 5813 0096 0121     		movs	r1, #1
 5814 0098 2046     		mov	r0, r4
 5815 009a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5816              	.LVL235:
 270:TapeLooper.cpp ****     warble  = hw.adc.GetFloat(WARBLE_POT);
 5817              		.loc 10 270 13 view .LVU1433
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 256


 5818 009e 084B     		ldr	r3, .L112+8
 271:TapeLooper.cpp **** }
 5819              		.loc 10 271 30 view .LVU1434
 5820 00a0 0221     		movs	r1, #2
 5821 00a2 2046     		mov	r0, r4
 270:TapeLooper.cpp ****     warble  = hw.adc.GetFloat(WARBLE_POT);
 5822              		.loc 10 270 13 view .LVU1435
 5823 00a4 83ED000A 		vstr.32	s0, [r3]
 271:TapeLooper.cpp **** }
 5824              		.loc 10 271 5 is_stmt 1 view .LVU1436
 271:TapeLooper.cpp **** }
 5825              		.loc 10 271 30 is_stmt 0 view .LVU1437
 5826 00a8 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5827              	.LVL236:
 271:TapeLooper.cpp **** }
 5828              		.loc 10 271 13 view .LVU1438
 5829 00ac 054B     		ldr	r3, .L112+12
 272:TapeLooper.cpp **** 
 5830              		.loc 10 272 1 view .LVU1439
 5831 00ae BDEC028B 		vldm	sp!, {d8}
 5832              		.cfi_restore 80
 5833              		.cfi_restore 81
 5834              		.cfi_def_cfa_offset 16
 271:TapeLooper.cpp **** }
 5835              		.loc 10 271 13 view .LVU1440
 5836 00b2 83ED000A 		vstr.32	s0, [r3]
 272:TapeLooper.cpp **** 
 5837              		.loc 10 272 1 view .LVU1441
 5838 00b6 38BD     		pop	{r3, r4, r5, pc}
 5839              	.L113:
 5840              		.align	2
 5841              	.L112:
 5842 00b8 18000000 		.word	.LANCHOR4+24
 5843 00bc 00000000 		.word	.LANCHOR0
 5844 00c0 00000000 		.word	.LANCHOR3
 5845 00c4 00000000 		.word	.LANCHOR36
 5846              		.cfi_endproc
 5847              	.LFE4724:
 5849              		.section	.text._Z11update_LEDsv,"ax",%progbits
 5850              		.align	1
 5851              		.p2align 2,,3
 5852              		.global	_Z11update_LEDsv
 5853              		.syntax unified
 5854              		.thumb
 5855              		.thumb_func
 5856              		.fpu fpv5-d16
 5858              	_Z11update_LEDsv:
 5859              	.LFB4725:
 275:TapeLooper.cpp ****     int speed = 2;
 5860              		.loc 10 275 1 is_stmt 1 view -0
 5861              		.cfi_startproc
 5862              		@ args = 0, pretend = 0, frame = 0
 5863              		@ frame_needed = 0, uses_anonymous_args = 0
 276:TapeLooper.cpp ****     for(int i = 0; i < 4; i++)
 5864              		.loc 10 276 5 view .LVU1443
 5865              	.LVL237:
 277:TapeLooper.cpp ****     {
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 257


 5866              		.loc 10 277 5 view .LVU1444
 5867              	.LBB2384:
 277:TapeLooper.cpp ****     {
 5868              		.loc 10 277 22 view .LVU1445
 5869              	.LBE2384:
 275:TapeLooper.cpp ****     int speed = 2;
 5870              		.loc 10 275 1 is_stmt 0 view .LVU1446
 5871 0000 70B5     		push	{r4, r5, r6, lr}
 5872              		.cfi_def_cfa_offset 16
 5873              		.cfi_offset 4, -16
 5874              		.cfi_offset 5, -12
 5875              		.cfi_offset 6, -8
 5876              		.cfi_offset 14, -4
 5877 0002 194C     		ldr	r4, .L118+8
 5878 0004 194D     		ldr	r5, .L118+12
 5879 0006 04F5D876 		add	r6, r4, #432
 5880 000a 2DED028B 		vpush.64	{d8}
 5881              		.cfi_def_cfa_offset 24
 5882              		.cfi_offset 80, -24
 5883              		.cfi_offset 81, -20
 5884              	.LVL238:
 5885              	.L115:
 5886              	.LBB2391:
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5887              		.loc 10 279 9 is_stmt 1 discriminator 2 view .LVU1447
 5888              	.LBB2385:
 5889              	.LBI2385:
 191:TapeLoop.h    **** 
 5890              		.loc 8 191 9 discriminator 2 view .LVU1448
 5891              	.LBB2386:
 191:TapeLoop.h    **** 
 5892              		.loc 8 191 27 discriminator 2 view .LVU1449
 191:TapeLoop.h    **** 
 5893              		.loc 8 191 60 is_stmt 0 discriminator 2 view .LVU1450
 5894 000e 94ED068A 		vldr.32	s16, [r4, #24]
 5895              	.LBE2386:
 5896              	.LBE2385:
 277:TapeLooper.cpp ****     {
 5897              		.loc 10 277 22 discriminator 2 view .LVU1451
 5898 0012 6C34     		adds	r4, r4, #108
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5899              		.loc 10 279 79 discriminator 2 view .LVU1452
 5900 0014 1648     		ldr	r0, .L118+16
 5901              	.LBB2388:
 5902              	.LBB2387:
 191:TapeLoop.h    **** 
 5903              		.loc 8 191 60 discriminator 2 view .LVU1453
 5904 0016 BDEEC88A 		vcvt.s32.f32	s16, s16
 5905              	.LBE2387:
 5906              	.LBE2388:
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5907              		.loc 10 279 51 discriminator 2 view .LVU1454
 5908 001a 18EE103A 		vmov	r3, s16	@ int
 5909 001e 5B00     		lsls	r3, r3, #1
 5910 0020 08EE103A 		vmov	s16, r3	@ int
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5911              		.loc 10 279 79 discriminator 2 view .LVU1455
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 258


 5912 0024 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5913              	.LVL239:
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5914              		.loc 10 279 24 discriminator 2 view .LVU1456
 5915 0028 B8EEC88A 		vcvt.f32.s32	s16, s16
 5916              	.LVL240:
 5917              	.LBB2389:
 5918              	.LBI2389:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 259


 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 260


 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 5919              		.loc 12 425 3 is_stmt 1 discriminator 2 view .LVU1457
 5920              	.LBB2390:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 5921              		.loc 12 426 5 discriminator 2 view .LVU1458
 5922              		.loc 12 426 26 is_stmt 0 discriminator 2 view .LVU1459
 5923 002c 88EE000A 		vdiv.f32	s0, s16, s0
 5924              	.LVL241:
 5925              		.loc 12 426 26 discriminator 2 view .LVU1460
 5926 0030 FFF7FEFF 		bl	sinf
 5927              	.LVL242:
 5928              		.loc 12 426 26 discriminator 2 view .LVU1461
 5929              	.LBE2390:
 5930              	.LBE2389:
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5931              		.loc 10 279 20 discriminator 2 view .LVU1462
 5932 0034 2846     		mov	r0, r5
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5933              		.loc 10 279 24 discriminator 2 view .LVU1463
 5934 0036 B7EEC00A 		vcvt.f64.f32	d0, s0
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5935              		.loc 10 279 83 discriminator 2 view .LVU1464
 5936 003a 9FED097B 		vldr.64	d7, .L118
 5937 003e 30EE070B 		vadd.f64	d0, d0, d7
 279:TapeLooper.cpp ****         LEDs[i].Update();
 5938              		.loc 10 279 20 discriminator 2 view .LVU1465
 5939 0042 B7EEC00B 		vcvt.f32.f64	s0, d0
 5940 0046 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 5941              	.LVL243:
 280:TapeLooper.cpp ****     }
 5942              		.loc 10 280 9 is_stmt 1 discriminator 2 view .LVU1466
 280:TapeLooper.cpp ****     }
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 261


 5943              		.loc 10 280 23 is_stmt 0 discriminator 2 view .LVU1467
 5944 004a 2846     		mov	r0, r5
 5945 004c FFF7FEFF 		bl	_ZN5daisy3Led6UpdateEv
 5946              	.LVL244:
 277:TapeLooper.cpp ****     {
 5947              		.loc 10 277 5 is_stmt 1 discriminator 2 view .LVU1468
 277:TapeLooper.cpp ****     {
 5948              		.loc 10 277 22 discriminator 2 view .LVU1469
 5949 0050 B442     		cmp	r4, r6
 5950 0052 05F11C05 		add	r5, r5, #28
 5951 0056 DAD1     		bne	.L115
 5952              	.LBE2391:
 282:TapeLooper.cpp **** 
 5953              		.loc 10 282 1 is_stmt 0 view .LVU1470
 5954 0058 BDEC028B 		vldm	sp!, {d8}
 5955              		.cfi_restore 80
 5956              		.cfi_restore 81
 5957              		.cfi_def_cfa_offset 16
 5958 005c 70BD     		pop	{r4, r5, r6, pc}
 5959              	.L119:
 5960 005e 00BF     		.align	3
 5961              	.L118:
 5962 0060 9A999999 		.word	-1717986918
 5963 0064 9999F13F 		.word	1072798105
 5964 0068 00000000 		.word	.LANCHOR0
 5965 006c 00000000 		.word	.LANCHOR28
 5966 0070 00000000 		.word	.LANCHOR4
 5967              		.cfi_endproc
 5968              	.LFE4725:
 5970              		.section	.text._Z6updatev,"ax",%progbits
 5971              		.align	1
 5972              		.p2align 2,,3
 5973              		.global	_Z6updatev
 5974              		.syntax unified
 5975              		.thumb
 5976              		.thumb_func
 5977              		.fpu fpv5-d16
 5979              	_Z6updatev:
 5980              	.LFB4726:
 285:TapeLooper.cpp ****     update_buttons();
 5981              		.loc 10 285 1 is_stmt 1 view -0
 5982              		.cfi_startproc
 5983              		@ args = 0, pretend = 0, frame = 0
 5984              		@ frame_needed = 0, uses_anonymous_args = 0
 286:TapeLooper.cpp ****     update_pots();
 5985              		.loc 10 286 5 view .LVU1472
 285:TapeLooper.cpp ****     update_buttons();
 5986              		.loc 10 285 1 is_stmt 0 view .LVU1473
 5987 0000 08B5     		push	{r3, lr}
 5988              		.cfi_def_cfa_offset 8
 5989              		.cfi_offset 3, -8
 5990              		.cfi_offset 14, -4
 286:TapeLooper.cpp ****     update_pots();
 5991              		.loc 10 286 19 view .LVU1474
 5992 0002 FFF7FEFF 		bl	_Z14update_buttonsv
 5993              	.LVL245:
 287:TapeLooper.cpp ****     update_LEDs();
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 262


 5994              		.loc 10 287 5 is_stmt 1 view .LVU1475
 287:TapeLooper.cpp ****     update_LEDs();
 5995              		.loc 10 287 16 is_stmt 0 view .LVU1476
 5996 0006 FFF7FEFF 		bl	_Z11update_potsv
 5997              	.LVL246:
 288:TapeLooper.cpp **** }
 5998              		.loc 10 288 5 is_stmt 1 view .LVU1477
 289:TapeLooper.cpp **** 
 5999              		.loc 10 289 1 is_stmt 0 view .LVU1478
 6000 000a BDE80840 		pop	{r3, lr}
 6001              		.cfi_restore 14
 6002              		.cfi_restore 3
 6003              		.cfi_def_cfa_offset 0
 288:TapeLooper.cpp **** }
 6004              		.loc 10 288 16 view .LVU1479
 6005 000e FFF7FEBF 		b	_Z11update_LEDsv
 6006              	.LVL247:
 6007              		.cfi_endproc
 6008              	.LFE4726:
 6010 0012 00BF     		.section	.rodata._Z9print_allv.str1.4,"aMS",%progbits,1
 6011              		.align	2
 6012              	.LC0:
 6013 0000 54524B09 		.ascii	"TRK\011V\011V_in\012%d\011%d\011%d\000"
 6013      5609565F 
 6013      696E0A25 
 6013      64092564 
 6013      09256400 
 6014              		.section	.text._Z9print_allv,"ax",%progbits
 6015              		.align	1
 6016              		.p2align 2,,3
 6017              		.global	_Z9print_allv
 6018              		.syntax unified
 6019              		.thumb
 6020              		.thumb_func
 6021              		.fpu fpv5-d16
 6023              	_Z9print_allv:
 6024              	.LFB4738:
 344:TapeLooper.cpp **** 
 345:TapeLooper.cpp **** void print_all()
 346:TapeLooper.cpp **** { //this is for debugging and will be deleted TODO
 6025              		.loc 10 346 1 is_stmt 1 view -0
 6026              		.cfi_startproc
 6027              		@ args = 0, pretend = 0, frame = 0
 6028              		@ frame_needed = 0, uses_anonymous_args = 0
 347:TapeLooper.cpp **** 
 348:TapeLooper.cpp **** 
 349:TapeLooper.cpp **** 	// hw.PrintLine("PLY\tTC\n%d\t%d", play_pause_button.Pressed(), static_cast<int>(hw.adc.GetMuxFloa
 350:TapeLooper.cpp **** 
 351:TapeLooper.cpp ****     // hw.PrintLine("TC\tSP\n%d\t%d", static_cast<int>(hw.adc.GetMuxFloat(MUX, TC1)*100.f), static_
 352:TapeLooper.cpp **** 
 353:TapeLooper.cpp **** hw.PrintLine("TRK\tV\tV_in\n%d\t%d\t%d",
 6029              		.loc 10 353 1 view .LVU1481
 6030              		.loc 10 353 13 is_stmt 0 view .LVU1482
 6031 0000 124A     		ldr	r2, .L124
 6032              	.LBB2392:
 6033              	.LBB2393:
 207:TapeLoop.h    **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 263


 6034              		.loc 8 207 33 view .LVU1483
 6035 0002 6C20     		movs	r0, #108
 6036 0004 124B     		ldr	r3, .L124+4
 6037              	.LBE2393:
 6038              	.LBE2392:
 354:TapeLooper.cpp **** 				active_track,
 355:TapeLooper.cpp **** 				static_cast<int>(tracks[active_track].get_Volume()*100),
 356:TapeLooper.cpp **** 				static_cast<int>(hw.adc.GetMuxFloat(MUX, VOL1)*100));
 6039              		.loc 10 356 40 view .LVU1484
 6040 0006 0021     		movs	r1, #0
 346:TapeLooper.cpp **** 
 6041              		.loc 10 346 1 view .LVU1485
 6042 0008 10B5     		push	{r4, lr}
 6043              		.cfi_def_cfa_offset 8
 6044              		.cfi_offset 4, -8
 6045              		.cfi_offset 14, -4
 353:TapeLooper.cpp **** 				active_track,
 6046              		.loc 10 353 13 view .LVU1486
 6047 000a 1468     		ldr	r4, [r2]
 6048              	.LVL248:
 6049              	.LBB2396:
 6050              	.LBI2392:
 207:TapeLoop.h    **** 
 6051              		.loc 8 207 11 is_stmt 1 view .LVU1487
 6052              	.LBB2394:
 207:TapeLoop.h    **** 
 6053              		.loc 8 207 26 view .LVU1488
 207:TapeLoop.h    **** 
 6054              		.loc 8 207 26 is_stmt 0 view .LVU1489
 6055              	.LBE2394:
 6056              	.LBE2396:
 6057              		.loc 10 356 40 view .LVU1490
 6058 000c 0322     		movs	r2, #3
 6059              	.LBB2397:
 6060              	.LBB2395:
 207:TapeLoop.h    **** 
 6061              		.loc 8 207 33 view .LVU1491
 6062 000e 00FB0433 		mla	r3, r0, r4, r3
 6063              	.LBE2395:
 6064              	.LBE2397:
 6065              		.loc 10 356 40 view .LVU1492
 6066 0012 1048     		ldr	r0, .L124+8
 346:TapeLooper.cpp **** 
 6067              		.loc 10 346 1 view .LVU1493
 6068 0014 2DED028B 		vpush.64	{d8}
 6069              		.cfi_def_cfa_offset 16
 6070              		.cfi_offset 80, -16
 6071              		.cfi_offset 81, -12
 355:TapeLooper.cpp **** 				static_cast<int>(hw.adc.GetMuxFloat(MUX, VOL1)*100));
 6072              		.loc 10 355 55 view .LVU1494
 6073 0018 DFED0F8A 		vldr.32	s17, .L124+12
 6074 001c 93ED0F8A 		vldr.32	s16, [r3, #60]
 6075              		.loc 10 356 40 view .LVU1495
 6076 0020 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 6077              	.LVL249:
 6078              		.loc 10 356 51 view .LVU1496
 6079 0024 20EE280A 		vmul.f32	s0, s0, s17
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 264


 6080              	.LBB2398:
 6081              	.LBB2399:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 265


  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../../libDaisy//src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../../libDaisy//src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../../libDaisy//src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../../libDaisy//src/daisy_seed.h ****      */
 105:../../libDaisy//src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../../libDaisy//src/daisy_seed.h **** 
 107:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../../libDaisy//src/daisy_seed.h ****      */
 109:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 110:../../libDaisy//src/daisy_seed.h **** 
 111:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../../libDaisy//src/daisy_seed.h ****      */
 113:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../../libDaisy//src/daisy_seed.h **** 
 115:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 116:../../libDaisy//src/daisy_seed.h ****      */
 117:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 118:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../../libDaisy//src/daisy_seed.h ****     {
 120:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 121:../../libDaisy//src/daisy_seed.h ****     }
 122:../../libDaisy//src/daisy_seed.h **** 
 123:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../../libDaisy//src/daisy_seed.h ****     */
 125:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 126:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 6082              		.loc 3 128 23 view .LVU1497
 6083 0028 2146     		mov	r1, r4
 6084              	.LBE2399:
 6085              	.LBE2398:
 355:TapeLooper.cpp **** 				static_cast<int>(hw.adc.GetMuxFloat(MUX, VOL1)*100));
 6086              		.loc 10 355 55 view .LVU1498
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 266


 6087 002a 28EE288A 		vmul.f32	s16, s16, s17
 6088              	.LBB2403:
 6089              	.LBB2400:
 6090              		.loc 3 128 23 view .LVU1499
 6091 002e 0B48     		ldr	r0, .L124+16
 6092 0030 FDEEC07A 		vcvt.s32.f32	s15, s0
 6093              	.LBE2400:
 6094              	.LBE2403:
 353:TapeLooper.cpp **** 				active_track,
 6095              		.loc 10 353 13 view .LVU1500
 6096 0034 BDEEC88A 		vcvt.s32.f32	s16, s16
 6097              	.LVL250:
 6098              	.LBB2404:
 6099              	.LBI2398:
 126:../../libDaisy//src/daisy_seed.h ****     {
 6100              		.loc 3 126 17 is_stmt 1 view .LVU1501
 6101              	.LBB2401:
 6102              		.loc 3 128 23 is_stmt 0 view .LVU1502
 6103 0038 17EE903A 		vmov	r3, s15	@ int
 6104 003c 18EE102A 		vmov	r2, s16	@ int
 6105              	.LBE2401:
 6106              	.LBE2404:
 357:TapeLooper.cpp **** 				
 358:TapeLooper.cpp **** }
 6107              		.loc 10 358 1 view .LVU1503
 6108 0040 BDEC028B 		vldm	sp!, {d8}
 6109              		.cfi_restore 80
 6110              		.cfi_restore 81
 6111              		.cfi_def_cfa_offset 8
 6112              	.LVL251:
 6113              		.loc 10 358 1 view .LVU1504
 6114 0044 BDE81040 		pop	{r4, lr}
 6115              		.cfi_restore 14
 6116              		.cfi_restore 4
 6117              		.cfi_def_cfa_offset 0
 6118              	.LVL252:
 6119              	.LBB2405:
 6120              	.LBB2402:
 6121              		.loc 3 128 23 view .LVU1505
 6122 0048 FFF7FEBF 		b	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 6123              	.LVL253:
 6124              	.L125:
 6125              		.loc 3 128 23 view .LVU1506
 6126              		.align	2
 6127              	.L124:
 6128 004c 00000000 		.word	.LANCHOR2
 6129 0050 00000000 		.word	.LANCHOR0
 6130 0054 18000000 		.word	.LANCHOR4+24
 6131 0058 0000C842 		.word	1120403456
 6132 005c 00000000 		.word	.LC0
 6133              	.LBE2402:
 6134              	.LBE2405:
 6135              		.cfi_endproc
 6136              	.LFE4738:
 6138              		.section	.text.startup.main,"ax",%progbits
 6139              		.align	1
 6140              		.p2align 2,,3
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 267


 6141              		.global	main
 6142              		.syntax unified
 6143              		.thumb
 6144              		.thumb_func
 6145              		.fpu fpv5-d16
 6147              	main:
 6148              	.LFB4739:
 359:TapeLooper.cpp **** 
 360:TapeLooper.cpp **** 
 361:TapeLooper.cpp **** int main(void)
 362:TapeLooper.cpp **** {
 6149              		.loc 10 362 1 is_stmt 1 view -0
 6150              		.cfi_startproc
 6151              		@ args = 0, pretend = 0, frame = 0
 6152              		@ frame_needed = 0, uses_anonymous_args = 0
 363:TapeLooper.cpp ****     hw.Init();
 6153              		.loc 10 363 5 view .LVU1508
 362:TapeLooper.cpp ****     hw.Init();
 6154              		.loc 10 362 1 is_stmt 0 view .LVU1509
 6155 0000 08B5     		push	{r3, lr}
 6156              		.cfi_def_cfa_offset 8
 6157              		.cfi_offset 3, -8
 6158              		.cfi_offset 14, -4
 6159              		.loc 10 363 12 view .LVU1510
 6160 0002 0021     		movs	r1, #0
 6161 0004 0C48     		ldr	r0, .L129
 6162 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6163              	.LVL254:
 364:TapeLooper.cpp ****     bool debug = false;
 6164              		.loc 10 364 5 is_stmt 1 view .LVU1511
 365:TapeLooper.cpp **** 
 366:TapeLooper.cpp ****     tracks_Init();
 6165              		.loc 10 366 5 view .LVU1512
 6166              		.loc 10 366 16 is_stmt 0 view .LVU1513
 6167 000a FFF7FEFF 		bl	_Z11tracks_Initv
 6168              	.LVL255:
 367:TapeLooper.cpp ****     peripherals_Init();
 6169              		.loc 10 367 5 is_stmt 1 view .LVU1514
 6170              		.loc 10 367 21 is_stmt 0 view .LVU1515
 6171 000e FFF7FEFF 		bl	_Z16peripherals_Initv
 6172              	.LVL256:
 368:TapeLooper.cpp **** 
 369:TapeLooper.cpp ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 6173              		.loc 10 369 5 is_stmt 1 view .LVU1516
 6174              		.loc 10 369 25 is_stmt 0 view .LVU1517
 6175 0012 0421     		movs	r1, #4
 6176 0014 0848     		ldr	r0, .L129
 6177 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 6178              	.LVL257:
 370:TapeLooper.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 6179              		.loc 10 370 5 is_stmt 1 view .LVU1518
 6180              		.loc 10 370 26 is_stmt 0 view .LVU1519
 6181 001a 0321     		movs	r1, #3
 6182 001c 0648     		ldr	r0, .L129
 6183 001e FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 6184              	.LVL258:
 371:TapeLooper.cpp ****     hw.StartAudio(AudioCallback);
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 268


 6185              		.loc 10 371 5 is_stmt 1 view .LVU1520
 6186              		.loc 10 371 18 is_stmt 0 view .LVU1521
 6187 0022 0649     		ldr	r1, .L129+4
 6188 0024 0448     		ldr	r0, .L129
 6189 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 6190              	.LVL259:
 372:TapeLooper.cpp **** 
 373:TapeLooper.cpp ****     if(debug)
 6191              		.loc 10 373 5 is_stmt 1 view .LVU1522
 6192              	.L127:
 374:TapeLooper.cpp ****     {
 375:TapeLooper.cpp ****         hw.StartLog(true);
 376:TapeLooper.cpp ****     }
 377:TapeLooper.cpp **** 
 378:TapeLooper.cpp ****     while(1)
 6193              		.loc 10 378 5 view .LVU1523
 379:TapeLooper.cpp ****     {
 380:TapeLooper.cpp ****         update();
 6194              		.loc 10 380 9 view .LVU1524
 6195              	.LBB2408:
 6196              	.LBI2408:
 284:TapeLooper.cpp **** {
 6197              		.loc 10 284 6 view .LVU1525
 6198              	.LBB2409:
 286:TapeLooper.cpp ****     update_pots();
 6199              		.loc 10 286 5 view .LVU1526
 286:TapeLooper.cpp ****     update_pots();
 6200              		.loc 10 286 19 is_stmt 0 view .LVU1527
 6201 002a FFF7FEFF 		bl	_Z14update_buttonsv
 6202              	.LVL260:
 287:TapeLooper.cpp ****     update_LEDs();
 6203              		.loc 10 287 5 is_stmt 1 view .LVU1528
 287:TapeLooper.cpp ****     update_LEDs();
 6204              		.loc 10 287 16 is_stmt 0 view .LVU1529
 6205 002e FFF7FEFF 		bl	_Z11update_potsv
 6206              	.LVL261:
 288:TapeLooper.cpp **** }
 6207              		.loc 10 288 5 is_stmt 1 view .LVU1530
 288:TapeLooper.cpp **** }
 6208              		.loc 10 288 16 is_stmt 0 view .LVU1531
 6209 0032 FFF7FEFF 		bl	_Z11update_LEDsv
 6210              	.LVL262:
 6211 0036 F8E7     		b	.L127
 6212              	.L130:
 6213              		.align	2
 6214              	.L129:
 6215 0038 00000000 		.word	.LANCHOR4
 6216 003c 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 6217              	.LBE2409:
 6218              	.LBE2408:
 6219              		.cfi_endproc
 6220              	.LFE4739:
 6222              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 6223              		.align	1
 6224              		.p2align 2,,3
 6225              		.syntax unified
 6226              		.thumb
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 269


 6227              		.thumb_func
 6228              		.fpu fpv5-d16
 6230              	_GLOBAL__sub_I_hw:
 6231              	.LFB5451:
 381:TapeLooper.cpp **** 
 382:TapeLooper.cpp **** 
 383:TapeLooper.cpp ****         if(debug)
 384:TapeLooper.cpp ****         {
 385:TapeLooper.cpp ****             print_all();
 386:TapeLooper.cpp ****         }
 387:TapeLooper.cpp ****     }
 388:TapeLooper.cpp **** }
 6232              		.loc 10 388 1 is_stmt 1 view -0
 6233              		.cfi_startproc
 6234              		@ args = 0, pretend = 0, frame = 0
 6235              		@ frame_needed = 0, uses_anonymous_args = 0
 6236              	.LBB2452:
 6237              	.LBI2452:
 6238              		.loc 10 388 1 view .LVU1533
 6239              	.LVL263:
 6240              	.LBB2453:
 6241              	.LBB2454:
 6242              	.LBI2454:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 6243              		.loc 3 21 5 view .LVU1534
 6244              	.LBB2455:
 6245              	.LBB2456:
 6246              	.LBI2456:
 6247              		.file 22 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 270


  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 271


  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 272


 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 6248              		.loc 22 166 5 view .LVU1535
 6249              	.LBE2456:
 6250              	.LBE2455:
 6251              	.LBE2454:
 6252              	.LBE2453:
 6253              	.LBE2452:
 6254              		.loc 10 388 1 is_stmt 0 view .LVU1536
 6255 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6256              		.cfi_def_cfa_offset 40
 6257              		.cfi_offset 3, -40
 6258              		.cfi_offset 4, -36
 6259              		.cfi_offset 5, -32
 6260              		.cfi_offset 6, -28
 6261              		.cfi_offset 7, -24
 6262              		.cfi_offset 8, -20
 6263              		.cfi_offset 9, -16
 6264              		.cfi_offset 10, -12
 6265              		.cfi_offset 11, -8
 6266              		.cfi_offset 14, -4
 6267              	.LBB2491:
 6268              	.LBB2489:
 6269              	.LBB2477:
 6270              	.LBB2475:
 6271              	.LBB2461:
 6272              	.LBB2457:
 6273              	.LBB2458:
 6274              		.loc 22 166 34 view .LVU1537
 6275 0004 4848     		ldr	r0, .L133
 6276 0006 0025     		movs	r5, #0
 6277              	.LBE2458:
 6278              	.LBE2457:
 6279              	.LBE2461:
 6280              	.LBE2475:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 273


 6281              	.LBE2477:
  13:TapeLooper.cpp **** const int        num_adc_channels = 3;
 6282              		.loc 10 13 18 view .LVU1538
 6283 0008 484C     		ldr	r4, .L133+4
  91:TapeLooper.cpp **** 
 6284              		.loc 10 91 53 view .LVU1539
 6285 000a 6C27     		movs	r7, #108
  13:TapeLooper.cpp **** const int        num_adc_channels = 3;
 6286              		.loc 10 13 18 view .LVU1540
 6287 000c 4849     		ldr	r1, .L133+8
 6288 000e 2246     		mov	r2, r4
 6289              	.LBB2478:
 6290              	.LBB2476:
 6291              	.LBB2462:
 6292              	.LBB2460:
 6293              	.LBB2459:
 6294              		.loc 22 166 34 view .LVU1541
 6295 0010 0560     		str	r5, [r0]
 6296              	.LVL264:
 6297              		.loc 22 166 34 view .LVU1542
 6298              	.LBE2459:
 6299              	.LBE2460:
 6300              	.LBE2462:
 6301              	.LBB2463:
 6302              	.LBI2463:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 6303              		.loc 7 95 5 is_stmt 1 view .LVU1543
 6304              	.LBB2464:
 6305              	.LBB2465:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 6306              		.loc 7 95 35 is_stmt 0 view .LVU1544
 6307 0012 4561     		str	r5, [r0, #20]
 6308              	.LVL265:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 6309              		.loc 7 95 35 view .LVU1545
 6310              	.LBE2465:
 6311              	.LBE2464:
 6312              	.LBE2463:
 6313              	.LBB2466:
 6314              	.LBI2466:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 6315              		.loc 6 109 5 is_stmt 1 view .LVU1546
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 6316              		.loc 6 109 5 is_stmt 0 view .LVU1547
 6317              	.LBE2466:
 6318              	.LBB2467:
 6319              	.LBI2467:
 6320              		.file 23 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 274


  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 275


  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 6321              		.loc 23 84 5 is_stmt 1 view .LVU1548
 6322              	.LBB2468:
 6323              	.LBB2469:
 6324              		.loc 23 84 33 is_stmt 0 view .LVU1549
 6325 0014 0562     		str	r5, [r0, #32]
 6326              	.LVL266:
 6327              		.loc 23 84 33 view .LVU1550
 6328              	.LBE2469:
 6329              	.LBE2468:
 6330              	.LBE2467:
 6331              	.LBB2470:
 6332              	.LBI2470:
  40:../../libDaisy//src/hid/usb.h **** 
 6333              		.loc 5 40 5 is_stmt 1 view .LVU1551
  40:../../libDaisy//src/hid/usb.h **** 
 6334              		.loc 5 40 5 is_stmt 0 view .LVU1552
 6335              	.LBE2470:
 6336              	.LBB2471:
 6337              	.LBI2471:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 6338              		.loc 4 96 5 is_stmt 1 view .LVU1553
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 6339              		.loc 4 96 5 is_stmt 0 view .LVU1554
 6340              	.LBE2471:
 6341              	.LBB2472:
 6342              	.LBI2472:
 6343              		.file 24 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 276


  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 277


  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 6344              		.loc 24 108 5 is_stmt 1 view .LVU1555
 6345              	.LBB2473:
 6346              	.LBB2474:
 6347              		.loc 24 108 33 is_stmt 0 view .LVU1556
 6348 0016 C563     		str	r5, [r0, #60]
 6349              	.LVL267:
 6350              		.loc 24 108 33 view .LVU1557
 6351              	.LBE2474:
 6352              	.LBE2473:
 6353              	.LBE2472:
 6354              	.LBE2476:
 6355              	.LBE2478:
  13:TapeLooper.cpp **** const int        num_adc_channels = 3;
 6356              		.loc 10 13 18 view .LVU1558
 6357 0018 FFF7FEFF 		bl	__aeabi_atexit
 6358              	.LVL268:
 6359              	.LBB2479:
 6360              	.LBI2479:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 278


  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6361              		.loc 1 41 5 is_stmt 1 view .LVU1559
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6362              		.loc 1 41 5 is_stmt 0 view .LVU1560
 6363              	.LBE2479:
  60:TapeLooper.cpp **** Switch track2_sel;
 6364              		.loc 10 60 8 view .LVU1561
 6365 001c 2246     		mov	r2, r4
 6366 001e 4549     		ldr	r1, .L133+12
 6367 0020 4548     		ldr	r0, .L133+16
 6368 0022 FFF7FEFF 		bl	__aeabi_atexit
 6369              	.LVL269:
 6370              	.LBB2480:
 6371              	.LBI2480:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6372              		.loc 1 41 5 is_stmt 1 view .LVU1562
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6373              		.loc 1 41 5 is_stmt 0 view .LVU1563
 6374              	.LBE2480:
  61:TapeLooper.cpp **** Switch track3_sel;
 6375              		.loc 10 61 8 view .LVU1564
 6376 0026 2246     		mov	r2, r4
 6377 0028 4249     		ldr	r1, .L133+12
 6378 002a 4448     		ldr	r0, .L133+20
 6379 002c FFF7FEFF 		bl	__aeabi_atexit
 6380              	.LVL270:
 6381              	.LBB2481:
 6382              	.LBI2481:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6383              		.loc 1 41 5 is_stmt 1 view .LVU1565
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6384              		.loc 1 41 5 is_stmt 0 view .LVU1566
 6385              	.LBE2481:
  62:TapeLooper.cpp **** Switch track4_sel;
 6386              		.loc 10 62 8 view .LVU1567
 6387 0030 2246     		mov	r2, r4
 6388 0032 4049     		ldr	r1, .L133+12
 6389 0034 4248     		ldr	r0, .L133+24
 6390 0036 FFF7FEFF 		bl	__aeabi_atexit
 6391              	.LVL271:
 6392              	.LBB2482:
 6393              	.LBI2482:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6394              		.loc 1 41 5 is_stmt 1 view .LVU1568
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6395              		.loc 1 41 5 is_stmt 0 view .LVU1569
 6396              	.LBE2482:
  63:TapeLooper.cpp **** 
 6397              		.loc 10 63 8 view .LVU1570
 6398 003a 2246     		mov	r2, r4
 6399 003c 3D49     		ldr	r1, .L133+12
 6400 003e 4148     		ldr	r0, .L133+28
 6401 0040 FFF7FEFF 		bl	__aeabi_atexit
 6402              	.LVL272:
 6403              	.LBB2483:
 6404              	.LBI2483:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 279


 6405              		.loc 1 41 5 is_stmt 1 view .LVU1571
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6406              		.loc 1 41 5 is_stmt 0 view .LVU1572
 6407              	.LBE2483:
  69:TapeLooper.cpp **** float track1_LED_Brightness = 1.f;
 6408              		.loc 10 69 7 view .LVU1573
 6409 0044 404E     		ldr	r6, .L133+32
  66:TapeLooper.cpp **** Switch record_button;
 6410              		.loc 10 66 8 view .LVU1574
 6411 0046 2246     		mov	r2, r4
 6412 0048 3A49     		ldr	r1, .L133+12
 6413 004a 4048     		ldr	r0, .L133+36
 6414 004c FFF7FEFF 		bl	__aeabi_atexit
 6415              	.LVL273:
 6416              	.LBB2484:
 6417              	.LBI2484:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6418              		.loc 1 41 5 is_stmt 1 view .LVU1575
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 6419              		.loc 1 41 5 is_stmt 0 view .LVU1576
 6420              	.LBE2484:
  67:TapeLooper.cpp **** 
 6421              		.loc 10 67 8 view .LVU1577
 6422 0050 2246     		mov	r2, r4
 6423 0052 3849     		ldr	r1, .L133+12
 6424 0054 3E48     		ldr	r0, .L133+40
 6425 0056 FFF7FEFF 		bl	__aeabi_atexit
 6426              	.LVL274:
 6427              	.LBB2485:
 6428              	.LBI2485:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6429              		.loc 2 24 5 is_stmt 1 view .LVU1578
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6430              		.loc 2 24 5 is_stmt 0 view .LVU1579
 6431              	.LBE2485:
  69:TapeLooper.cpp **** float track1_LED_Brightness = 1.f;
 6432              		.loc 10 69 7 view .LVU1580
 6433 005a 2246     		mov	r2, r4
 6434 005c 3146     		mov	r1, r6
 6435 005e 3D48     		ldr	r0, .L133+44
 6436 0060 FFF7FEFF 		bl	__aeabi_atexit
 6437              	.LVL275:
 6438              	.LBB2486:
 6439              	.LBI2486:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6440              		.loc 2 24 5 is_stmt 1 view .LVU1581
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6441              		.loc 2 24 5 is_stmt 0 view .LVU1582
 6442              	.LBE2486:
  71:TapeLooper.cpp **** float track2_LED_Brightness = 1.f;
 6443              		.loc 10 71 7 view .LVU1583
 6444 0064 2246     		mov	r2, r4
 6445 0066 3146     		mov	r1, r6
 6446 0068 3B48     		ldr	r0, .L133+48
 6447 006a FFF7FEFF 		bl	__aeabi_atexit
 6448              	.LVL276:
 6449              	.LBB2487:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 280


 6450              	.LBI2487:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6451              		.loc 2 24 5 is_stmt 1 view .LVU1584
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6452              		.loc 2 24 5 is_stmt 0 view .LVU1585
 6453              	.LBE2487:
  73:TapeLooper.cpp **** float track3_LED_Brightness = 1.f;
 6454              		.loc 10 73 7 view .LVU1586
 6455 006e 2246     		mov	r2, r4
 6456 0070 3146     		mov	r1, r6
 6457 0072 3A48     		ldr	r0, .L133+52
 6458 0074 FFF7FEFF 		bl	__aeabi_atexit
 6459              	.LVL277:
 6460              	.LBB2488:
 6461              	.LBI2488:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6462              		.loc 2 24 5 is_stmt 1 view .LVU1587
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 6463              		.loc 2 24 5 is_stmt 0 view .LVU1588
 6464              	.LBE2488:
  75:TapeLooper.cpp **** float track4_LED_Brightness = 1.f;
 6465              		.loc 10 75 7 view .LVU1589
 6466 0078 2246     		mov	r2, r4
 6467 007a 3146     		mov	r1, r6
 6468 007c 3848     		ldr	r0, .L133+56
 6469 007e FFF7FEFF 		bl	__aeabi_atexit
 6470              	.LVL278:
  78:TapeLooper.cpp **** 
 6471              		.loc 10 78 13 is_stmt 1 view .LVU1590
  78:TapeLooper.cpp **** 
 6472              		.loc 10 78 5 is_stmt 0 view .LVU1591
 6473 0082 2246     		mov	r2, r4
 6474 0084 3749     		ldr	r1, .L133+60
 6475 0086 2846     		mov	r0, r5
 6476 0088 FFF7FEFF 		bl	__aeabi_atexit
 6477              	.LVL279:
  81:TapeLooper.cpp **** float DSY_SDRAM_BSS track2_loc[2][TapeLoop::MAX_SIZE];
 6478              		.loc 10 81 38 view .LVU1592
 6479 008c 364B     		ldr	r3, .L133+64
 6480 008e 3749     		ldr	r1, .L133+68
 6481 0090 1846     		mov	r0, r3
  81:TapeLooper.cpp **** float DSY_SDRAM_BSS track2_loc[2][TapeLoop::MAX_SIZE];
 6482              		.loc 10 81 21 view .LVU1593
 6483 0092 DFF8F080 		ldr	r8, .L133+92
  81:TapeLooper.cpp **** float DSY_SDRAM_BSS track2_loc[2][TapeLoop::MAX_SIZE];
 6484              		.loc 10 81 38 view .LVU1594
 6485 0096 FFF7FEFF 		bl	_ZN8TapeLoopC1ERA2_A320000_f
 6486              	.LVL280:
  81:TapeLooper.cpp **** float DSY_SDRAM_BSS track2_loc[2][TapeLoop::MAX_SIZE];
 6487              		.loc 10 81 21 view .LVU1595
 6488 009a 334B     		ldr	r3, .L133+64
  83:TapeLooper.cpp **** float DSY_SDRAM_BSS track3_loc[2][TapeLoop::MAX_SIZE];
 6489              		.loc 10 83 38 view .LVU1596
 6490 009c DFF8E8B0 		ldr	fp, .L133+96
  81:TapeLooper.cpp **** float DSY_SDRAM_BSS track2_loc[2][TapeLoop::MAX_SIZE];
 6491              		.loc 10 81 21 view .LVU1597
 6492 00a0 2246     		mov	r2, r4
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 281


 6493 00a2 1846     		mov	r0, r3
 6494 00a4 4146     		mov	r1, r8
 6495 00a6 FFF7FEFF 		bl	__aeabi_atexit
 6496              	.LVL281:
  85:TapeLooper.cpp **** float DSY_SDRAM_BSS track4_loc[2][TapeLoop::MAX_SIZE];
 6497              		.loc 10 85 38 view .LVU1598
 6498 00aa DFF8E0A0 		ldr	r10, .L133+100
  83:TapeLooper.cpp **** float DSY_SDRAM_BSS track3_loc[2][TapeLoop::MAX_SIZE];
 6499              		.loc 10 83 38 view .LVU1599
 6500 00ae 3049     		ldr	r1, .L133+72
 6501 00b0 5846     		mov	r0, fp
 6502 00b2 FFF7FEFF 		bl	_ZN8TapeLoopC1ERA2_A320000_f
 6503              	.LVL282:
  83:TapeLooper.cpp **** float DSY_SDRAM_BSS track3_loc[2][TapeLoop::MAX_SIZE];
 6504              		.loc 10 83 21 view .LVU1600
 6505 00b6 2246     		mov	r2, r4
 6506 00b8 4146     		mov	r1, r8
 6507 00ba 5846     		mov	r0, fp
 6508 00bc FFF7FEFF 		bl	__aeabi_atexit
 6509              	.LVL283:
  87:TapeLooper.cpp **** 
 6510              		.loc 10 87 38 view .LVU1601
 6511 00c0 DFF8CC90 		ldr	r9, .L133+104
  85:TapeLooper.cpp **** float DSY_SDRAM_BSS track4_loc[2][TapeLoop::MAX_SIZE];
 6512              		.loc 10 85 38 view .LVU1602
 6513 00c4 2B49     		ldr	r1, .L133+76
 6514 00c6 5046     		mov	r0, r10
 6515 00c8 FFF7FEFF 		bl	_ZN8TapeLoopC1ERA2_A320000_f
 6516              	.LVL284:
  85:TapeLooper.cpp **** float DSY_SDRAM_BSS track4_loc[2][TapeLoop::MAX_SIZE];
 6517              		.loc 10 85 21 view .LVU1603
 6518 00cc 2246     		mov	r2, r4
 6519 00ce 4146     		mov	r1, r8
 6520 00d0 5046     		mov	r0, r10
 6521 00d2 FFF7FEFF 		bl	__aeabi_atexit
 6522              	.LVL285:
  87:TapeLooper.cpp **** 
 6523              		.loc 10 87 38 view .LVU1604
 6524 00d6 2849     		ldr	r1, .L133+80
 6525 00d8 4846     		mov	r0, r9
  91:TapeLooper.cpp **** 
 6526              		.loc 10 91 53 view .LVU1605
 6527 00da 284E     		ldr	r6, .L133+84
  87:TapeLooper.cpp **** 
 6528              		.loc 10 87 38 view .LVU1606
 6529 00dc FFF7FEFF 		bl	_ZN8TapeLoopC1ERA2_A320000_f
 6530              	.LVL286:
  87:TapeLooper.cpp **** 
 6531              		.loc 10 87 21 view .LVU1607
 6532 00e0 2246     		mov	r2, r4
 6533 00e2 4146     		mov	r1, r8
 6534 00e4 4846     		mov	r0, r9
 6535 00e6 FFF7FEFF 		bl	__aeabi_atexit
 6536              	.LVL287:
  91:TapeLooper.cpp **** 
 6537              		.loc 10 91 53 view .LVU1608
 6538 00ea 1F4B     		ldr	r3, .L133+64
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 282


 6539 00ec 3A46     		mov	r2, r7
 6540 00ee 3046     		mov	r0, r6
 6541 00f0 1946     		mov	r1, r3
 6542 00f2 FFF7FEFF 		bl	memcpy
 6543              	.LVL288:
 6544 00f6 3A46     		mov	r2, r7
 6545 00f8 5946     		mov	r1, fp
 6546 00fa F019     		adds	r0, r6, r7
 6547 00fc FFF7FEFF 		bl	memcpy
 6548              	.LVL289:
 6549 0100 3A46     		mov	r2, r7
 6550 0102 5146     		mov	r1, r10
 6551 0104 06F1D800 		add	r0, r6, #216
 6552 0108 FFF7FEFF 		bl	memcpy
 6553              	.LVL290:
 6554 010c 3A46     		mov	r2, r7
 6555 010e 4946     		mov	r1, r9
 6556 0110 06F5A270 		add	r0, r6, #324
 6557 0114 FFF7FEFF 		bl	memcpy
 6558              	.LVL291:
  91:TapeLooper.cpp **** 
 6559              		.loc 10 91 10 view .LVU1609
 6560 0118 2246     		mov	r2, r4
 6561 011a 2846     		mov	r0, r5
 6562 011c 1849     		ldr	r1, .L133+88
 6563              	.LBE2489:
 6564              	.LBE2491:
 6565              		.loc 10 388 1 view .LVU1610
 6566 011e BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6567              		.cfi_restore 14
 6568              		.cfi_restore 11
 6569              		.cfi_restore 10
 6570              		.cfi_restore 9
 6571              		.cfi_restore 8
 6572              		.cfi_restore 7
 6573              		.cfi_restore 6
 6574              		.cfi_restore 5
 6575              		.cfi_restore 4
 6576              		.cfi_restore 3
 6577              		.cfi_def_cfa_offset 0
 6578              	.LBB2492:
 6579              	.LBB2490:
  91:TapeLooper.cpp **** 
 6580              		.loc 10 91 10 view .LVU1611
 6581 0122 FFF7FEBF 		b	__aeabi_atexit
 6582              	.LVL292:
 6583              	.L134:
 6584 0126 00BF     		.align	2
 6585              	.L133:
 6586 0128 00000000 		.word	.LANCHOR4
 6587 012c 00000000 		.word	__dso_handle
 6588 0130 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 6589 0134 00000000 		.word	_ZN5daisy6SwitchD1Ev
 6590 0138 00000000 		.word	.LANCHOR10
 6591 013c 00000000 		.word	.LANCHOR12
 6592 0140 00000000 		.word	.LANCHOR14
 6593 0144 00000000 		.word	.LANCHOR16
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 283


 6594 0148 00000000 		.word	_ZN5daisy3LedD1Ev
 6595 014c 00000000 		.word	.LANCHOR18
 6596 0150 00000000 		.word	.LANCHOR1
 6597 0154 00000000 		.word	.LANCHOR21
 6598 0158 00000000 		.word	.LANCHOR23
 6599 015c 00000000 		.word	.LANCHOR25
 6600 0160 00000000 		.word	.LANCHOR27
 6601 0164 00000000 		.word	__tcf_0
 6602 0168 00000000 		.word	.LANCHOR5
 6603 016c 00000000 		.word	track1_loc
 6604 0170 00000000 		.word	track2_loc
 6605 0174 00000000 		.word	track3_loc
 6606 0178 00000000 		.word	track4_loc
 6607 017c 00000000 		.word	.LANCHOR0
 6608 0180 00000000 		.word	__tcf_1
 6609 0184 00000000 		.word	_ZN8TapeLoopD1Ev
 6610 0188 00000000 		.word	.LANCHOR6
 6611 018c 00000000 		.word	.LANCHOR7
 6612 0190 00000000 		.word	.LANCHOR8
 6613              	.LBE2490:
 6614              	.LBE2492:
 6615              		.cfi_endproc
 6616              	.LFE5451:
 6618              		.section	.init_array,"aw",%init_array
 6619              		.align	2
 6620 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 6621              		.global	warble
 6622              		.global	quality
 6623              		.global	tracks
 6624              		.global	active_track
 6625              		.global	track4
 6626              		.global	track4_loc
 6627              		.global	track3
 6628              		.global	track3_loc
 6629              		.global	track2
 6630              		.global	track2_loc
 6631              		.global	track1
 6632              		.global	track1_loc
 6633              		.global	LEDs
 6634              		.global	track4_LED_Brightness
 6635              		.global	track4_LED
 6636              		.global	track3_LED_Brightness
 6637              		.global	track3_LED
 6638              		.global	track2_LED_Brightness
 6639              		.global	track2_LED
 6640              		.global	track1_LED_Brightness
 6641              		.global	track1_LED
 6642              		.global	record_button
 6643              		.global	play_pause_button
 6644              		.global	track4_sel
 6645              		.global	track3_sel
 6646              		.global	track2_sel
 6647              		.global	track1_sel
 6648              		.global	rcd_pin
 6649              		.global	ply_pin
 6650              		.global	trk4LED_pin
 6651              		.global	trk3LED_pin
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 284


 6652              		.global	trk2LED_pin
 6653              		.global	trk1LED_pin
 6654              		.global	trk4Sel_pin
 6655              		.global	trk3Sel_pin
 6656              		.global	trk2Sel_pin
 6657              		.global	trk1Sel_pin
 6658              		.global	WARBLE_PIN
 6659              		.global	QUALITY_PIN
 6660              		.global	MUX_INH_PIN
 6661              		.global	MUX_OUT_PIN
 6662              		.global	MUX_C_PIN
 6663              		.global	MUX_B_PIN
 6664              		.global	MUX_A_PIN
 6665              		.global	adc_config
 6666              		.global	hw
 6667              		.section	.bss.LEDs,"aw",%nobits
 6668              		.align	2
 6669              		.set	.LANCHOR28,. + 0
 6672              	LEDs:
 6673 0000 00000000 		.space	112
 6673      00000000 
 6673      00000000 
 6673      00000000 
 6673      00000000 
 6674              		.section	.bss.active_track,"aw",%nobits
 6675              		.align	2
 6676              		.set	.LANCHOR2,. + 0
 6679              	active_track:
 6680 0000 00000000 		.space	4
 6681              		.section	.bss.adc_config,"aw",%nobits
 6682              		.align	2
 6683              		.set	.LANCHOR33,. + 0
 6686              	adc_config:
 6687 0000 00000000 		.space	54
 6687      00000000 
 6687      00000000 
 6687      00000000 
 6687      00000000 
 6688              		.section	.bss.hw,"aw",%nobits
 6689              		.align	2
 6690              		.set	.LANCHOR4,. + 0
 6693              	hw:
 6694 0000 00000000 		.space	64
 6694      00000000 
 6694      00000000 
 6694      00000000 
 6694      00000000 
 6695              		.section	.bss.play_pause_button,"aw",%nobits
 6696              		.align	2
 6697              		.set	.LANCHOR18,. + 0
 6700              	play_pause_button:
 6701 0000 00000000 		.space	16
 6701      00000000 
 6701      00000000 
 6701      00000000 
 6702              		.section	.bss.record_button,"aw",%nobits
 6703              		.align	2
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 285


 6704              		.set	.LANCHOR1,. + 0
 6707              	record_button:
 6708 0000 00000000 		.space	16
 6708      00000000 
 6708      00000000 
 6708      00000000 
 6709              		.section	.bss.track1,"aw",%nobits
 6710              		.align	2
 6711              		.set	.LANCHOR5,. + 0
 6714              	track1:
 6715 0000 00000000 		.space	108
 6715      00000000 
 6715      00000000 
 6715      00000000 
 6715      00000000 
 6716              		.section	.bss.track1_LED,"aw",%nobits
 6717              		.align	2
 6718              		.set	.LANCHOR21,. + 0
 6721              	track1_LED:
 6722 0000 00000000 		.space	28
 6722      00000000 
 6722      00000000 
 6722      00000000 
 6722      00000000 
 6723              		.section	.bss.track1_sel,"aw",%nobits
 6724              		.align	2
 6725              		.set	.LANCHOR10,. + 0
 6728              	track1_sel:
 6729 0000 00000000 		.space	16
 6729      00000000 
 6729      00000000 
 6729      00000000 
 6730              		.section	.bss.track2,"aw",%nobits
 6731              		.align	2
 6732              		.set	.LANCHOR6,. + 0
 6735              	track2:
 6736 0000 00000000 		.space	108
 6736      00000000 
 6736      00000000 
 6736      00000000 
 6736      00000000 
 6737              		.section	.bss.track2_LED,"aw",%nobits
 6738              		.align	2
 6739              		.set	.LANCHOR23,. + 0
 6742              	track2_LED:
 6743 0000 00000000 		.space	28
 6743      00000000 
 6743      00000000 
 6743      00000000 
 6743      00000000 
 6744              		.section	.bss.track2_sel,"aw",%nobits
 6745              		.align	2
 6746              		.set	.LANCHOR12,. + 0
 6749              	track2_sel:
 6750 0000 00000000 		.space	16
 6750      00000000 
 6750      00000000 
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 286


 6750      00000000 
 6751              		.section	.bss.track3,"aw",%nobits
 6752              		.align	2
 6753              		.set	.LANCHOR7,. + 0
 6756              	track3:
 6757 0000 00000000 		.space	108
 6757      00000000 
 6757      00000000 
 6757      00000000 
 6757      00000000 
 6758              		.section	.bss.track3_LED,"aw",%nobits
 6759              		.align	2
 6760              		.set	.LANCHOR25,. + 0
 6763              	track3_LED:
 6764 0000 00000000 		.space	28
 6764      00000000 
 6764      00000000 
 6764      00000000 
 6764      00000000 
 6765              		.section	.bss.track3_sel,"aw",%nobits
 6766              		.align	2
 6767              		.set	.LANCHOR14,. + 0
 6770              	track3_sel:
 6771 0000 00000000 		.space	16
 6771      00000000 
 6771      00000000 
 6771      00000000 
 6772              		.section	.bss.track4,"aw",%nobits
 6773              		.align	2
 6774              		.set	.LANCHOR8,. + 0
 6777              	track4:
 6778 0000 00000000 		.space	108
 6778      00000000 
 6778      00000000 
 6778      00000000 
 6778      00000000 
 6779              		.section	.bss.track4_LED,"aw",%nobits
 6780              		.align	2
 6781              		.set	.LANCHOR27,. + 0
 6784              	track4_LED:
 6785 0000 00000000 		.space	28
 6785      00000000 
 6785      00000000 
 6785      00000000 
 6785      00000000 
 6786              		.section	.bss.track4_sel,"aw",%nobits
 6787              		.align	2
 6788              		.set	.LANCHOR16,. + 0
 6791              	track4_sel:
 6792 0000 00000000 		.space	16
 6792      00000000 
 6792      00000000 
 6792      00000000 
 6793              		.section	.bss.tracks,"aw",%nobits
 6794              		.align	2
 6795              		.set	.LANCHOR0,. + 0
 6798              	tracks:
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 287


 6799 0000 00000000 		.space	432
 6799      00000000 
 6799      00000000 
 6799      00000000 
 6799      00000000 
 6800              		.section	.bss.warble,"aw",%nobits
 6801              		.align	2
 6802              		.set	.LANCHOR36,. + 0
 6805              	warble:
 6806 0000 00000000 		.space	4
 6807              		.section	.data.MUX_A_PIN,"aw"
 6808              		.align	2
 6809              		.set	.LANCHOR30,. + 0
 6812              	MUX_A_PIN:
 6813 0000 00       		.byte	0
 6814 0001 07       		.byte	7
 6815              		.section	.data.MUX_B_PIN,"aw"
 6816              		.align	2
 6817              		.set	.LANCHOR31,. + 0
 6820              	MUX_B_PIN:
 6821 0000 00       		.byte	0
 6822 0001 06       		.byte	6
 6823              		.section	.data.MUX_C_PIN,"aw"
 6824              		.align	2
 6825              		.set	.LANCHOR32,. + 0
 6828              	MUX_C_PIN:
 6829 0000 02       		.byte	2
 6830 0001 01       		.byte	1
 6831              		.section	.data.MUX_INH_PIN,"aw"
 6832              		.align	2
 6835              	MUX_INH_PIN:
 6836 0000 02       		.byte	2
 6837 0001 04       		.byte	4
 6838              		.section	.data.MUX_OUT_PIN,"aw"
 6839              		.align	2
 6840              		.set	.LANCHOR29,. + 0
 6843              	MUX_OUT_PIN:
 6844 0000 01       		.byte	1
 6845 0001 01       		.byte	1
 6846              		.section	.data.QUALITY_PIN,"aw"
 6847              		.align	2
 6848              		.set	.LANCHOR34,. + 0
 6851              	QUALITY_PIN:
 6852 0000 02       		.byte	2
 6853 0001 00       		.byte	0
 6854              		.section	.data.WARBLE_PIN,"aw"
 6855              		.align	2
 6856              		.set	.LANCHOR35,. + 0
 6859              	WARBLE_PIN:
 6860 0000 00       		.byte	0
 6861 0001 03       		.byte	3
 6862              		.section	.data.ply_pin,"aw"
 6863              		.align	2
 6864              		.set	.LANCHOR17,. + 0
 6867              	ply_pin:
 6868 0000 01       		.byte	1
 6869 0001 08       		.byte	8
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 288


 6870              		.section	.data.quality,"aw"
 6871              		.align	2
 6872              		.set	.LANCHOR3,. + 0
 6875              	quality:
 6876 0000 0000803F 		.word	1065353216
 6877              		.section	.data.rcd_pin,"aw"
 6878              		.align	2
 6879              		.set	.LANCHOR19,. + 0
 6882              	rcd_pin:
 6883 0000 01       		.byte	1
 6884 0001 09       		.byte	9
 6885              		.section	.data.track1_LED_Brightness,"aw"
 6886              		.align	2
 6889              	track1_LED_Brightness:
 6890 0000 0000803F 		.word	1065353216
 6891              		.section	.data.track2_LED_Brightness,"aw"
 6892              		.align	2
 6895              	track2_LED_Brightness:
 6896 0000 0000803F 		.word	1065353216
 6897              		.section	.data.track3_LED_Brightness,"aw"
 6898              		.align	2
 6901              	track3_LED_Brightness:
 6902 0000 0000803F 		.word	1065353216
 6903              		.section	.data.track4_LED_Brightness,"aw"
 6904              		.align	2
 6907              	track4_LED_Brightness:
 6908 0000 0000803F 		.word	1065353216
 6909              		.section	.data.trk1LED_pin,"aw"
 6910              		.align	2
 6911              		.set	.LANCHOR20,. + 0
 6914              	trk1LED_pin:
 6915 0000 03       		.byte	3
 6916 0001 02       		.byte	2
 6917              		.section	.data.trk1Sel_pin,"aw"
 6918              		.align	2
 6919              		.set	.LANCHOR9,. + 0
 6922              	trk1Sel_pin:
 6923 0000 02       		.byte	2
 6924 0001 0B       		.byte	11
 6925              		.section	.data.trk2LED_pin,"aw"
 6926              		.align	2
 6927              		.set	.LANCHOR22,. + 0
 6930              	trk2LED_pin:
 6931 0000 02       		.byte	2
 6932 0001 0C       		.byte	12
 6933              		.section	.data.trk2Sel_pin,"aw"
 6934              		.align	2
 6935              		.set	.LANCHOR11,. + 0
 6938              	trk2Sel_pin:
 6939 0000 02       		.byte	2
 6940 0001 0A       		.byte	10
 6941              		.section	.data.trk3LED_pin,"aw"
 6942              		.align	2
 6943              		.set	.LANCHOR24,. + 0
 6946              	trk3LED_pin:
 6947 0000 06       		.byte	6
 6948 0001 0A       		.byte	10
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 289


 6949              		.section	.data.trk3Sel_pin,"aw"
 6950              		.align	2
 6951              		.set	.LANCHOR13,. + 0
 6954              	trk3Sel_pin:
 6955 0000 02       		.byte	2
 6956 0001 09       		.byte	9
 6957              		.section	.data.trk4LED_pin,"aw"
 6958              		.align	2
 6959              		.set	.LANCHOR26,. + 0
 6962              	trk4LED_pin:
 6963 0000 06       		.byte	6
 6964 0001 0B       		.byte	11
 6965              		.section	.data.trk4Sel_pin,"aw"
 6966              		.align	2
 6967              		.set	.LANCHOR15,. + 0
 6970              	trk4Sel_pin:
 6971 0000 02       		.byte	2
 6972 0001 08       		.byte	8
 6973              		.section	.sdram_bss,"aw"
 6974              		.align	2
 6977              	track4_loc:
 6978 0000 00000000 		.space	2560000
 6978      00000000 
 6978      00000000 
 6978      00000000 
 6978      00000000 
 6981              	track3_loc:
 6982 271000 00000000 		.space	2560000
 6982      00000000 
 6982      00000000 
 6982      00000000 
 6982      00000000 
 6985              	track2_loc:
 6986 4e2000 00000000 		.space	2560000
 6986      00000000 
 6986      00000000 
 6986      00000000 
 6986      00000000 
 6989              	track1_loc:
 6990 753000 00000000 		.space	2560000
 6990      00000000 
 6990      00000000 
 6990      00000000 
 6990      00000000 
 6991              		.text
 6992              	.Letext0:
 6993              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 6994              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 6995              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 6996              		.file 28 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 6997              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 6998              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 6999              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 7000              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 7001              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 7002              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 7003              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 290


 7004              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 7005              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 7006              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 7007              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 7008              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
 7009              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 7010              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 7011              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 7012              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 7013              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 7014              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 7015              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 7016              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
 7017              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
 7018              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 7019              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 7020              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 7021              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
 7022              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 7023              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 7024              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 7025              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 7026              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 7027              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 7028              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 7029              		.file 61 "../../libDaisy//src/per/tim.h"
 7030              		.file 62 "../../libDaisy//src/hid/logger_impl.h"
 7031              		.file 63 "../../libDaisy//src/util/wav_format.h"
 7032              		.file 64 "../../libDaisy//src/dev/max11300.h"
 7033              		.file 65 "../../libDaisy//src/hid/logger.h"
 7034              		.file 66 "../../libDaisy//src/per/gpio.h"
 7035              		.file 67 "../../libDaisy//src/dev/sdram.h"
 7036              		.file 68 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 7037              		.file 69 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 7038              		.file 70 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 7039              		.file 71 "../../DaisySP//Source/Control/adenv.h"
 7040              		.file 72 "../../DaisySP//Source/Utility/dsp.h"
 7041              		.file 73 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 7042              		.file 74 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 7043              		.file 75 "../../libDaisy//src/dev/sr_595.h"
 7044              		.file 76 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
 7045              		.file 77 "<built-in>"
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 291


DEFINED SYMBOLS
                            *ABS*:00000000 TapeLooper.cpp
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:17     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:43     .text._ZN5daisy3LedD2Ev:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:51     .text._ZN5daisy3LedD2Ev:00000000 _ZN5daisy3LedD2Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:51     .text._ZN5daisy3LedD2Ev:00000000 _ZN5daisy3LedD1Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:68     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:76     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:76     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:117    .text._ZN8TapeLoopD2Ev:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:125    .text._ZN8TapeLoopD2Ev:00000000 _ZN8TapeLoopD2Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:125    .text._ZN8TapeLoopD2Ev:00000000 _ZN8TapeLoopD1Ev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:148    .text.__tcf_0:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:155    .text.__tcf_0:00000000 __tcf_0
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:169    .text.__tcf_1:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:176    .text.__tcf_1:00000000 __tcf_1
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:187    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:195    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:2398   .text._Z13AudioCallbackPKPKfPPfj:00000390 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:2445   .text._Z13AudioCallbackPKPKfPPfj:000003d4 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:3263   .text._Z13AudioCallbackPKPKfPPfj:00000594 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:3277   .text._ZN8TapeLoopC2ERA2_A320000_f:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:3285   .text._ZN8TapeLoopC2ERA2_A320000_f:00000000 _ZN8TapeLoopC2ERA2_A320000_f
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:3468   .text._ZN8TapeLoopC2ERA2_A320000_f:00000054 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:3285   .text._ZN8TapeLoopC2ERA2_A320000_f:00000000 _ZN8TapeLoopC1ERA2_A320000_f
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:3476   .text._Z11tracks_Initv:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:3484   .text._Z11tracks_Initv:00000000 _Z11tracks_Initv
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:4381   .text._Z11tracks_Initv:00000194 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:4392   .text._Z21saturate_and_compressf:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:4400   .text._Z21saturate_and_compressf:00000000 _Z21saturate_and_compressf
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:4451   .text._Z21saturate_and_compressf:00000038 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:4462   .text._Z16peripherals_Initv:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:4470   .text._Z16peripherals_Initv:00000000 _Z16peripherals_Initv
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5033   .text._Z16peripherals_Initv:00000264 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5069   .text._Z5blinkii:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5077   .text._Z5blinkii:00000000 _Z5blinkii
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5155   .text._Z5blinkii:00000048 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5162   .text._Z12update_trackif:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5170   .text._Z12update_trackif:00000000 _Z12update_trackif
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5323   .text._Z12update_trackif:00000054 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5329   .text._Z14update_buttonsv:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5337   .text._Z14update_buttonsv:00000000 _Z14update_buttonsv
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5623   .text._Z14update_buttonsv:000000e8 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5633   .text._Z11update_potsv:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5641   .text._Z11update_potsv:00000000 _Z11update_potsv
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5842   .text._Z11update_potsv:000000b8 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5850   .text._Z11update_LEDsv:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5858   .text._Z11update_LEDsv:00000000 _Z11update_LEDsv
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5962   .text._Z11update_LEDsv:00000060 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5971   .text._Z6updatev:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:5979   .text._Z6updatev:00000000 _Z6updatev
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6011   .rodata._Z9print_allv.str1.4:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6015   .text._Z9print_allv:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6023   .text._Z9print_allv:00000000 _Z9print_allv
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6128   .text._Z9print_allv:0000004c $d
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 292


C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6139   .text.startup.main:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6147   .text.startup.main:00000000 main
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6215   .text.startup.main:00000038 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6223   .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6230   .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6586   .text.startup._GLOBAL__sub_I_hw:00000128 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6989   .sdram_bss:00753000 track1_loc
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6985   .sdram_bss:004e2000 track2_loc
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6981   .sdram_bss:00271000 track3_loc
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6977   .sdram_bss:00000000 track4_loc
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6619   .init_array:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6805   .bss.warble:00000000 warble
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6875   .data.quality:00000000 quality
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6798   .bss.tracks:00000000 tracks
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6679   .bss.active_track:00000000 active_track
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6777   .bss.track4:00000000 track4
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6756   .bss.track3:00000000 track3
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6735   .bss.track2:00000000 track2
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6714   .bss.track1:00000000 track1
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6672   .bss.LEDs:00000000 LEDs
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6907   .data.track4_LED_Brightness:00000000 track4_LED_Brightness
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6784   .bss.track4_LED:00000000 track4_LED
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6901   .data.track3_LED_Brightness:00000000 track3_LED_Brightness
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6763   .bss.track3_LED:00000000 track3_LED
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6895   .data.track2_LED_Brightness:00000000 track2_LED_Brightness
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6742   .bss.track2_LED:00000000 track2_LED
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6889   .data.track1_LED_Brightness:00000000 track1_LED_Brightness
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6721   .bss.track1_LED:00000000 track1_LED
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6707   .bss.record_button:00000000 record_button
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6700   .bss.play_pause_button:00000000 play_pause_button
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6791   .bss.track4_sel:00000000 track4_sel
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6770   .bss.track3_sel:00000000 track3_sel
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6749   .bss.track2_sel:00000000 track2_sel
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6728   .bss.track1_sel:00000000 track1_sel
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6882   .data.rcd_pin:00000000 rcd_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6867   .data.ply_pin:00000000 ply_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6962   .data.trk4LED_pin:00000000 trk4LED_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6946   .data.trk3LED_pin:00000000 trk3LED_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6930   .data.trk2LED_pin:00000000 trk2LED_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6914   .data.trk1LED_pin:00000000 trk1LED_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6970   .data.trk4Sel_pin:00000000 trk4Sel_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6954   .data.trk3Sel_pin:00000000 trk3Sel_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6938   .data.trk2Sel_pin:00000000 trk2Sel_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6922   .data.trk1Sel_pin:00000000 trk1Sel_pin
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6859   .data.WARBLE_PIN:00000000 WARBLE_PIN
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6851   .data.QUALITY_PIN:00000000 QUALITY_PIN
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6835   .data.MUX_INH_PIN:00000000 MUX_INH_PIN
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6843   .data.MUX_OUT_PIN:00000000 MUX_OUT_PIN
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6828   .data.MUX_C_PIN:00000000 MUX_C_PIN
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6820   .data.MUX_B_PIN:00000000 MUX_B_PIN
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6812   .data.MUX_A_PIN:00000000 MUX_A_PIN
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6686   .bss.adc_config:00000000 adc_config
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6693   .bss.hw:00000000 hw
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6668   .bss.LEDs:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6675   .bss.active_track:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6682   .bss.adc_config:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6689   .bss.hw:00000000 $d
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 293


C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6696   .bss.play_pause_button:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6703   .bss.record_button:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6710   .bss.track1:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6717   .bss.track1_LED:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6724   .bss.track1_sel:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6731   .bss.track2:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6738   .bss.track2_LED:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6745   .bss.track2_sel:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6752   .bss.track3:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6759   .bss.track3_LED:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6766   .bss.track3_sel:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6773   .bss.track4:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6780   .bss.track4_LED:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6787   .bss.track4_sel:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6794   .bss.tracks:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6801   .bss.warble:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6808   .data.MUX_A_PIN:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6816   .data.MUX_B_PIN:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6824   .data.MUX_C_PIN:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6832   .data.MUX_INH_PIN:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6839   .data.MUX_OUT_PIN:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6847   .data.QUALITY_PIN:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6855   .data.WARBLE_PIN:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6863   .data.ply_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6871   .data.quality:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6878   .data.rcd_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6886   .data.track1_LED_Brightness:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6892   .data.track2_LED_Brightness:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6898   .data.track3_LED_Brightness:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6904   .data.track4_LED_Brightness:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6910   .data.trk1LED_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6918   .data.trk1Sel_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6926   .data.trk2LED_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6934   .data.trk2Sel_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6942   .data.trk3LED_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6950   .data.trk3Sel_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6958   .data.trk4LED_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6966   .data.trk4Sel_pin:00000000 $d
C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s:6974   .sdram_bss:00000000 $d
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy3LedD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN8TapeLoopD5Ev
                           .group:00000000 _ZN8TapeLoopC5ERA2_A320000_f

UNDEFINED SYMBOLS
fmodf
fmod
_Znwj
_ZdlPvj
_ZN5daisy6Switch8DebounceEv
atanf
_ZN5daisy9DaisySeed15AudioSampleRateEv
memset
_ZN5daisy6System6GetNowEv
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy3Led4InitE12dsy_gpio_pinbf
ARM GAS  C:\Users\Grant\AppData\Local\Temp\ccNjaI4C.s 			page 294


_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_NS0_15ConversionSpeedE
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy3Led3SetEf
_ZN5daisy3Led6UpdateEv
_ZN5daisy9DaisySeed7DelayMsEj
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZNK5daisy9AdcHandle8GetFloatEh
sinf
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
memcpy
__dso_handle
